

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Apr 07 12:56:39 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    64  0000                     
    65                           	psect	idataCOMRAM
    66  001352                     __pidataCOMRAM:
    67                           	opt stack 0
    68                           
    69                           ;initializer for _fwd_state
    70  001352  0001               	dw	1
    71                           
    72                           ;initializer for _left_state
    73  001354  0001               	dw	1
    74                           
    75                           ;initializer for _maxTickOne
    76  001356  0258               	dw	600
    77                           
    78                           ;initializer for _maxTickZero
    79  001358  025D               	dw	605
    80                           
    81                           ;initializer for _rev_state
    82  00135A  0001               	dw	1
    83                           
    84                           ;initializer for _right_state
    85  00135C  0001               	dw	1
    86                           
    87                           ;initializer for _msgtype_moto
    88  00135E  01                 	db	1
    89  0000                     _BAUDCONbits	set	4024
    90  0000                     _INTCONbits	set	4082
    91  0000                     _IPR1bits	set	3999
    92  0000                     _LATCbits	set	3979
    93  0000                     _OSCCON	set	4051
    94  0000                     _OSCCONbits	set	4051
    95  0000                     _OSCTUNEbits	set	3995
    96  0000                     _PIE1bits	set	3997
    97  0000                     _PIR1bits	set	3998
    98  0000                     _PORTB	set	3969
    99  0000                     _RCONbits	set	4048
   100  0000                     _RCSTA	set	4011
   101  0000                     _RCSTAbits	set	4011
   102  0000                     _SPBRG	set	4015
   103  0000                     _SPBRGH	set	4016
   104  0000                     _SSPADD	set	4040
   105  0000                     _SSPBUF	set	4041
   106  0000                     _SSPCON1	set	4038
   107  0000                     _SSPCON1bits	set	4038
   108  0000                     _SSPCON2	set	4037
   109  0000                     _SSPCON2bits	set	4037
   110  0000                     _SSPSTAT	set	4039
   111  0000                     _SSPSTATbits	set	4039
   112  0000                     _T0CON	set	4053
   113  0000                     _T0CONbits	set	4053
   114  0000                     _T1CON	set	4045
   115  0000                     _T1CONbits	set	4045
   116  0000                     _TMR0H	set	4055
   117  0000                     _TMR0L	set	4054
   118  0000                     _TMR1H	set	4047
   119  0000                     _TMR1L	set	4046
   120  0000                     _TRISCbits	set	3988
   121  0000                     _TXREG	set	4013
   122  0000                     _TXSTA	set	4012
   123  0000                     _TXSTAbits	set	4012
   124                           
   125                           	psect	nvCOMRAM
   126  000062                     __pnvCOMRAM:
   127                           	opt stack 0
   128  000062                     _ic_ptr:
   129                           	opt stack 0
   130  000062                     	ds	2
   131                           
   132                           	psect	nvBANK0
   133  0000C2                     __pnvBANK0:
   134                           	opt stack 0
   135  0000C2                     _uc_ptr:
   136                           	opt stack 0
   137  0000C2                     	ds	2
   138                           
   139                           ; #config settings
   140  0000                     
   141                           	psect	cinit
   142  000EBA                     __pcinit:
   143                           	opt stack 0
   144  000EBA                     start_initialization:
   145                           	opt stack 0
   146  000EBA                     __initialization:
   147                           	opt stack 0
   148                           
   149                           ; Clear objects allocated to BANK1 (216 bytes)
   150  000EBA  EE01  F000         	lfsr	0,__pbssBANK1
   151  000EBE  0ED8               	movlw	216
   152  000EC0                     clear_0:
   153  000EC0  6AEE               	clrf	postinc0,c
   154  000EC2  06E8               	decf	wreg,f,c
   155  000EC4  E1FD               	bnz	clear_0
   156                           
   157                           ; Clear objects allocated to BANK0 (22 bytes)
   158  000EC6  EE00  F0AC         	lfsr	0,__pbssBANK0
   159  000ECA  0E16               	movlw	22
   160  000ECC                     clear_1:
   161  000ECC  6AEE               	clrf	postinc0,c
   162  000ECE  06E8               	decf	wreg,f,c
   163  000ED0  E1FD               	bnz	clear_1
   164                           
   165                           ; Clear objects allocated to COMRAM (26 bytes)
   166  000ED2  EE00  F03B         	lfsr	0,__pbssCOMRAM
   167  000ED6  0E1A               	movlw	26
   168  000ED8                     clear_2:
   169  000ED8  6AEE               	clrf	postinc0,c
   170  000EDA  06E8               	decf	wreg,f,c
   171  000EDC  E1FD               	bnz	clear_2
   172                           
   173                           ; Initialize objects allocated to COMRAM (13 bytes)
   174                           ; load TBLPTR registers with __pidataCOMRAM
   175  000EDE  0E52               	movlw	low __pidataCOMRAM
   176  000EE0  6EF6               	movwf	tblptrl,c
   177  000EE2  0E13               	movlw	high __pidataCOMRAM
   178  000EE4  6EF7               	movwf	tblptrh,c
   179  000EE6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   180  000EE8  6EF8               	movwf	tblptru,c
   181  000EEA  EE00  F055         	lfsr	0,__pdataCOMRAM
   182  000EEE  EE10 F00D          	lfsr	1,13
   183  000EF2                     copy_data0:
   184  000EF2  0009               	tblrd		*+
   185  000EF4  CFF5 FFEE          	movff	tablat,postinc0
   186  000EF8  50E5               	movf	postdec1,w,c
   187  000EFA  50E1               	movf	fsr1l,w,c
   188  000EFC  E1FA               	bnz	copy_data0
   189  000EFE                     end_of_initialization:
   190                           	opt stack 0
   191  000EFE                     __end_of__initialization:
   192                           	opt stack 0
   193  000EFE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   194  000F00  6EF8               	movwf	tblptru,c
   195  000F02  0100               	movlb	0
   196  000F04  EF71  F002         	goto	_main	;jump to C main() function
   197                           tblptru	equ	0xFF8
   198                           tblptrh	equ	0xFF7
   199                           tblptrl	equ	0xFF6
   200                           tablat	equ	0xFF5
   201                           postinc0	equ	0xFEE
   202                           wreg	equ	0xFE8
   203                           postdec1	equ	0xFE5
   204                           fsr1l	equ	0xFE1
   205                           
   206                           	psect	bssCOMRAM
   207  00003B                     __pbssCOMRAM:
   208                           	opt stack 0
   209  00003B                     _buff:
   210                           	opt stack 0
   211  00003B                     	ds	10
   212  000045                     _t0thread_data:
   213                           	opt stack 0
   214  000045                     	ds	2
   215  000047                     _timer0Counter:
   216                           	opt stack 0
   217  000047                     	ds	2
   218  000049                     _timer1Counter:
   219                           	opt stack 0
   220  000049                     	ds	2
   221  00004B                     _MQ_Main_Willing_to_block:
   222                           	opt stack 0
   223  00004B                     	ds	1
   224  00004C                     _USART_Status:
   225                           	opt stack 0
   226  00004C                     	ds	1
   227  00004D                     _last_reg_recvd:
   228                           	opt stack 0
   229  00004D                     	ds	1
   230  00004E                     _length:
   231                           	opt stack 0
   232  00004E                     	ds	1
   233  00004F                     _status:
   234                           	opt stack 0
   235  00004F                     	ds	1
   236  000050                     _motorEncoderBuffer:
   237                           	opt stack 0
   238  000050                     	ds	5
   239                           tblptru	equ	0xFF8
   240                           tblptrh	equ	0xFF7
   241                           tblptrl	equ	0xFF6
   242                           tablat	equ	0xFF5
   243                           postinc0	equ	0xFEE
   244                           wreg	equ	0xFE8
   245                           postdec1	equ	0xFE5
   246                           fsr1l	equ	0xFE1
   247                           
   248                           	psect	dataCOMRAM
   249  000055                     __pdataCOMRAM:
   250                           	opt stack 0
   251  000055                     _fwd_state:
   252                           	opt stack 0
   253  000055                     	ds	2
   254  000057                     _left_state:
   255                           	opt stack 0
   256  000057                     	ds	2
   257  000059                     _maxTickOne:
   258                           	opt stack 0
   259  000059                     	ds	2
   260  00005B                     _maxTickZero:
   261                           	opt stack 0
   262  00005B                     	ds	2
   263  00005D                     _rev_state:
   264                           	opt stack 0
   265  00005D                     	ds	2
   266  00005F                     _right_state:
   267                           	opt stack 0
   268  00005F                     	ds	2
   269  000061                     _msgtype_moto:
   270                           	opt stack 0
   271  000061                     	ds	1
   272                           tblptru	equ	0xFF8
   273                           tblptrh	equ	0xFF7
   274                           tblptrl	equ	0xFF6
   275                           tablat	equ	0xFF5
   276                           postinc0	equ	0xFEE
   277                           wreg	equ	0xFE8
   278                           postdec1	equ	0xFE5
   279                           fsr1l	equ	0xFE1
   280                           
   281                           	psect	bssBANK0
   282  0000AC                     __pbssBANK0:
   283                           	opt stack 0
   284  0000AC                     _msgbuffer:
   285                           	opt stack 0
   286  0000AC                     	ds	20
   287  0000C0                     _bufferFlag:
   288                           	opt stack 0
   289  0000C0                     	ds	2
   290                           tblptru	equ	0xFF8
   291                           tblptrh	equ	0xFF7
   292                           tblptrl	equ	0xFF6
   293                           tablat	equ	0xFF5
   294                           postinc0	equ	0xFEE
   295                           wreg	equ	0xFE8
   296                           postdec1	equ	0xFE5
   297                           fsr1l	equ	0xFE1
   298                           
   299                           	psect	bssBANK1
   300  000100                     __pbssBANK1:
   301                           	opt stack 0
   302  000100                     _FromMainHigh_MQ:
   303                           	opt stack 0
   304  000100                     	ds	54
   305  000136                     _FromMainLow_MQ:
   306                           	opt stack 0
   307  000136                     	ds	54
   308  00016C                     _ToMainHigh_MQ:
   309                           	opt stack 0
   310  00016C                     	ds	54
   311  0001A2                     _ToMainLow_MQ:
   312                           	opt stack 0
   313  0001A2                     	ds	54
   314                           tblptru	equ	0xFF8
   315                           tblptrh	equ	0xFF7
   316                           tblptrl	equ	0xFF6
   317                           tablat	equ	0xFF5
   318                           postinc0	equ	0xFEE
   319                           wreg	equ	0xFE8
   320                           postdec1	equ	0xFE5
   321                           fsr1l	equ	0xFE1
   322                           
   323                           	psect	cstackBANK2
   324  000200                     __pcstackBANK2:
   325                           	opt stack 0
   326  000200                     main@msgbuffer:
   327                           	opt stack 0
   328                           
   329                           ; 11 bytes @ 0x0
   330  000200                     	ds	11
   331  00020B                     main@config1:
   332                           	opt stack 0
   333                           
   334                           ; 1 bytes @ 0xB
   335  00020B                     	ds	1
   336  00020C                     main@config2:
   337                           	opt stack 0
   338                           
   339                           ; 1 bytes @ 0xC
   340  00020C                     	ds	1
   341  00020D                     main@portconfig:
   342                           	opt stack 0
   343                           
   344                           ; 1 bytes @ 0xD
   345  00020D                     	ds	1
   346  00020E                     main@uthread_data:
   347                           	opt stack 0
   348                           
   349                           ; 2 bytes @ 0xE
   350  00020E                     	ds	2
   351  000210                     main@t0thread_data:
   352                           	opt stack 0
   353                           
   354                           ; 2 bytes @ 0x10
   355  000210                     	ds	2
   356  000212                     main@t1thread_data:
   357                           	opt stack 0
   358                           
   359                           ; 2 bytes @ 0x12
   360  000212                     	ds	2
   361  000214                     main@length:
   362                           	opt stack 0
   363                           
   364                           ; 1 bytes @ 0x14
   365  000214                     	ds	1
   366  000215                     main@msgtype:
   367                           	opt stack 0
   368                           
   369                           ; 1 bytes @ 0x15
   370  000215                     	ds	1
   371  000216                     main@uc:
   372                           	opt stack 0
   373                           
   374                           ; 12 bytes @ 0x16
   375  000216                     	ds	12
   376  000222                     main@ic:
   377                           	opt stack 0
   378                           
   379                           ; 28 bytes @ 0x22
   380  000222                     	ds	28
   381                           tblptru	equ	0xFF8
   382                           tblptrh	equ	0xFF7
   383                           tblptrl	equ	0xFF6
   384                           tablat	equ	0xFF5
   385                           postinc0	equ	0xFEE
   386                           wreg	equ	0xFE8
   387                           postdec1	equ	0xFE5
   388                           fsr1l	equ	0xFE1
   389                           
   390                           	psect	cstackBANK0
   391  000080                     __pcstackBANK0:
   392                           	opt stack 0
   393  000080                     ??_InterruptHandlerHigh:
   394                           
   395                           ; 0 bytes @ 0x0
   396  000080                     	ds	14
   397  00008E                     ?_in_high_int:
   398                           	opt stack 0
   399  00008E                     i2c_configure_slave@addr:
   400                           	opt stack 0
   401  00008E                     OpenTimer0@config:
   402                           	opt stack 0
   403  00008E                     OpenTimer1@config:
   404                           	opt stack 0
   405  00008E                     Delay1KTCYx@unit:
   406                           	opt stack 0
   407  00008E                     init_queue@qptr:
   408                           	opt stack 0
   409  00008E                     check_msg@qptr:
   410                           	opt stack 0
   411  00008E                     init_i2c@ic:
   412                           	opt stack 0
   413  00008E                     init_uart_recv@uc:
   414                           	opt stack 0
   415  00008E                     uart_retrieve_buffer@length:
   416                           	opt stack 0
   417  00008E                     timer0_lthread@tptr:
   418                           	opt stack 0
   419  00008E                     init_timer1_lthread@tptr:
   420                           	opt stack 0
   421  00008E                     WriteTimer1@timer1:
   422                           	opt stack 0
   423  00008E                     OpenUSART@spbrg:
   424                           	opt stack 0
   425  00008E                     memcpy@d1:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0xE
   429  00008E                     	ds	2
   430  000090                     ??_OpenUSART:
   431  000090                     ??_init_queue:
   432  000090                     ??_check_msg:
   433  000090                     ?_in_low_int:
   434                           	opt stack 0
   435  000090                     uart_retrieve_buffer@msgbuffer:
   436                           	opt stack 0
   437  000090                     timer0_lthread@msgtype:
   438                           	opt stack 0
   439  000090                     WriteTimer1@timer:
   440                           	opt stack 0
   441  000090                     memcpy@s1:
   442                           	opt stack 0
   443                           
   444                           ; 2 bytes @ 0x10
   445  000090                     	ds	1
   446  000091                     init_queue@i:
   447                           	opt stack 0
   448                           
   449                           ; 1 bytes @ 0x11
   450  000091                     	ds	1
   451  000092                     ??_init_queues:
   452  000092                     ?_in_main:
   453                           	opt stack 0
   454  000092                     timer0_lthread@length:
   455                           	opt stack 0
   456  000092                     uart_lthread@uptr:
   457                           	opt stack 0
   458  000092                     memcpy@n:
   459                           	opt stack 0
   460                           
   461                           ; 2 bytes @ 0x12
   462  000092                     	ds	1
   463  000093                     OpenUSART@config:
   464                           	opt stack 0
   465                           
   466                           ; 1 bytes @ 0x13
   467  000093                     	ds	1
   468  000094                     ??_block_on_To_msgqueues:
   469  000094                     timer0_lthread@msgbuffer:
   470                           	opt stack 0
   471  000094                     uart_lthread@msgtype:
   472                           	opt stack 0
   473  000094                     memcpy@d:
   474                           	opt stack 0
   475                           
   476                           ; 2 bytes @ 0x14
   477  000094                     	ds	2
   478  000096                     timer0_lthread@msgval:
   479                           	opt stack 0
   480  000096                     uart_lthread@length:
   481                           	opt stack 0
   482  000096                     memcpy@s:
   483                           	opt stack 0
   484                           
   485                           ; 2 bytes @ 0x16
   486  000096                     	ds	2
   487  000098                     recv_msg@qptr:
   488                           	opt stack 0
   489  000098                     uart_lthread@msgbuffer:
   490                           	opt stack 0
   491                           
   492                           ; 2 bytes @ 0x18
   493  000098                     	ds	2
   494  00009A                     recv_msg@maxlength:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0x1A
   498  00009A                     	ds	1
   499  00009B                     recv_msg@msgtype:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x1B
   503  00009B                     	ds	2
   504  00009D                     recv_msg@data:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x1D
   508  00009D                     	ds	2
   509  00009F                     ??_recv_msg:
   510                           
   511                           ; 0 bytes @ 0x1F
   512  00009F                     	ds	2
   513  0000A1                     recv_msg@slot:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0x21
   517  0000A1                     	ds	1
   518  0000A2                     recv_msg@tlength:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0x22
   522  0000A2                     	ds	2
   523  0000A4                     recv_msg@qmsg:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x24
   527  0000A4                     	ds	2
   528  0000A6                     ToMainLow_recvmsg@msgtype:
   529                           	opt stack 0
   530  0000A6                     ToMainHigh_recvmsg@msgtype:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x26
   534  0000A6                     	ds	2
   535  0000A8                     ToMainLow_recvmsg@data:
   536                           	opt stack 0
   537  0000A8                     ToMainHigh_recvmsg@data:
   538                           	opt stack 0
   539                           
   540                           ; 2 bytes @ 0x28
   541  0000A8                     	ds	2
   542  0000AA                     ToMainLow_recvmsg@maxlength:
   543                           	opt stack 0
   544  0000AA                     ToMainHigh_recvmsg@maxlength:
   545                           	opt stack 0
   546                           
   547                           ; 1 bytes @ 0x2A
   548  0000AA                     	ds	1
   549  0000AB                     ??_main:
   550                           
   551                           ; 0 bytes @ 0x2B
   552  0000AB                     	ds	1
   553                           tblptru	equ	0xFF8
   554                           tblptrh	equ	0xFF7
   555                           tblptrl	equ	0xFF6
   556                           tablat	equ	0xFF5
   557                           postinc0	equ	0xFEE
   558                           wreg	equ	0xFE8
   559                           postdec1	equ	0xFE5
   560                           fsr1l	equ	0xFE1
   561                           
   562                           	psect	cstackCOMRAM
   563  000001                     __pcstackCOMRAM:
   564                           	opt stack 0
   565  000001                     WriteUSART@data:
   566                           	opt stack 0
   567  000001                     i1WriteTimer1@timer1:
   568                           	opt stack 0
   569                           
   570                           ; 2 bytes @ 0x0
   571  000001                     	ds	1
   572  000002                     ??_uart_send_int_handler:
   573                           
   574                           ; 0 bytes @ 0x1
   575  000002                     	ds	1
   576  000003                     i1WriteTimer1@timer:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0x2
   580  000003                     	ds	2
   581  000005                     ??_InterruptHandlerLow:
   582                           
   583                           ; 0 bytes @ 0x4
   584  000005                     	ds	17
   585  000016                     ?i2_in_high_int:
   586                           	opt stack 0
   587  000016                     handle_start@data_read:
   588                           	opt stack 0
   589  000016                     start_i2c_slave_reply@msg:
   590                           	opt stack 0
   591  000016                     WriteTimer0@timer0:
   592                           	opt stack 0
   593  000016                     i2check_msg@qptr:
   594                           	opt stack 0
   595  000016                     i2memcpy@d1:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0x15
   599  000016                     	ds	2
   600  000018                     ??_start_i2c_slave_reply:
   601  000018                     ??i2_check_msg:
   602  000018                     ?i2_in_low_int:
   603                           	opt stack 0
   604  000018                     WriteTimer0@timer:
   605                           	opt stack 0
   606  000018                     i2memcpy@s1:
   607                           	opt stack 0
   608                           
   609                           ; 2 bytes @ 0x17
   610  000018                     	ds	2
   611  00001A                     start_i2c_slave_reply@length:
   612                           	opt stack 0
   613  00001A                     i2memcpy@n:
   614                           	opt stack 0
   615                           
   616                           ; 2 bytes @ 0x19
   617  00001A                     	ds	1
   618  00001B                     ??_readMessages:
   619                           
   620                           ; 0 bytes @ 0x1A
   621  00001B                     	ds	1
   622  00001C                     i2memcpy@d:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x1B
   626  00001C                     	ds	2
   627  00001E                     i2memcpy@s:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x1D
   631  00001E                     	ds	2
   632  000020                     send_msg@qptr:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x1F
   636  000020                     	ds	2
   637  000022                     send_msg@length:
   638                           	opt stack 0
   639                           
   640                           ; 1 bytes @ 0x21
   641  000022                     	ds	1
   642  000023                     send_msg@msgtype:
   643                           	opt stack 0
   644                           
   645                           ; 1 bytes @ 0x22
   646  000023                     	ds	1
   647  000024                     send_msg@data:
   648                           	opt stack 0
   649                           
   650                           ; 2 bytes @ 0x23
   651  000024                     	ds	2
   652  000026                     ??_send_msg:
   653                           
   654                           ; 0 bytes @ 0x25
   655  000026                     	ds	1
   656  000027                     send_msg@tlength:
   657                           	opt stack 0
   658                           
   659                           ; 2 bytes @ 0x26
   660  000027                     	ds	2
   661  000029                     send_msg@slot:
   662                           	opt stack 0
   663                           
   664                           ; 1 bytes @ 0x28
   665  000029                     	ds	1
   666  00002A                     send_msg@qmsg:
   667                           	opt stack 0
   668                           
   669                           ; 2 bytes @ 0x29
   670  00002A                     	ds	2
   671  00002C                     ToMainHigh_sendmsg@msgtype:
   672                           	opt stack 0
   673                           
   674                           ; 1 bytes @ 0x2B
   675  00002C                     	ds	1
   676  00002D                     ToMainHigh_sendmsg@data:
   677                           	opt stack 0
   678                           
   679                           ; 2 bytes @ 0x2C
   680  00002D                     	ds	2
   681  00002F                     ToMainHigh_sendmsg@length:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0x2E
   685  00002F                     	ds	1
   686  000030                     ??_i2c_int_handler:
   687                           
   688                           ; 0 bytes @ 0x2F
   689  000030                     	ds	2
   690  000032                     i2c_int_handler@error_buf:
   691                           	opt stack 0
   692                           
   693                           ; 3 bytes @ 0x31
   694  000032                     	ds	3
   695  000035                     i2c_int_handler@data_written:
   696                           	opt stack 0
   697                           
   698                           ; 1 bytes @ 0x34
   699  000035                     	ds	1
   700  000036                     i2c_int_handler@overrun_error:
   701                           	opt stack 0
   702                           
   703                           ; 1 bytes @ 0x35
   704  000036                     	ds	1
   705  000037                     i2c_int_handler@msg_to_send:
   706                           	opt stack 0
   707                           
   708                           ; 1 bytes @ 0x36
   709  000037                     	ds	1
   710  000038                     i2c_int_handler@i2c_data:
   711                           	opt stack 0
   712                           
   713                           ; 1 bytes @ 0x37
   714  000038                     	ds	1
   715  000039                     i2c_int_handler@msg_ready:
   716                           	opt stack 0
   717                           
   718                           ; 1 bytes @ 0x38
   719  000039                     	ds	1
   720  00003A                     i2c_int_handler@data_read:
   721                           	opt stack 0
   722                           
   723                           ; 1 bytes @ 0x39
   724  00003A                     	ds	1
   725                           tblptru	equ	0xFF8
   726                           tblptrh	equ	0xFF7
   727                           tblptrl	equ	0xFF6
   728                           tablat	equ	0xFF5
   729                           postinc0	equ	0xFEE
   730                           wreg	equ	0xFE8
   731                           postdec1	equ	0xFE5
   732                           fsr1l	equ	0xFE1
   733                           
   734 ;;
   735 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   736 ;;
   737 ;; *************** function _main *****************
   738 ;; Defined at:
   739 ;;		line 189 in file "../src/main.c"
   740 ;; Parameters:    Size  Location     Type
   741 ;;		None
   742 ;; Auto vars:     Size  Location     Type
   743 ;;  ic             28   34[BANK2 ] struct __i2c_comm
   744 ;;  uc             12   22[BANK2 ] struct __uart_comm
   745 ;;  msgbuffer      11    0[BANK2 ] unsigned char [11]
   746 ;;  t1thread_dat    2   18[BANK2 ] struct __timer1_thread_s
   747 ;;  t0thread_dat    2   16[BANK2 ] struct __timer0_thread_s
   748 ;;  uthread_data    2   14[BANK2 ] struct __uart_thread_str
   749 ;;  msgtype         1   21[BANK2 ] unsigned char 
   750 ;;  length          1   20[BANK2 ] char 
   751 ;;  portconfig      1   13[BANK2 ] unsigned char 
   752 ;;  config2         1   12[BANK2 ] unsigned char 
   753 ;;  config1         1   11[BANK2 ] unsigned char 
   754 ;;  i               1    0        unsigned char 
   755 ;;  last_reg_rec    1    0        unsigned char 
   756 ;;  c               1    0        unsigned char 
   757 ;; Return value:  Size  Location     Type
   758 ;;		None               void
   759 ;; Registers used:
   760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   766 ;;      Params:         0       0       0       0       0
   767 ;;      Locals:         0       0       0      62       0
   768 ;;      Temps:          0       1       0       0       0
   769 ;;      Totals:         0       1       0      62       0
   770 ;;Total ram usage:       63 bytes
   771 ;; Hardware stack levels required when called:   12
   772 ;; This function calls:
   773 ;;		_OpenTimer0
   774 ;;		_OpenTimer1
   775 ;;		_OpenUSART
   776 ;;		_ToMainHigh_recvmsg
   777 ;;		_ToMainLow_recvmsg
   778 ;;		_WriteTimer1
   779 ;;		_block_on_To_msgqueues
   780 ;;		_enable_interrupts
   781 ;;		_i2c_configure_slave
   782 ;;		_init_i2c
   783 ;;		_init_queues
   784 ;;		_init_timer1_lthread
   785 ;;		_init_uart_recv
   786 ;;		_timer0_lthread
   787 ;;		_uart_lthread
   788 ;; This function is called by:
   789 ;;		Startup code after reset
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           	psect	text0
   794  0004E2                     __ptext0:
   795                           	opt stack 0
   796  0004E2                     _main:
   797                           	opt stack 18
   798                           
   799                           ;main.c: 190: char c;
   800                           ;main.c: 191: signed char length;
   801                           ;main.c: 192: unsigned char msgtype;
   802                           ;main.c: 193: unsigned char last_reg_recvd;
   803                           ;main.c: 194: uart_comm uc;
   804                           ;main.c: 195: i2c_comm ic;
   805                           ;main.c: 196: unsigned char msgbuffer[10 + 1];
   806                           ;main.c: 197: unsigned char i;
   807                           ;main.c: 198: uart_thread_struct uthread_data;
   808                           ;main.c: 199: timer1_thread_struct t1thread_data;
   809                           ;main.c: 200: timer0_thread_struct t0thread_data;
   810                           ;main.c: 203: unsigned char config1 = 0x00, config2 = 0x00, portconfig = 0x00;
   811                           
   812                           ;incstack = 0
   813  0004E2  0100               	movlb	0	; () banked
   814  0004E4  6FAB               	movwf	??_main& (0+255),b
   815  0004E6  0E00               	movlw	0
   816  0004E8  0102               	movlb	2	; () banked
   817  0004EA  0102               	movlb	2	; () banked
   818  0004EC  6F0B               	movwf	main@config1& (0+255),b
   819  0004EE  0100               	movlb	0	; () banked
   820  0004F0  51AB               	movf	??_main& (0+255),w,b
   821  0004F2  0100               	movlb	0	; () banked
   822  0004F4  6FAB               	movwf	??_main& (0+255),b
   823  0004F6  0E00               	movlw	0
   824  0004F8  0102               	movlb	2	; () banked
   825  0004FA  0102               	movlb	2	; () banked
   826  0004FC  6F0C               	movwf	main@config2& (0+255),b
   827  0004FE  0100               	movlb	0	; () banked
   828  000500  51AB               	movf	??_main& (0+255),w,b
   829  000502  0100               	movlb	0	; () banked
   830  000504  6FAB               	movwf	??_main& (0+255),b
   831  000506  0E00               	movlw	0
   832  000508  0102               	movlb	2	; () banked
   833  00050A  0102               	movlb	2	; () banked
   834  00050C  6F0D               	movwf	main@portconfig& (0+255),b
   835  00050E  0100               	movlb	0	; () banked
   836  000510  51AB               	movf	??_main& (0+255),w,b
   837                           
   838                           ; BSR set to: 0
   839                           ;main.c: 211: OSCCON = 0x82;
   840  000512  0E82               	movlw	130
   841  000514  6ED3               	movwf	4051,c	;volatile
   842                           
   843                           ; BSR set to: 0
   844                           ;main.c: 212: OSCTUNEbits.PLLEN = 1;
   845  000516  8C9B               	bsf	3995,6,c	;volatile
   846                           
   847                           ; BSR set to: 0
   848                           ;main.c: 231: init_uart_recv(&uc);
   849  000518  0102               	movlb	2	; () banked
   850  00051A  0E02               	movlw	high main@uc
   851  00051C  0100               	movlb	0	; () banked
   852  00051E  0100               	movlb	0	; () banked
   853  000520  6F8F               	movwf	(init_uart_recv@uc+1)& (0+255),b
   854  000522  0102               	movlb	2	; () banked
   855  000524  0E16               	movlw	low main@uc
   856  000526  0100               	movlb	0	; () banked
   857  000528  0100               	movlb	0	; () banked
   858  00052A  6F8E               	movwf	init_uart_recv@uc& (0+255),b
   859  00052C  ECF9  F008         	call	_init_uart_recv	;wreg free
   860                           
   861                           ;main.c: 234: init_i2c(&ic);
   862  000530  0102               	movlb	2	; () banked
   863  000532  0E02               	movlw	high main@ic
   864  000534  0100               	movlb	0	; () banked
   865  000536  0100               	movlb	0	; () banked
   866  000538  6F8F               	movwf	(init_i2c@ic+1)& (0+255),b
   867  00053A  0102               	movlb	2	; () banked
   868  00053C  0E22               	movlw	low main@ic
   869  00053E  0100               	movlb	0	; () banked
   870  000540  0100               	movlb	0	; () banked
   871  000542  6F8E               	movwf	init_i2c@ic& (0+255),b
   872  000544  EC84  F007         	call	_init_i2c	;wreg free
   873                           
   874                           ;main.c: 237: init_timer1_lthread(&t1thread_data);
   875  000548  0102               	movlb	2	; () banked
   876  00054A  0E02               	movlw	high main@t1thread_data
   877  00054C  0100               	movlb	0	; () banked
   878  00054E  0100               	movlb	0	; () banked
   879  000550  6F8F               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   880  000552  0102               	movlb	2	; () banked
   881  000554  0E12               	movlw	low main@t1thread_data
   882  000556  0100               	movlb	0	; () banked
   883  000558  0100               	movlb	0	; () banked
   884  00055A  6F8E               	movwf	init_timer1_lthread@tptr& (0+255),b
   885  00055C  EC7C  F009         	call	_init_timer1_lthread	;wreg free
   886                           
   887                           ;main.c: 240: init_queues();
   888  000560  ECCF  F006         	call	_init_queues	;wreg free
   889                           
   890                           ;main.c: 247: PORTB = 0xFF;
   891  000564  6881               	setf	3969,c	;volatile
   892                           
   893                           ;main.c: 261: OpenTimer0(0b11111111 & 0b11111111 & 0b11111111 & 0b11111111);
   894  000566  0EFF               	movlw	255
   895  000568  ECE4  F008         	call	_OpenTimer0
   896                           
   897                           ;main.c: 270: OpenTimer1(0b11111111 & 0b11001111 & 0b11111111 & 0b11111111 & 0b11110111 
      +                          & 0b11111111);
   898  00056C  0EC7               	movlw	199
   899  00056E  EC96  F008         	call	_OpenTimer1
   900                           
   901                           ;main.c: 271: WriteTimer1(0xFFCF);
   902  000572  0EFF               	movlw	255
   903  000574  0100               	movlb	0	; () banked
   904  000576  0100               	movlb	0	; () banked
   905  000578  6F8F               	movwf	(WriteTimer1@timer1+1)& (0+255),b
   906  00057A  0ECF               	movlw	207
   907  00057C  0100               	movlb	0	; () banked
   908  00057E  6F8E               	movwf	WriteTimer1@timer1& (0+255),b
   909  000580  EC8E  F009         	call	_WriteTimer1	;wreg free
   910                           
   911                           ;main.c: 280: IPR1bits.TMR1IP = 0;
   912  000584  909F               	bcf	3999,0,c	;volatile
   913                           
   914                           ;main.c: 282: IPR1bits.TXIP = 0;
   915  000586  989F               	bcf	3999,4,c	;volatile
   916                           
   917                           ;main.c: 284: IPR1bits.SSPIP = 1;
   918  000588  869F               	bsf	3999,3,c	;volatile
   919                           
   920                           ;main.c: 293: i2c_configure_slave(0x9E);
   921  00058A  0E9E               	movlw	158
   922  00058C  EC0D  F009         	call	_i2c_configure_slave
   923                           
   924                           ;main.c: 308: PIE1bits.SSPIE = 1;
   925  000590  869D               	bsf	3997,3,c	;volatile
   926                           
   927                           ;main.c: 309: PIE1bits.RCIE = 1;
   928  000592  8A9D               	bsf	3997,5,c	;volatile
   929                           
   930                           ;main.c: 324: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
   931                           ;main.c: 325: 0b11111111 & 0b11111111, 155);
   932  000594  0E00               	movlw	0
   933  000596  0100               	movlb	0	; () banked
   934  000598  0100               	movlb	0	; () banked
   935  00059A  6F8F               	movwf	(OpenUSART@spbrg+1)& (0+255),b
   936  00059C  0E9B               	movlw	155
   937  00059E  0100               	movlb	0	; () banked
   938  0005A0  6F8E               	movwf	OpenUSART@spbrg& (0+255),b
   939  0005A2  0E7C               	movlw	124
   940  0005A4  EC82  F005         	call	_OpenUSART
   941                           
   942                           ;main.c: 326: BAUDCONbits.BRG16 = 0;
   943  0005A8  96B8               	bcf	4024,3,c	;volatile
   944                           
   945                           ;main.c: 327: RCSTAbits.SPEN = 1;
   946  0005AA  8EAB               	bsf	4011,7,c	;volatile
   947                           
   948                           ;main.c: 328: RCSTAbits.CREN = 1;
   949  0005AC  88AB               	bsf	4011,4,c	;volatile
   950                           
   951                           ;main.c: 333: bufferFlag = 0x0;
   952  0005AE  0E00               	movlw	0
   953  0005B0  0100               	movlb	0	; () banked
   954  0005B2  0100               	movlb	0	; () banked
   955  0005B4  6FC1               	movwf	(_bufferFlag+1)& (0+255),b
   956  0005B6  0E00               	movlw	0
   957  0005B8  0100               	movlb	0	; () banked
   958  0005BA  6FC0               	movwf	_bufferFlag& (0+255),b
   959                           
   960                           ; BSR set to: 0
   961                           ;main.c: 336: enable_interrupts();
   962  0005BC  ECB6  F009         	call	_enable_interrupts	;wreg free
   963  0005C0                     l2910:
   964                           
   965                           ;main.c: 350: block_on_To_msgqueues();
   966  0005C0  EC53  F006         	call	_block_on_To_msgqueues	;wreg free
   967                           
   968                           ;main.c: 357: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
   969  0005C4  0102               	movlb	2	; () banked
   970  0005C6  0E02               	movlw	high main@msgtype
   971  0005C8  0100               	movlb	0	; () banked
   972  0005CA  0100               	movlb	0	; () banked
   973  0005CC  6FA7               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
   974  0005CE  0102               	movlb	2	; () banked
   975  0005D0  0E15               	movlw	low main@msgtype
   976  0005D2  0100               	movlb	0	; () banked
   977  0005D4  0100               	movlb	0	; () banked
   978  0005D6  6FA6               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
   979  0005D8  0102               	movlb	2	; () banked
   980  0005DA  0E02               	movlw	high main@msgbuffer
   981  0005DC  0100               	movlb	0	; () banked
   982  0005DE  0100               	movlb	0	; () banked
   983  0005E0  6FA9               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
   984  0005E2  0102               	movlb	2	; () banked
   985  0005E4  0E00               	movlw	low main@msgbuffer
   986  0005E6  0100               	movlb	0	; () banked
   987  0005E8  0100               	movlb	0	; () banked
   988  0005EA  6FA8               	movwf	ToMainHigh_recvmsg@data& (0+255),b
   989  0005EC  0E0A               	movlw	10
   990  0005EE  EC38  F008         	call	_ToMainHigh_recvmsg
   991  0005F2  0102               	movlb	2	; () banked
   992  0005F4  0102               	movlb	2	; () banked
   993  0005F6  6F14               	movwf	main@length& (0+255),b
   994                           
   995                           ; BSR set to: 2
   996                           ;main.c: 358: if (length < 0) {
   997  0005F8  0102               	movlb	2	; () banked
   998  0005FA  0102               	movlb	2	; () banked
   999  0005FC  BF14               	btfsc	main@length& (0+255),7,b
  1000  0005FE  D05C               	goto	l2926
  1001  000600  D052               	goto	l2924
  1002  000602                     l2918:
  1003                           
  1004                           ; BSR set to: 2
  1005                           ;main.c: 366: {
  1006                           ;main.c: 367: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1007  000602  0102               	movlb	2	; () banked
  1008  000604  0E02               	movlw	high main@t0thread_data
  1009  000606  0100               	movlb	0	; () banked
  1010  000608  0100               	movlb	0	; () banked
  1011  00060A  6F8F               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1012  00060C  0102               	movlb	2	; () banked
  1013  00060E  0E10               	movlw	low main@t0thread_data
  1014  000610  0100               	movlb	0	; () banked
  1015  000612  0100               	movlb	0	; () banked
  1016  000614  6F8E               	movwf	timer0_lthread@tptr& (0+255),b
  1017  000616  0102               	movlb	2	; () banked
  1018  000618  0100               	movlb	0	; () banked
  1019  00061A  C215  F090         	movff	main@msgtype,timer0_lthread@msgtype
  1020  00061E  0100               	movlb	0	; () banked
  1021  000620  0100               	movlb	0	; () banked
  1022  000622  6B91               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1023  000624  0102               	movlb	2	; () banked
  1024  000626  0102               	movlb	2	; () banked
  1025  000628  5114               	movf	main@length& (0+255),w,b
  1026  00062A  0100               	movlb	0	; () banked
  1027  00062C  0100               	movlb	0	; () banked
  1028  00062E  6F92               	movwf	timer0_lthread@length& (0+255),b
  1029  000630  0100               	movlb	0	; () banked
  1030  000632  6B93               	clrf	(timer0_lthread@length+1)& (0+255),b
  1031  000634  0100               	movlb	0	; () banked
  1032  000636  BF92               	btfsc	timer0_lthread@length& (0+255),7,b
  1033  000638  0793               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1034  00063A  0102               	movlb	2	; () banked
  1035  00063C  0E02               	movlw	high main@msgbuffer
  1036  00063E  0100               	movlb	0	; () banked
  1037  000640  0100               	movlb	0	; () banked
  1038  000642  6F95               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1039  000644  0102               	movlb	2	; () banked
  1040  000646  0E00               	movlw	low main@msgbuffer
  1041  000648  0100               	movlb	0	; () banked
  1042  00064A  0100               	movlb	0	; () banked
  1043  00064C  6F94               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1044  00064E  EC73  F009         	call	_timer0_lthread	;wreg free
  1045                           
  1046                           ;main.c: 368: break;
  1047  000652  D032               	goto	l2926
  1048  000654                     l2920:
  1049                           
  1050                           ;main.c: 371: {
  1051                           ;main.c: 372: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1052  000654  0102               	movlb	2	; () banked
  1053  000656  0E02               	movlw	high main@uthread_data
  1054  000658  0100               	movlb	0	; () banked
  1055  00065A  0100               	movlb	0	; () banked
  1056  00065C  6F93               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1057  00065E  0102               	movlb	2	; () banked
  1058  000660  0E0E               	movlw	low main@uthread_data
  1059  000662  0100               	movlb	0	; () banked
  1060  000664  0100               	movlb	0	; () banked
  1061  000666  6F92               	movwf	uart_lthread@uptr& (0+255),b
  1062  000668  0102               	movlb	2	; () banked
  1063  00066A  0100               	movlb	0	; () banked
  1064  00066C  C215  F094         	movff	main@msgtype,uart_lthread@msgtype
  1065  000670  0100               	movlb	0	; () banked
  1066  000672  0100               	movlb	0	; () banked
  1067  000674  6B95               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1068  000676  0102               	movlb	2	; () banked
  1069  000678  0102               	movlb	2	; () banked
  1070  00067A  5114               	movf	main@length& (0+255),w,b
  1071  00067C  0100               	movlb	0	; () banked
  1072  00067E  0100               	movlb	0	; () banked
  1073  000680  6F96               	movwf	uart_lthread@length& (0+255),b
  1074  000682  0100               	movlb	0	; () banked
  1075  000684  6B97               	clrf	(uart_lthread@length+1)& (0+255),b
  1076  000686  0100               	movlb	0	; () banked
  1077  000688  BF96               	btfsc	uart_lthread@length& (0+255),7,b
  1078  00068A  0797               	decf	(uart_lthread@length+1)& (0+255),f,b
  1079  00068C  0102               	movlb	2	; () banked
  1080  00068E  0E02               	movlw	high main@msgbuffer
  1081  000690  0100               	movlb	0	; () banked
  1082  000692  0100               	movlb	0	; () banked
  1083  000694  6F99               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1084  000696  0102               	movlb	2	; () banked
  1085  000698  0E00               	movlw	low main@msgbuffer
  1086  00069A  0100               	movlb	0	; () banked
  1087  00069C  0100               	movlb	0	; () banked
  1088  00069E  6F98               	movwf	uart_lthread@msgbuffer& (0+255),b
  1089  0006A0  EC35  F007         	call	_uart_lthread	;wreg free
  1090                           
  1091                           ;main.c: 373: break;
  1092  0006A4  D009               	goto	l2926
  1093  0006A6                     l2924:
  1094  0006A6  0102               	movlb	2	; () banked
  1095  0006A8  0102               	movlb	2	; () banked
  1096  0006AA  5115               	movf	main@msgtype& (0+255),w,b
  1097                           
  1098                           ; Switch size 1, requested type "space"
  1099                           ; Number of cases is 2, Range of values is 10 to 40
  1100                           ; switch strategies available:
  1101                           ; Name         Instructions Cycles
  1102                           ; simple_byte            7     4 (average)
  1103                           ;	Chosen strategy is simple_byte
  1104  0006AC  0A0A               	xorlw	10	; case 10
  1105  0006AE  B4D8               	btfsc	status,2,c
  1106  0006B0  D7A8               	goto	l2918
  1107  0006B2  0A22               	xorlw	34	; case 40
  1108  0006B4  B4D8               	btfsc	status,2,c
  1109  0006B6  D7CE               	goto	l2920
  1110  0006B8                     l2926:
  1111                           
  1112                           ;main.c: 381: }
  1113                           ;main.c: 384: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1114  0006B8  0102               	movlb	2	; () banked
  1115  0006BA  0E02               	movlw	high main@msgtype
  1116  0006BC  0100               	movlb	0	; () banked
  1117  0006BE  0100               	movlb	0	; () banked
  1118  0006C0  6FA7               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1119  0006C2  0102               	movlb	2	; () banked
  1120  0006C4  0E15               	movlw	low main@msgtype
  1121  0006C6  0100               	movlb	0	; () banked
  1122  0006C8  0100               	movlb	0	; () banked
  1123  0006CA  6FA6               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1124  0006CC  0102               	movlb	2	; () banked
  1125  0006CE  0E02               	movlw	high main@msgbuffer
  1126  0006D0  0100               	movlb	0	; () banked
  1127  0006D2  0100               	movlb	0	; () banked
  1128  0006D4  6FA9               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1129  0006D6  0102               	movlb	2	; () banked
  1130  0006D8  0E00               	movlw	low main@msgbuffer
  1131  0006DA  0100               	movlb	0	; () banked
  1132  0006DC  0100               	movlb	0	; () banked
  1133  0006DE  6FA8               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1134  0006E0  0E0A               	movlw	10
  1135  0006E2  EC17  F008         	call	_ToMainLow_recvmsg
  1136  0006E6  0102               	movlb	2	; () banked
  1137  0006E8  0102               	movlb	2	; () banked
  1138  0006EA  6F14               	movwf	main@length& (0+255),b
  1139  0006EC  D769               	goto	l2910
  1140  0006EE                     __end_of_main:
  1141                           	opt stack 0
  1142                           tblptru	equ	0xFF8
  1143                           tblptrh	equ	0xFF7
  1144                           tblptrl	equ	0xFF6
  1145                           tablat	equ	0xFF5
  1146                           postinc0	equ	0xFEE
  1147                           wreg	equ	0xFE8
  1148                           postdec1	equ	0xFE5
  1149                           fsr1l	equ	0xFE1
  1150                           status	equ	0xFD8
  1151                           
  1152 ;; *************** function _uart_lthread *****************
  1153 ;; Defined at:
  1154 ;;		line 13 in file "../src/uart_thread.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;  uptr            2   18[BANK0 ] PTR struct __uart_thread
  1157 ;;		 -> main@uthread_data(2), 
  1158 ;;  msgtype         2   20[BANK0 ] int 
  1159 ;;  length          2   22[BANK0 ] int 
  1160 ;;  msgbuffer       2   24[BANK0 ] PTR unsigned char 
  1161 ;;		 -> main@msgbuffer(11), 
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;		None
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  2   18[BANK0 ] int 
  1166 ;; Registers used:
  1167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1173 ;;      Params:         0       8       0       0       0
  1174 ;;      Locals:         0       0       0       0       0
  1175 ;;      Temps:          0       0       0       0       0
  1176 ;;      Totals:         0       8       0       0       0
  1177 ;;Total ram usage:        8 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; Hardware stack levels required when called:    9
  1180 ;; This function calls:
  1181 ;;		_uart_retrieve_buffer
  1182 ;; This function is called by:
  1183 ;;		_main
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           	psect	text1
  1188  000E6A                     __ptext1:
  1189                           	opt stack 0
  1190  000E6A                     _uart_lthread:
  1191                           	opt stack 20
  1192                           
  1193                           ;uart_thread.c: 14: if (msgtype == 30) {
  1194                           
  1195                           ; BSR set to: 2
  1196                           ;incstack = 0
  1197  000E6A  0100               	movlb	0	; () banked
  1198  000E6C  0100               	movlb	0	; () banked
  1199  000E6E  5194               	movf	uart_lthread@msgtype& (0+255),w,b
  1200  000E70  0A1E               	xorlw	30
  1201  000E72  1195               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1202  000E74  B4D8               	btfsc	status,2,c
  1203  000E76  0012               	return	
  1204                           
  1205                           ; BSR set to: 0
  1206                           
  1207                           ; BSR set to: 0
  1208                           
  1209                           ; BSR set to: 0
  1210                           ;uart_thread.c: 16: } else if (msgtype == 40) {
  1211  000E78  0100               	movlb	0	; () banked
  1212  000E7A  0100               	movlb	0	; () banked
  1213  000E7C  5194               	movf	uart_lthread@msgtype& (0+255),w,b
  1214  000E7E  0A28               	xorlw	40
  1215  000E80  1195               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1216  000E82  A4D8               	btfss	status,2,c
  1217  000E84  0012               	return	
  1218                           
  1219                           ; BSR set to: 0
  1220                           ;uart_thread.c: 18: if (msgbuffer[0] != 0x13) {
  1221  000E86  C098  FFD9         	movff	uart_lthread@msgbuffer,fsr2l
  1222  000E8A  C099  FFDA         	movff	uart_lthread@msgbuffer+1,fsr2h
  1223  000E8E  50DF               	movf	indf2,w,c
  1224  000E90  0A13               	xorlw	19
  1225  000E92  B4D8               	btfsc	status,2,c
  1226  000E94  0012               	return	
  1227                           
  1228                           ; BSR set to: 0
  1229                           ;uart_thread.c: 19: { LATCbits.LATC3 = 1; };
  1230  000E96  868B               	bsf	3979,3,c	;volatile
  1231                           
  1232                           ;uart_thread.c: 20: { LATCbits.LATC3 = 0; };
  1233  000E98  968B               	bcf	3979,3,c	;volatile
  1234                           
  1235                           ; BSR set to: 0
  1236                           ;uart_thread.c: 22: uart_retrieve_buffer(length, msgbuffer);
  1237  000E9A  C096  F08E         	movff	uart_lthread@length,uart_retrieve_buffer@length
  1238  000E9E  C097  F08F         	movff	uart_lthread@length+1,uart_retrieve_buffer@length+1
  1239  000EA2  0100               	movlb	0	; () banked
  1240  000EA4  0100               	movlb	0	; () banked
  1241  000EA6  C099  F091         	movff	uart_lthread@msgbuffer+1,uart_retrieve_buffer@msgbuffer+1
  1242  000EAA  0100               	movlb	0	; () banked
  1243  000EAC  0100               	movlb	0	; () banked
  1244  000EAE  C098  F090         	movff	uart_lthread@msgbuffer,uart_retrieve_buffer@msgbuffer
  1245  000EB2  EC12  F004         	call	_uart_retrieve_buffer	;wreg free
  1246                           
  1247                           ;uart_thread.c: 24: PIE1bits.TX1IE = 0x1;
  1248  000EB6  889D               	bsf	3997,4,c	;volatile
  1249  000EB8  0012               	return	
  1250  000EBA                     __end_of_uart_lthread:
  1251                           	opt stack 0
  1252                           tblptru	equ	0xFF8
  1253                           tblptrh	equ	0xFF7
  1254                           tblptrl	equ	0xFF6
  1255                           tablat	equ	0xFF5
  1256                           postinc0	equ	0xFEE
  1257                           wreg	equ	0xFE8
  1258                           postdec1	equ	0xFE5
  1259                           fsr1l	equ	0xFE1
  1260                           indf2	equ	0xFDF
  1261                           fsr2h	equ	0xFDA
  1262                           fsr2l	equ	0xFD9
  1263                           status	equ	0xFD8
  1264                           
  1265 ;; *************** function _uart_retrieve_buffer *****************
  1266 ;; Defined at:
  1267 ;;		line 28 in file "../src/my_uart.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;  length          2   14[BANK0 ] int 
  1270 ;;  msgbuffer       2   16[BANK0 ] PTR unsigned char 
  1271 ;;		 -> main@msgbuffer(11), 
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;		None
  1274 ;; Return value:  Size  Location     Type
  1275 ;;		None               void
  1276 ;; Registers used:
  1277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1283 ;;      Params:         0       4       0       0       0
  1284 ;;      Locals:         0       0       0       0       0
  1285 ;;      Temps:          0       0       0       0       0
  1286 ;;      Totals:         0       4       0       0       0
  1287 ;;Total ram usage:        4 bytes
  1288 ;; Hardware stack levels used:    1
  1289 ;; Hardware stack levels required when called:    8
  1290 ;; This function calls:
  1291 ;;		Nothing
  1292 ;; This function is called by:
  1293 ;;		_uart_lthread
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           	psect	text2
  1298  000824                     __ptext2:
  1299                           	opt stack 0
  1300  000824                     _uart_retrieve_buffer:
  1301                           	opt stack 20
  1302                           
  1303                           ;my_uart.c: 30: uc_ptr->Tx_buflen = 0;
  1304                           
  1305                           ;incstack = 0
  1306  000824  0100               	movlb	0	; () banked
  1307  000826  EE20 F00A          	lfsr	2,10
  1308  00082A  0100               	movlb	0	; () banked
  1309  00082C  51C2               	movf	_uc_ptr& (0+255),w,b
  1310  00082E  26D9               	addwf	fsr2l,f,c
  1311  000830  0100               	movlb	0	; () banked
  1312  000832  51C3               	movf	(_uc_ptr+1)& (0+255),w,b
  1313  000834  22DA               	addwfc	fsr2h,f,c
  1314  000836  0E00               	movlw	0
  1315  000838  6EDF               	movwf	indf2,c
  1316                           
  1317                           ; BSR set to: 0
  1318                           ;my_uart.c: 33: if (msgbuffer[0] == 0x01 && msgbuffer[4] == 0) {
  1319  00083A  0E01               	movlw	1
  1320  00083C  C090  FFD9         	movff	uart_retrieve_buffer@msgbuffer,fsr2l
  1321  000840  C091  FFDA         	movff	uart_retrieve_buffer@msgbuffer+1,fsr2h
  1322  000844  62DF               	cpfseq	indf2,c
  1323  000846  D03B               	goto	l3270
  1324                           
  1325                           ; BSR set to: 0
  1326  000848  0100               	movlb	0	; () banked
  1327  00084A  EE20 F004          	lfsr	2,4
  1328  00084E  0100               	movlb	0	; () banked
  1329  000850  5190               	movf	uart_retrieve_buffer@msgbuffer& (0+255),w,b
  1330  000852  26D9               	addwf	fsr2l,f,c
  1331  000854  0100               	movlb	0	; () banked
  1332  000856  5191               	movf	(uart_retrieve_buffer@msgbuffer+1)& (0+255),w,b
  1333  000858  22DA               	addwfc	fsr2h,f,c
  1334  00085A  50DF               	movf	indf2,w,c
  1335  00085C  A4D8               	btfss	status,2,c
  1336  00085E  D02F               	goto	l3270
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;my_uart.c: 35: uc_ptr->msg_length = 2;
  1340  000860  0100               	movlb	0	; () banked
  1341  000862  EE20 F00B          	lfsr	2,11
  1342  000866  0100               	movlb	0	; () banked
  1343  000868  51C2               	movf	_uc_ptr& (0+255),w,b
  1344  00086A  26D9               	addwf	fsr2l,f,c
  1345  00086C  0100               	movlb	0	; () banked
  1346  00086E  51C3               	movf	(_uc_ptr+1)& (0+255),w,b
  1347  000870  22DA               	addwfc	fsr2h,f,c
  1348  000872  0E02               	movlw	2
  1349  000874  6EDF               	movwf	indf2,c
  1350                           
  1351                           ; BSR set to: 0
  1352                           ;my_uart.c: 36: uc_ptr->Tx_buffer[0] = msgbuffer[2];
  1353  000876  0100               	movlb	0	; () banked
  1354  000878  EE20 F002          	lfsr	2,2
  1355  00087C  0100               	movlb	0	; () banked
  1356  00087E  5190               	movf	uart_retrieve_buffer@msgbuffer& (0+255),w,b
  1357  000880  26D9               	addwf	fsr2l,f,c
  1358  000882  0100               	movlb	0	; () banked
  1359  000884  5191               	movf	(uart_retrieve_buffer@msgbuffer+1)& (0+255),w,b
  1360  000886  22DA               	addwfc	fsr2h,f,c
  1361  000888  C0C2  FFE1         	movff	_uc_ptr,fsr1l
  1362  00088C  C0C3  FFE2         	movff	_uc_ptr+1,fsr1h
  1363  000890  CFDF FFE7          	movff	indf2,indf1
  1364                           
  1365                           ; BSR set to: 0
  1366                           ;my_uart.c: 37: uc_ptr->Tx_buffer[1] = msgbuffer[3];
  1367  000894  0100               	movlb	0	; () banked
  1368  000896  EE20 F003          	lfsr	2,3
  1369  00089A  0100               	movlb	0	; () banked
  1370  00089C  5190               	movf	uart_retrieve_buffer@msgbuffer& (0+255),w,b
  1371  00089E  26D9               	addwf	fsr2l,f,c
  1372  0008A0  0100               	movlb	0	; () banked
  1373  0008A2  5191               	movf	(uart_retrieve_buffer@msgbuffer+1)& (0+255),w,b
  1374  0008A4  22DA               	addwfc	fsr2h,f,c
  1375  0008A6  0100               	movlb	0	; () banked
  1376  0008A8  EE10 F001          	lfsr	1,1
  1377  0008AC  0100               	movlb	0	; () banked
  1378  0008AE  51C2               	movf	_uc_ptr& (0+255),w,b
  1379  0008B0  26E1               	addwf	fsr1l,f,c
  1380  0008B2  0100               	movlb	0	; () banked
  1381  0008B4  51C3               	movf	(_uc_ptr+1)& (0+255),w,b
  1382  0008B6  22E2               	addwfc	fsr1h,f,c
  1383  0008B8  CFDF FFE7          	movff	indf2,indf1
  1384                           
  1385                           ;my_uart.c: 38: } else if (msgbuffer[0] == 0x05) {
  1386  0008BC  0012               	return	
  1387  0008BE                     l3270:
  1388                           
  1389                           ; BSR set to: 0
  1390  0008BE  0E05               	movlw	5
  1391  0008C0  C090  FFD9         	movff	uart_retrieve_buffer@msgbuffer,fsr2l
  1392  0008C4  C091  FFDA         	movff	uart_retrieve_buffer@msgbuffer+1,fsr2h
  1393  0008C8  62DF               	cpfseq	indf2,c
  1394  0008CA  0012               	return	
  1395                           
  1396                           ; BSR set to: 0
  1397                           ;my_uart.c: 40: uc_ptr->msg_length = 2;
  1398  0008CC  0100               	movlb	0	; () banked
  1399  0008CE  EE20 F00B          	lfsr	2,11
  1400  0008D2  0100               	movlb	0	; () banked
  1401  0008D4  51C2               	movf	_uc_ptr& (0+255),w,b
  1402  0008D6  26D9               	addwf	fsr2l,f,c
  1403  0008D8  0100               	movlb	0	; () banked
  1404  0008DA  51C3               	movf	(_uc_ptr+1)& (0+255),w,b
  1405  0008DC  22DA               	addwfc	fsr2h,f,c
  1406  0008DE  0E02               	movlw	2
  1407  0008E0  6EDF               	movwf	indf2,c
  1408                           
  1409                           ; BSR set to: 0
  1410                           ;my_uart.c: 41: uc_ptr->Tx_buffer[0] = 0x00;
  1411  0008E2  C0C2  FFD9         	movff	_uc_ptr,fsr2l
  1412  0008E6  C0C3  FFDA         	movff	_uc_ptr+1,fsr2h
  1413  0008EA  0E00               	movlw	0
  1414  0008EC  6EDF               	movwf	indf2,c
  1415                           
  1416                           ; BSR set to: 0
  1417                           ;my_uart.c: 42: uc_ptr->Tx_buffer[1] = 0x00;
  1418  0008EE  0100               	movlb	0	; () banked
  1419  0008F0  EE20 F001          	lfsr	2,1
  1420  0008F4  0100               	movlb	0	; () banked
  1421  0008F6  51C2               	movf	_uc_ptr& (0+255),w,b
  1422  0008F8  26D9               	addwf	fsr2l,f,c
  1423  0008FA  0100               	movlb	0	; () banked
  1424  0008FC  51C3               	movf	(_uc_ptr+1)& (0+255),w,b
  1425  0008FE  22DA               	addwfc	fsr2h,f,c
  1426  000900  0E00               	movlw	0
  1427  000902  6EDF               	movwf	indf2,c
  1428  000904  0012               	return	
  1429  000906                     __end_of_uart_retrieve_buffer:
  1430                           	opt stack 0
  1431                           tblptru	equ	0xFF8
  1432                           tblptrh	equ	0xFF7
  1433                           tblptrl	equ	0xFF6
  1434                           tablat	equ	0xFF5
  1435                           postinc0	equ	0xFEE
  1436                           wreg	equ	0xFE8
  1437                           indf1	equ	0xFE7
  1438                           postdec1	equ	0xFE5
  1439                           fsr1h	equ	0xFE2
  1440                           fsr1l	equ	0xFE1
  1441                           indf2	equ	0xFDF
  1442                           fsr2h	equ	0xFDA
  1443                           fsr2l	equ	0xFD9
  1444                           status	equ	0xFD8
  1445                           
  1446 ;; *************** function _timer0_lthread *****************
  1447 ;; Defined at:
  1448 ;;		line 10 in file "../src/timer0_thread.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;  tptr            2   14[BANK0 ] PTR struct __timer0_thre
  1451 ;;		 -> main@t0thread_data(2), 
  1452 ;;  msgtype         2   16[BANK0 ] int 
  1453 ;;  length          2   18[BANK0 ] int 
  1454 ;;  msgbuffer       2   20[BANK0 ] PTR unsigned char 
  1455 ;;		 -> main@msgbuffer(11), 
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;  msgval          2   22[BANK0 ] PTR unsigned int 
  1458 ;;		 -> main@msgbuffer(11), 
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  2   14[BANK0 ] int 
  1461 ;; Registers used:
  1462 ;;		wreg, status,2, status,0
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1468 ;;      Params:         0       8       0       0       0
  1469 ;;      Locals:         0       2       0       0       0
  1470 ;;      Temps:          0       0       0       0       0
  1471 ;;      Totals:         0      10       0       0       0
  1472 ;;Total ram usage:       10 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    8
  1475 ;; This function calls:
  1476 ;;		Nothing
  1477 ;; This function is called by:
  1478 ;;		_main
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           	psect	text3
  1483  0012E6                     __ptext3:
  1484                           	opt stack 0
  1485  0012E6                     _timer0_lthread:
  1486                           	opt stack 21
  1487                           
  1488                           ;timer0_thread.c: 11: unsigned int *msgval;
  1489                           ;timer0_thread.c: 13: msgval = (unsigned int *) msgbuffer;
  1490                           
  1491                           ; BSR set to: 0
  1492                           ;incstack = 0
  1493  0012E6  0100               	movlb	0	; () banked
  1494  0012E8  0100               	movlb	0	; () banked
  1495  0012EA  C095  F097         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  1496  0012EE  0100               	movlb	0	; () banked
  1497  0012F0  0100               	movlb	0	; () banked
  1498  0012F2  C094  F096         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  1499                           
  1500                           ; BSR set to: 0
  1501  0012F6  0012               	return	
  1502  0012F8                     __end_of_timer0_lthread:
  1503                           	opt stack 0
  1504                           tblptru	equ	0xFF8
  1505                           tblptrh	equ	0xFF7
  1506                           tblptrl	equ	0xFF6
  1507                           tablat	equ	0xFF5
  1508                           postinc0	equ	0xFEE
  1509                           wreg	equ	0xFE8
  1510                           indf1	equ	0xFE7
  1511                           postdec1	equ	0xFE5
  1512                           fsr1h	equ	0xFE2
  1513                           fsr1l	equ	0xFE1
  1514                           indf2	equ	0xFDF
  1515                           fsr2h	equ	0xFDA
  1516                           fsr2l	equ	0xFD9
  1517                           status	equ	0xFD8
  1518                           
  1519 ;; *************** function _init_uart_recv *****************
  1520 ;; Defined at:
  1521 ;;		line 12 in file "../src/my_uart.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;  uc              2   14[BANK0 ] PTR struct __uart_comm
  1524 ;;		 -> main@uc(12), 
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;		None
  1527 ;; Return value:  Size  Location     Type
  1528 ;;		None               void
  1529 ;; Registers used:
  1530 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1536 ;;      Params:         0       2       0       0       0
  1537 ;;      Locals:         0       0       0       0       0
  1538 ;;      Temps:          0       0       0       0       0
  1539 ;;      Totals:         0       2       0       0       0
  1540 ;;Total ram usage:        2 bytes
  1541 ;; Hardware stack levels used:    1
  1542 ;; Hardware stack levels required when called:    8
  1543 ;; This function calls:
  1544 ;;		Nothing
  1545 ;; This function is called by:
  1546 ;;		_main
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550                           	psect	text4
  1551  0011F2                     __ptext4:
  1552                           	opt stack 0
  1553  0011F2                     _init_uart_recv:
  1554                           	opt stack 21
  1555                           
  1556                           ;my_uart.c: 13: uc_ptr = uc;
  1557                           
  1558                           ; BSR set to: 0
  1559                           ;incstack = 0
  1560  0011F2  0100               	movlb	0	; () banked
  1561  0011F4  0100               	movlb	0	; () banked
  1562  0011F6  C08F  F0C3         	movff	init_uart_recv@uc+1,_uc_ptr+1
  1563  0011FA  0100               	movlb	0	; () banked
  1564  0011FC  0100               	movlb	0	; () banked
  1565  0011FE  C08E  F0C2         	movff	init_uart_recv@uc,_uc_ptr
  1566                           
  1567                           ; BSR set to: 0
  1568                           ;my_uart.c: 14: uc_ptr->Tx_buflen = 0;
  1569  001202  0100               	movlb	0	; () banked
  1570  001204  EE20 F00A          	lfsr	2,10
  1571  001208  0100               	movlb	0	; () banked
  1572  00120A  51C2               	movf	_uc_ptr& (0+255),w,b
  1573  00120C  26D9               	addwf	fsr2l,f,c
  1574  00120E  0100               	movlb	0	; () banked
  1575  001210  51C3               	movf	(_uc_ptr+1)& (0+255),w,b
  1576  001212  22DA               	addwfc	fsr2h,f,c
  1577  001214  0E00               	movlw	0
  1578  001216  6EDF               	movwf	indf2,c
  1579                           
  1580                           ; BSR set to: 0
  1581  001218  0012               	return	
  1582  00121A                     __end_of_init_uart_recv:
  1583                           	opt stack 0
  1584                           tblptru	equ	0xFF8
  1585                           tblptrh	equ	0xFF7
  1586                           tblptrl	equ	0xFF6
  1587                           tablat	equ	0xFF5
  1588                           postinc0	equ	0xFEE
  1589                           wreg	equ	0xFE8
  1590                           indf1	equ	0xFE7
  1591                           postdec1	equ	0xFE5
  1592                           fsr1h	equ	0xFE2
  1593                           fsr1l	equ	0xFE1
  1594                           indf2	equ	0xFDF
  1595                           fsr2h	equ	0xFDA
  1596                           fsr2l	equ	0xFD9
  1597                           status	equ	0xFD8
  1598                           
  1599 ;; *************** function _init_timer1_lthread *****************
  1600 ;; Defined at:
  1601 ;;		line 6 in file "../src/timer1_thread.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;  tptr            2   14[BANK0 ] PTR struct __timer1_thre
  1604 ;;		 -> main@t1thread_data(2), 
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;		None
  1607 ;; Return value:  Size  Location     Type
  1608 ;;		None               void
  1609 ;; Registers used:
  1610 ;;		wreg, fsr2l, fsr2h
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1616 ;;      Params:         0       2       0       0       0
  1617 ;;      Locals:         0       0       0       0       0
  1618 ;;      Temps:          0       0       0       0       0
  1619 ;;      Totals:         0       2       0       0       0
  1620 ;;Total ram usage:        2 bytes
  1621 ;; Hardware stack levels used:    1
  1622 ;; Hardware stack levels required when called:    8
  1623 ;; This function calls:
  1624 ;;		Nothing
  1625 ;; This function is called by:
  1626 ;;		_main
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           	psect	text5
  1631  0012F8                     __ptext5:
  1632                           	opt stack 0
  1633  0012F8                     _init_timer1_lthread:
  1634                           	opt stack 21
  1635                           
  1636                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  1637                           
  1638                           ; BSR set to: 0
  1639                           ;incstack = 0
  1640  0012F8  C08E  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  1641  0012FC  C08F  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  1642  001300  0E00               	movlw	0
  1643  001302  6EDE               	movwf	postinc2,c
  1644  001304  0E00               	movlw	0
  1645  001306  6EDD               	movwf	postdec2,c
  1646  001308  0012               	return	
  1647  00130A                     __end_of_init_timer1_lthread:
  1648                           	opt stack 0
  1649                           tblptru	equ	0xFF8
  1650                           tblptrh	equ	0xFF7
  1651                           tblptrl	equ	0xFF6
  1652                           tablat	equ	0xFF5
  1653                           postinc0	equ	0xFEE
  1654                           wreg	equ	0xFE8
  1655                           indf1	equ	0xFE7
  1656                           postdec1	equ	0xFE5
  1657                           fsr1h	equ	0xFE2
  1658                           fsr1l	equ	0xFE1
  1659                           indf2	equ	0xFDF
  1660                           postinc2	equ	0xFDE
  1661                           postdec2	equ	0xFDD
  1662                           fsr2h	equ	0xFDA
  1663                           fsr2l	equ	0xFD9
  1664                           status	equ	0xFD8
  1665                           
  1666 ;; *************** function _init_queues *****************
  1667 ;; Defined at:
  1668 ;;		line 194 in file "../src/messages.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;		None
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;		None
  1673 ;; Return value:  Size  Location     Type
  1674 ;;		None               void
  1675 ;; Registers used:
  1676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1682 ;;      Params:         0       0       0       0       0
  1683 ;;      Locals:         0       0       0       0       0
  1684 ;;      Temps:          0       1       0       0       0
  1685 ;;      Totals:         0       1       0       0       0
  1686 ;;Total ram usage:        1 bytes
  1687 ;; Hardware stack levels used:    1
  1688 ;; Hardware stack levels required when called:    9
  1689 ;; This function calls:
  1690 ;;		_init_queue
  1691 ;; This function is called by:
  1692 ;;		_main
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           	psect	text6
  1697  000D9E                     __ptext6:
  1698                           	opt stack 0
  1699  000D9E                     _init_queues:
  1700                           	opt stack 20
  1701                           
  1702                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  1703                           
  1704                           ;incstack = 0
  1705  000D9E  0100               	movlb	0	; () banked
  1706  000DA0  6F92               	movwf	??_init_queues& (0+255),b
  1707  000DA2  0E00               	movlw	0
  1708  000DA4  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  1709  000DA6  0100               	movlb	0	; () banked
  1710  000DA8  5192               	movf	??_init_queues& (0+255),w,b
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  1714  000DAA  0101               	movlb	1	; () banked
  1715  000DAC  0E01               	movlw	high _ToMainLow_MQ
  1716  000DAE  0100               	movlb	0	; () banked
  1717  000DB0  0100               	movlb	0	; () banked
  1718  000DB2  6F8F               	movwf	(init_queue@qptr+1)& (0+255),b
  1719  000DB4  0101               	movlb	1	; () banked
  1720  000DB6  0EA2               	movlw	low _ToMainLow_MQ
  1721  000DB8  0100               	movlb	0	; () banked
  1722  000DBA  0100               	movlb	0	; () banked
  1723  000DBC  6F8E               	movwf	init_queue@qptr& (0+255),b
  1724  000DBE  EC92  F006         	call	_init_queue	;wreg free
  1725                           
  1726                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  1727  000DC2  0101               	movlb	1	; () banked
  1728  000DC4  0E01               	movlw	high _ToMainHigh_MQ
  1729  000DC6  0100               	movlb	0	; () banked
  1730  000DC8  0100               	movlb	0	; () banked
  1731  000DCA  6F8F               	movwf	(init_queue@qptr+1)& (0+255),b
  1732  000DCC  0101               	movlb	1	; () banked
  1733  000DCE  0E6C               	movlw	low _ToMainHigh_MQ
  1734  000DD0  0100               	movlb	0	; () banked
  1735  000DD2  0100               	movlb	0	; () banked
  1736  000DD4  6F8E               	movwf	init_queue@qptr& (0+255),b
  1737  000DD6  EC92  F006         	call	_init_queue	;wreg free
  1738                           
  1739                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  1740  000DDA  0101               	movlb	1	; () banked
  1741  000DDC  0E01               	movlw	high _FromMainLow_MQ
  1742  000DDE  0100               	movlb	0	; () banked
  1743  000DE0  0100               	movlb	0	; () banked
  1744  000DE2  6F8F               	movwf	(init_queue@qptr+1)& (0+255),b
  1745  000DE4  0101               	movlb	1	; () banked
  1746  000DE6  0E36               	movlw	low _FromMainLow_MQ
  1747  000DE8  0100               	movlb	0	; () banked
  1748  000DEA  0100               	movlb	0	; () banked
  1749  000DEC  6F8E               	movwf	init_queue@qptr& (0+255),b
  1750  000DEE  EC92  F006         	call	_init_queue	;wreg free
  1751                           
  1752                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  1753  000DF2  0101               	movlb	1	; () banked
  1754  000DF4  0E01               	movlw	high _FromMainHigh_MQ
  1755  000DF6  0100               	movlb	0	; () banked
  1756  000DF8  0100               	movlb	0	; () banked
  1757  000DFA  6F8F               	movwf	(init_queue@qptr+1)& (0+255),b
  1758  000DFC  0101               	movlb	1	; () banked
  1759  000DFE  0E00               	movlw	low _FromMainHigh_MQ
  1760  000E00  0100               	movlb	0	; () banked
  1761  000E02  0100               	movlb	0	; () banked
  1762  000E04  6F8E               	movwf	init_queue@qptr& (0+255),b
  1763  000E06  EC92  F006         	call	_init_queue	;wreg free
  1764  000E0A  0012               	return	
  1765  000E0C                     __end_of_init_queues:
  1766                           	opt stack 0
  1767                           tblptru	equ	0xFF8
  1768                           tblptrh	equ	0xFF7
  1769                           tblptrl	equ	0xFF6
  1770                           tablat	equ	0xFF5
  1771                           postinc0	equ	0xFEE
  1772                           wreg	equ	0xFE8
  1773                           indf1	equ	0xFE7
  1774                           postdec1	equ	0xFE5
  1775                           fsr1h	equ	0xFE2
  1776                           fsr1l	equ	0xFE1
  1777                           indf2	equ	0xFDF
  1778                           postinc2	equ	0xFDE
  1779                           postdec2	equ	0xFDD
  1780                           fsr2h	equ	0xFDA
  1781                           fsr2l	equ	0xFD9
  1782                           status	equ	0xFD8
  1783                           
  1784 ;; *************** function _init_queue *****************
  1785 ;; Defined at:
  1786 ;;		line 14 in file "../src/messages.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;  qptr            2   14[BANK0 ] PTR struct __msg_queue
  1789 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  i               1   17[BANK0 ] unsigned char 
  1792 ;; Return value:  Size  Location     Type
  1793 ;;		None               void
  1794 ;; Registers used:
  1795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1801 ;;      Params:         0       2       0       0       0
  1802 ;;      Locals:         0       1       0       0       0
  1803 ;;      Temps:          0       1       0       0       0
  1804 ;;      Totals:         0       4       0       0       0
  1805 ;;Total ram usage:        4 bytes
  1806 ;; Hardware stack levels used:    1
  1807 ;; Hardware stack levels required when called:    8
  1808 ;; This function calls:
  1809 ;;		Nothing
  1810 ;; This function is called by:
  1811 ;;		_init_queues
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           	psect	text7
  1816  000D24                     __ptext7:
  1817                           	opt stack 0
  1818  000D24                     _init_queue:
  1819                           	opt stack 20
  1820                           
  1821                           ;messages.c: 15: unsigned char i;
  1822                           ;messages.c: 17: qptr->cur_write_ind = 0;
  1823                           
  1824                           ;incstack = 0
  1825  000D24  0100               	movlb	0	; () banked
  1826  000D26  EE20 F034          	lfsr	2,52
  1827  000D2A  0100               	movlb	0	; () banked
  1828  000D2C  518E               	movf	init_queue@qptr& (0+255),w,b
  1829  000D2E  26D9               	addwf	fsr2l,f,c
  1830  000D30  0100               	movlb	0	; () banked
  1831  000D32  518F               	movf	(init_queue@qptr+1)& (0+255),w,b
  1832  000D34  22DA               	addwfc	fsr2h,f,c
  1833  000D36  0E00               	movlw	0
  1834  000D38  6EDF               	movwf	indf2,c
  1835                           
  1836                           ;messages.c: 18: qptr->cur_read_ind = 0;
  1837  000D3A  0100               	movlb	0	; () banked
  1838  000D3C  EE20 F035          	lfsr	2,53
  1839  000D40  0100               	movlb	0	; () banked
  1840  000D42  518E               	movf	init_queue@qptr& (0+255),w,b
  1841  000D44  26D9               	addwf	fsr2l,f,c
  1842  000D46  0100               	movlb	0	; () banked
  1843  000D48  518F               	movf	(init_queue@qptr+1)& (0+255),w,b
  1844  000D4A  22DA               	addwfc	fsr2h,f,c
  1845  000D4C  0E00               	movlw	0
  1846  000D4E  6EDF               	movwf	indf2,c
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  1850  000D50  0100               	movlb	0	; () banked
  1851  000D52  6F90               	movwf	??_init_queue& (0+255),b
  1852  000D54  0E00               	movlw	0
  1853  000D56  0100               	movlb	0	; () banked
  1854  000D58  0100               	movlb	0	; () banked
  1855  000D5A  6F91               	movwf	init_queue@i& (0+255),b
  1856  000D5C  0100               	movlb	0	; () banked
  1857  000D5E  5190               	movf	??_init_queue& (0+255),w,b
  1858                           
  1859                           ; BSR set to: 0
  1860  000D60  0E03               	movlw	3
  1861  000D62  0100               	movlb	0	; () banked
  1862  000D64  0100               	movlb	0	; () banked
  1863  000D66  6591               	cpfsgt	init_queue@i& (0+255),b
  1864  000D68  D001               	goto	l3106
  1865  000D6A  0012               	return	
  1866  000D6C                     l3106:
  1867                           
  1868                           ; BSR set to: 0
  1869                           ;messages.c: 20: qptr->queue[i].full = 0;
  1870  000D6C  0100               	movlb	0	; () banked
  1871  000D6E  0100               	movlb	0	; () banked
  1872  000D70  5191               	movf	init_queue@i& (0+255),w,b
  1873  000D72  0D0D               	mullw	13
  1874  000D74  50F3               	movf	prodl,w,c
  1875  000D76  0100               	movlb	0	; () banked
  1876  000D78  0100               	movlb	0	; () banked
  1877  000D7A  258E               	addwf	init_queue@qptr& (0+255),w,b
  1878  000D7C  6ED9               	movwf	fsr2l,c
  1879  000D7E  50F4               	movf	prodh,w,c
  1880  000D80  0100               	movlb	0	; () banked
  1881  000D82  0100               	movlb	0	; () banked
  1882  000D84  218F               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  1883  000D86  6EDA               	movwf	fsr2h,c
  1884  000D88  0E00               	movlw	0
  1885  000D8A  6EDF               	movwf	indf2,c
  1886                           
  1887                           ; BSR set to: 0
  1888  000D8C  0100               	movlb	0	; () banked
  1889  000D8E  0100               	movlb	0	; () banked
  1890  000D90  2B91               	incf	init_queue@i& (0+255),f,b
  1891                           
  1892                           ; BSR set to: 0
  1893  000D92  0E03               	movlw	3
  1894  000D94  0100               	movlb	0	; () banked
  1895  000D96  0100               	movlb	0	; () banked
  1896  000D98  6591               	cpfsgt	init_queue@i& (0+255),b
  1897  000D9A  D7E8               	goto	l3106
  1898  000D9C  0012               	return	
  1899  000D9E                     __end_of_init_queue:
  1900                           	opt stack 0
  1901                           tblptru	equ	0xFF8
  1902                           tblptrh	equ	0xFF7
  1903                           tblptrl	equ	0xFF6
  1904                           tablat	equ	0xFF5
  1905                           prodh	equ	0xFF4
  1906                           prodl	equ	0xFF3
  1907                           postinc0	equ	0xFEE
  1908                           wreg	equ	0xFE8
  1909                           indf1	equ	0xFE7
  1910                           postdec1	equ	0xFE5
  1911                           fsr1h	equ	0xFE2
  1912                           fsr1l	equ	0xFE1
  1913                           indf2	equ	0xFDF
  1914                           postinc2	equ	0xFDE
  1915                           postdec2	equ	0xFDD
  1916                           fsr2h	equ	0xFDA
  1917                           fsr2l	equ	0xFD9
  1918                           status	equ	0xFD8
  1919                           
  1920 ;; *************** function _init_i2c *****************
  1921 ;; Defined at:
  1922 ;;		line 241 in file "../src/my_i2c.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;  ic              2   14[BANK0 ] PTR struct __i2c_comm
  1925 ;;		 -> main@ic(28), 
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;		None
  1928 ;; Return value:  Size  Location     Type
  1929 ;;		None               void
  1930 ;; Registers used:
  1931 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1937 ;;      Params:         0       2       0       0       0
  1938 ;;      Locals:         0       0       0       0       0
  1939 ;;      Temps:          0       0       0       0       0
  1940 ;;      Totals:         0       2       0       0       0
  1941 ;;Total ram usage:        2 bytes
  1942 ;; Hardware stack levels used:    1
  1943 ;; Hardware stack levels required when called:    8
  1944 ;; This function calls:
  1945 ;;		Nothing
  1946 ;; This function is called by:
  1947 ;;		_main
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           	psect	text8
  1952  000F08                     __ptext8:
  1953                           	opt stack 0
  1954  000F08                     _init_i2c:
  1955                           	opt stack 21
  1956                           
  1957                           ;my_i2c.c: 242: ic_ptr = ic;
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;incstack = 0
  1961  000F08  0100               	movlb	0	; () banked
  1962  000F0A  C08F  F063         	movff	init_i2c@ic+1,_ic_ptr+1
  1963  000F0E  0100               	movlb	0	; () banked
  1964  000F10  C08E  F062         	movff	init_i2c@ic,_ic_ptr
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;my_i2c.c: 243: ic_ptr->buflen = 0;
  1968  000F14  EE20 F00A          	lfsr	2,10
  1969  000F18  5062               	movf	_ic_ptr,w,c
  1970  000F1A  26D9               	addwf	fsr2l,f,c
  1971  000F1C  5063               	movf	_ic_ptr+1,w,c
  1972  000F1E  22DA               	addwfc	fsr2h,f,c
  1973  000F20  0E00               	movlw	0
  1974  000F22  6EDF               	movwf	indf2,c
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;my_i2c.c: 244: ic_ptr->event_count = 0;
  1978  000F24  EE20 F00B          	lfsr	2,11
  1979  000F28  5062               	movf	_ic_ptr,w,c
  1980  000F2A  26D9               	addwf	fsr2l,f,c
  1981  000F2C  5063               	movf	_ic_ptr+1,w,c
  1982  000F2E  22DA               	addwfc	fsr2h,f,c
  1983  000F30  0E00               	movlw	0
  1984  000F32  6EDF               	movwf	indf2,c
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;my_i2c.c: 245: ic_ptr->status = 0x5;
  1988  000F34  EE20 F00C          	lfsr	2,12
  1989  000F38  5062               	movf	_ic_ptr,w,c
  1990  000F3A  26D9               	addwf	fsr2l,f,c
  1991  000F3C  5063               	movf	_ic_ptr+1,w,c
  1992  000F3E  22DA               	addwfc	fsr2h,f,c
  1993  000F40  0E05               	movlw	5
  1994  000F42  6EDF               	movwf	indf2,c
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;my_i2c.c: 246: ic_ptr->error_count = 0;
  1998  000F44  EE20 F00E          	lfsr	2,14
  1999  000F48  5062               	movf	_ic_ptr,w,c
  2000  000F4A  26D9               	addwf	fsr2l,f,c
  2001  000F4C  5063               	movf	_ic_ptr+1,w,c
  2002  000F4E  22DA               	addwfc	fsr2h,f,c
  2003  000F50  0E00               	movlw	0
  2004  000F52  6EDF               	movwf	indf2,c
  2005                           
  2006                           ; BSR set to: 0
  2007  000F54  0012               	return	
  2008  000F56                     __end_of_init_i2c:
  2009                           	opt stack 0
  2010                           tblptru	equ	0xFF8
  2011                           tblptrh	equ	0xFF7
  2012                           tblptrl	equ	0xFF6
  2013                           tablat	equ	0xFF5
  2014                           prodh	equ	0xFF4
  2015                           prodl	equ	0xFF3
  2016                           postinc0	equ	0xFEE
  2017                           wreg	equ	0xFE8
  2018                           indf1	equ	0xFE7
  2019                           postdec1	equ	0xFE5
  2020                           fsr1h	equ	0xFE2
  2021                           fsr1l	equ	0xFE1
  2022                           indf2	equ	0xFDF
  2023                           postinc2	equ	0xFDE
  2024                           postdec2	equ	0xFDD
  2025                           fsr2h	equ	0xFDA
  2026                           fsr2l	equ	0xFD9
  2027                           status	equ	0xFD8
  2028                           
  2029 ;; *************** function _i2c_configure_slave *****************
  2030 ;; Defined at:
  2031 ;;		line 252 in file "../src/my_i2c.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;  addr            1    wreg     unsigned char 
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;  addr            1   14[BANK0 ] unsigned char 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;		None               void
  2038 ;; Registers used:
  2039 ;;		wreg, status,2, status,0
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2045 ;;      Params:         0       0       0       0       0
  2046 ;;      Locals:         0       1       0       0       0
  2047 ;;      Temps:          0       0       0       0       0
  2048 ;;      Totals:         0       1       0       0       0
  2049 ;;Total ram usage:        1 bytes
  2050 ;; Hardware stack levels used:    1
  2051 ;; Hardware stack levels required when called:    8
  2052 ;; This function calls:
  2053 ;;		Nothing
  2054 ;; This function is called by:
  2055 ;;		_main
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           	psect	text9
  2060  00121A                     __ptext9:
  2061                           	opt stack 0
  2062  00121A                     _i2c_configure_slave:
  2063                           	opt stack 21
  2064                           
  2065                           ; BSR set to: 0
  2066                           ;incstack = 0
  2067                           ;i2c_configure_slave@addr stored from wreg
  2068  00121A  CFE8 F08E          	movff	wreg,i2c_configure_slave@addr
  2069                           
  2070                           ;my_i2c.c: 264: TRISCbits.TRISC3 = 1;
  2071  00121E  8694               	bsf	3988,3,c	;volatile
  2072                           
  2073                           ;my_i2c.c: 265: TRISCbits.TRISC4 = 1;
  2074  001220  8894               	bsf	3988,4,c	;volatile
  2075                           
  2076                           ;my_i2c.c: 270: SSPADD = addr;
  2077  001222  C08E  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  2078                           
  2079                           ;my_i2c.c: 272: SSPSTAT = 0x0;
  2080  001226  0E00               	movlw	0
  2081  001228  6EC7               	movwf	4039,c	;volatile
  2082                           
  2083                           ;my_i2c.c: 273: SSPCON1 = 0x0;
  2084  00122A  0E00               	movlw	0
  2085  00122C  6EC6               	movwf	4038,c	;volatile
  2086                           
  2087                           ;my_i2c.c: 274: SSPCON2 = 0x0;
  2088  00122E  0E00               	movlw	0
  2089  001230  6EC5               	movwf	4037,c	;volatile
  2090                           
  2091                           ;my_i2c.c: 275: SSPCON1 |= 0x0E;
  2092  001232  0E0E               	movlw	14
  2093  001234  12C6               	iorwf	4038,f,c	;volatile
  2094                           
  2095                           ;my_i2c.c: 276: SSPSTAT |= 0b10000000;
  2096  001236  8EC7               	bsf	4039,7,c	;volatile
  2097                           
  2098                           ;my_i2c.c: 279: TRISCbits.TRISC3 = 1;
  2099  001238  8694               	bsf	3988,3,c	;volatile
  2100                           
  2101                           ;my_i2c.c: 280: TRISCbits.TRISC4 = 1;
  2102  00123A  8894               	bsf	3988,4,c	;volatile
  2103                           
  2104                           ;my_i2c.c: 301: SSPCON2bits.SEN = 1;
  2105  00123C  80C5               	bsf	4037,0,c	;volatile
  2106                           
  2107                           ;my_i2c.c: 302: SSPCON1 |= 0b00100000;
  2108  00123E  8AC6               	bsf	4038,5,c	;volatile
  2109  001240  0012               	return	
  2110  001242                     __end_of_i2c_configure_slave:
  2111                           	opt stack 0
  2112                           tblptru	equ	0xFF8
  2113                           tblptrh	equ	0xFF7
  2114                           tblptrl	equ	0xFF6
  2115                           tablat	equ	0xFF5
  2116                           prodh	equ	0xFF4
  2117                           prodl	equ	0xFF3
  2118                           postinc0	equ	0xFEE
  2119                           wreg	equ	0xFE8
  2120                           indf1	equ	0xFE7
  2121                           postdec1	equ	0xFE5
  2122                           fsr1h	equ	0xFE2
  2123                           fsr1l	equ	0xFE1
  2124                           indf2	equ	0xFDF
  2125                           postinc2	equ	0xFDE
  2126                           postdec2	equ	0xFDD
  2127                           fsr2h	equ	0xFDA
  2128                           fsr2l	equ	0xFD9
  2129                           status	equ	0xFD8
  2130                           
  2131 ;; *************** function _enable_interrupts *****************
  2132 ;; Defined at:
  2133 ;;		line 15 in file "../src/interrupts.c"
  2134 ;; Parameters:    Size  Location     Type
  2135 ;;		None
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;		None
  2138 ;; Return value:  Size  Location     Type
  2139 ;;		None               void
  2140 ;; Registers used:
  2141 ;;		None
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2147 ;;      Params:         0       0       0       0       0
  2148 ;;      Locals:         0       0       0       0       0
  2149 ;;      Temps:          0       0       0       0       0
  2150 ;;      Totals:         0       0       0       0       0
  2151 ;;Total ram usage:        0 bytes
  2152 ;; Hardware stack levels used:    1
  2153 ;; Hardware stack levels required when called:    8
  2154 ;; This function calls:
  2155 ;;		Nothing
  2156 ;; This function is called by:
  2157 ;;		_main
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           	psect	text10
  2162  00136C                     __ptext10:
  2163                           	opt stack 0
  2164  00136C                     _enable_interrupts:
  2165                           	opt stack 21
  2166                           
  2167                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  2168                           
  2169                           ;incstack = 0
  2170  00136C  8ED0               	bsf	4048,7,c	;volatile
  2171                           
  2172                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  2173  00136E  8EF2               	bsf	intcon,7,c	;volatile
  2174                           
  2175                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  2176  001370  8CF2               	bsf	intcon,6,c	;volatile
  2177  001372  0012               	return	
  2178  001374                     __end_of_enable_interrupts:
  2179                           	opt stack 0
  2180                           tblptru	equ	0xFF8
  2181                           tblptrh	equ	0xFF7
  2182                           tblptrl	equ	0xFF6
  2183                           tablat	equ	0xFF5
  2184                           prodh	equ	0xFF4
  2185                           prodl	equ	0xFF3
  2186                           intcon	equ	0xFF2
  2187                           postinc0	equ	0xFEE
  2188                           wreg	equ	0xFE8
  2189                           indf1	equ	0xFE7
  2190                           postdec1	equ	0xFE5
  2191                           fsr1h	equ	0xFE2
  2192                           fsr1l	equ	0xFE1
  2193                           indf2	equ	0xFDF
  2194                           postinc2	equ	0xFDE
  2195                           postdec2	equ	0xFDD
  2196                           fsr2h	equ	0xFDA
  2197                           fsr2l	equ	0xFD9
  2198                           status	equ	0xFD8
  2199                           
  2200 ;; *************** function _block_on_To_msgqueues *****************
  2201 ;; Defined at:
  2202 ;;		line 258 in file "../src/messages.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;		None
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;		None
  2207 ;; Return value:  Size  Location     Type
  2208 ;;		None               void
  2209 ;; Registers used:
  2210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2216 ;;      Params:         0       0       0       0       0
  2217 ;;      Locals:         0       0       0       0       0
  2218 ;;      Temps:          0       1       0       0       0
  2219 ;;      Totals:         0       1       0       0       0
  2220 ;;Total ram usage:        1 bytes
  2221 ;; Hardware stack levels used:    1
  2222 ;; Hardware stack levels required when called:   11
  2223 ;; This function calls:
  2224 ;;		_Delay1KTCYx
  2225 ;;		_check_msg
  2226 ;;		_in_main
  2227 ;; This function is called by:
  2228 ;;		_main
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           	psect	text11
  2233  000CA6                     __ptext11:
  2234                           	opt stack 0
  2235  000CA6                     _block_on_To_msgqueues:
  2236                           	opt stack 18
  2237                           
  2238                           ;messages.c: 259: if (!in_main()) {
  2239                           
  2240                           ;incstack = 0
  2241  000CA6  ECF5  F007         	call	_in_main	;wreg free
  2242  000CAA  0100               	movlb	0	; () banked
  2243  000CAC  0100               	movlb	0	; () banked
  2244  000CAE  5193               	movf	(?_in_main+1)& (0+255),w,b
  2245  000CB0  0100               	movlb	0	; () banked
  2246  000CB2  1192               	iorwf	?_in_main& (0+255),w,b
  2247  000CB4  B4D8               	btfsc	status,2,c
  2248  000CB6  0012               	return	
  2249                           
  2250                           ; BSR set to: 0
  2251                           ;messages.c: 261: }
  2252                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  2253                           
  2254                           ; BSR set to: 0
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;messages.c: 260: return;
  2258  000CB8  0100               	movlb	0	; () banked
  2259  000CBA  6F94               	movwf	??_block_on_To_msgqueues& (0+255),b
  2260  000CBC  0E01               	movlw	1
  2261  000CBE  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  2262  000CC0  0100               	movlb	0	; () banked
  2263  000CC2  5194               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2264  000CC4                     l3060:
  2265                           
  2266                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  2267  000CC4  0101               	movlb	1	; () banked
  2268  000CC6  0E01               	movlw	high _ToMainHigh_MQ
  2269  000CC8  0100               	movlb	0	; () banked
  2270  000CCA  0100               	movlb	0	; () banked
  2271  000CCC  6F8F               	movwf	(check_msg@qptr+1)& (0+255),b
  2272  000CCE  0101               	movlb	1	; () banked
  2273  000CD0  0E6C               	movlw	low _ToMainHigh_MQ
  2274  000CD2  0100               	movlb	0	; () banked
  2275  000CD4  0100               	movlb	0	; () banked
  2276  000CD6  6F8E               	movwf	check_msg@qptr& (0+255),b
  2277  000CD8  ECB2  F008         	call	_check_msg	;wreg free
  2278  000CDC  0900               	iorlw	0
  2279  000CDE  B4D8               	btfsc	status,2,c
  2280  000CE0  D007               	goto	l3066
  2281                           
  2282                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  2283  000CE2  0100               	movlb	0	; () banked
  2284  000CE4  6F94               	movwf	??_block_on_To_msgqueues& (0+255),b
  2285  000CE6  0E00               	movlw	0
  2286  000CE8  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  2287  000CEA  0100               	movlb	0	; () banked
  2288  000CEC  5194               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2289  000CEE  0012               	return	
  2290  000CF0                     l3066:
  2291                           
  2292                           ;messages.c: 271: }
  2293                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  2294  000CF0  0101               	movlb	1	; () banked
  2295  000CF2  0E01               	movlw	high _ToMainLow_MQ
  2296  000CF4  0100               	movlb	0	; () banked
  2297  000CF6  0100               	movlb	0	; () banked
  2298  000CF8  6F8F               	movwf	(check_msg@qptr+1)& (0+255),b
  2299  000CFA  0101               	movlb	1	; () banked
  2300  000CFC  0EA2               	movlw	low _ToMainLow_MQ
  2301  000CFE  0100               	movlb	0	; () banked
  2302  000D00  0100               	movlb	0	; () banked
  2303  000D02  6F8E               	movwf	check_msg@qptr& (0+255),b
  2304  000D04  ECB2  F008         	call	_check_msg	;wreg free
  2305  000D08  0900               	iorlw	0
  2306  000D0A  B4D8               	btfsc	status,2,c
  2307  000D0C  D007               	goto	l3072
  2308                           
  2309                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  2310  000D0E  0100               	movlb	0	; () banked
  2311  000D10  6F94               	movwf	??_block_on_To_msgqueues& (0+255),b
  2312  000D12  0E00               	movlw	0
  2313  000D14  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  2314  000D16  0100               	movlb	0	; () banked
  2315  000D18  5194               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2316  000D1A  0012               	return	
  2317  000D1C                     l3072:
  2318                           
  2319                           ;messages.c: 278: }
  2320                           ;messages.c: 279: Delay1KTCYx(10);
  2321  000D1C  0E0A               	movlw	10
  2322  000D1E  EC53  F009         	call	_Delay1KTCYx
  2323  000D22  D7D0               	goto	l3060
  2324  000D24                     __end_of_block_on_To_msgqueues:
  2325                           	opt stack 0
  2326                           tblptru	equ	0xFF8
  2327                           tblptrh	equ	0xFF7
  2328                           tblptrl	equ	0xFF6
  2329                           tablat	equ	0xFF5
  2330                           prodh	equ	0xFF4
  2331                           prodl	equ	0xFF3
  2332                           intcon	equ	0xFF2
  2333                           postinc0	equ	0xFEE
  2334                           wreg	equ	0xFE8
  2335                           indf1	equ	0xFE7
  2336                           postdec1	equ	0xFE5
  2337                           fsr1h	equ	0xFE2
  2338                           fsr1l	equ	0xFE1
  2339                           indf2	equ	0xFDF
  2340                           postinc2	equ	0xFDE
  2341                           postdec2	equ	0xFDD
  2342                           fsr2h	equ	0xFDA
  2343                           fsr2l	equ	0xFD9
  2344                           status	equ	0xFD8
  2345                           
  2346 ;; *************** function _in_main *****************
  2347 ;; Defined at:
  2348 ;;		line 43 in file "../src/interrupts.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;		None
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;		None
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  2   18[BANK0 ] int 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2, status,0, cstack
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2362 ;;      Params:         0       2       0       0       0
  2363 ;;      Locals:         0       0       0       0       0
  2364 ;;      Temps:          0       0       0       0       0
  2365 ;;      Totals:         0       2       0       0       0
  2366 ;;Total ram usage:        2 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:   10
  2369 ;; This function calls:
  2370 ;;		_in_high_int
  2371 ;;		_in_low_int
  2372 ;; This function is called by:
  2373 ;;		_block_on_To_msgqueues
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           	psect	text12
  2378  000FEA                     __ptext12:
  2379                           	opt stack 0
  2380  000FEA                     _in_main:
  2381                           	opt stack 18
  2382                           
  2383                           ;interrupts.c: 44: if ((!in_low_int()) && (!in_high_int())) {
  2384                           
  2385                           ;incstack = 0
  2386  000FEA  ECD2  F007         	call	_in_low_int	;wreg free
  2387  000FEE  0100               	movlb	0	; () banked
  2388  000FF0  0100               	movlb	0	; () banked
  2389  000FF2  5191               	movf	(?_in_low_int+1)& (0+255),w,b
  2390  000FF4  0100               	movlb	0	; () banked
  2391  000FF6  1190               	iorwf	?_in_low_int& (0+255),w,b
  2392  000FF8  A4D8               	btfss	status,2,c
  2393  000FFA  D011               	goto	l2704
  2394                           
  2395                           ; BSR set to: 0
  2396  000FFC  EC85  F009         	call	_in_high_int	;wreg free
  2397  001000  0100               	movlb	0	; () banked
  2398  001002  0100               	movlb	0	; () banked
  2399  001004  518F               	movf	(?_in_high_int+1)& (0+255),w,b
  2400  001006  0100               	movlb	0	; () banked
  2401  001008  118E               	iorwf	?_in_high_int& (0+255),w,b
  2402  00100A  A4D8               	btfss	status,2,c
  2403  00100C  D008               	goto	l2704
  2404                           
  2405                           ; BSR set to: 0
  2406                           ;interrupts.c: 45: return (1);
  2407  00100E  0E00               	movlw	0
  2408  001010  0100               	movlb	0	; () banked
  2409  001012  0100               	movlb	0	; () banked
  2410  001014  6F93               	movwf	(?_in_main+1)& (0+255),b
  2411  001016  0E01               	movlw	1
  2412  001018  0100               	movlb	0	; () banked
  2413  00101A  6F92               	movwf	?_in_main& (0+255),b
  2414  00101C  0012               	return	
  2415  00101E                     l2704:
  2416                           
  2417                           ; BSR set to: 0
  2418                           ;interrupts.c: 47: return (0);
  2419  00101E  0E00               	movlw	0
  2420  001020  0100               	movlb	0	; () banked
  2421  001022  0100               	movlb	0	; () banked
  2422  001024  6F93               	movwf	(?_in_main+1)& (0+255),b
  2423  001026  0E00               	movlw	0
  2424  001028  0100               	movlb	0	; () banked
  2425  00102A  6F92               	movwf	?_in_main& (0+255),b
  2426  00102C  0012               	return	
  2427  00102E                     __end_of_in_main:
  2428                           	opt stack 0
  2429                           tblptru	equ	0xFF8
  2430                           tblptrh	equ	0xFF7
  2431                           tblptrl	equ	0xFF6
  2432                           tablat	equ	0xFF5
  2433                           prodh	equ	0xFF4
  2434                           prodl	equ	0xFF3
  2435                           intcon	equ	0xFF2
  2436                           postinc0	equ	0xFEE
  2437                           wreg	equ	0xFE8
  2438                           indf1	equ	0xFE7
  2439                           postdec1	equ	0xFE5
  2440                           fsr1h	equ	0xFE2
  2441                           fsr1l	equ	0xFE1
  2442                           indf2	equ	0xFDF
  2443                           postinc2	equ	0xFDE
  2444                           postdec2	equ	0xFDD
  2445                           fsr2h	equ	0xFDA
  2446                           fsr2l	equ	0xFD9
  2447                           status	equ	0xFD8
  2448                           
  2449 ;; *************** function _in_low_int *****************
  2450 ;; Defined at:
  2451 ;;		line 32 in file "../src/interrupts.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;		None
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;		None
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  2   16[BANK0 ] int 
  2458 ;; Registers used:
  2459 ;;		wreg, status,2, status,0, cstack
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2465 ;;      Params:         0       2       0       0       0
  2466 ;;      Locals:         0       0       0       0       0
  2467 ;;      Temps:          0       0       0       0       0
  2468 ;;      Totals:         0       2       0       0       0
  2469 ;;Total ram usage:        2 bytes
  2470 ;; Hardware stack levels used:    1
  2471 ;; Hardware stack levels required when called:    9
  2472 ;; This function calls:
  2473 ;;		_in_high_int
  2474 ;; This function is called by:
  2475 ;;		_in_main
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text13
  2480  000FA4                     __ptext13:
  2481                           	opt stack 0
  2482  000FA4                     _in_low_int:
  2483                           	opt stack 18
  2484                           
  2485                           ;interrupts.c: 34: if (INTCONbits.GIEL == 1) {
  2486                           
  2487                           ; BSR set to: 0
  2488                           ;incstack = 0
  2489  000FA4  ACF2               	btfss	intcon,6,c	;volatile
  2490  000FA6  D008               	goto	l2682
  2491                           
  2492                           ;interrupts.c: 35: return (0);
  2493  000FA8  0E00               	movlw	0
  2494  000FAA  0100               	movlb	0	; () banked
  2495  000FAC  0100               	movlb	0	; () banked
  2496  000FAE  6F91               	movwf	(?_in_low_int+1)& (0+255),b
  2497  000FB0  0E00               	movlw	0
  2498  000FB2  0100               	movlb	0	; () banked
  2499  000FB4  6F90               	movwf	?_in_low_int& (0+255),b
  2500  000FB6  0012               	return	
  2501  000FB8                     l2682:
  2502  000FB8  EC85  F009         	call	_in_high_int	;wreg free
  2503  000FBC  0100               	movlb	0	; () banked
  2504  000FBE  0100               	movlb	0	; () banked
  2505  000FC0  518F               	movf	(?_in_high_int+1)& (0+255),w,b
  2506  000FC2  0100               	movlb	0	; () banked
  2507  000FC4  118E               	iorwf	?_in_high_int& (0+255),w,b
  2508  000FC6  B4D8               	btfsc	status,2,c
  2509  000FC8  D008               	goto	l2690
  2510                           
  2511                           ; BSR set to: 0
  2512                           ;interrupts.c: 37: return (0);
  2513  000FCA  0E00               	movlw	0
  2514  000FCC  0100               	movlb	0	; () banked
  2515  000FCE  0100               	movlb	0	; () banked
  2516  000FD0  6F91               	movwf	(?_in_low_int+1)& (0+255),b
  2517  000FD2  0E00               	movlw	0
  2518  000FD4  0100               	movlb	0	; () banked
  2519  000FD6  6F90               	movwf	?_in_low_int& (0+255),b
  2520  000FD8  0012               	return	
  2521  000FDA                     l2690:
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;interrupts.c: 39: return (1);
  2525  000FDA  0E00               	movlw	0
  2526  000FDC  0100               	movlb	0	; () banked
  2527  000FDE  0100               	movlb	0	; () banked
  2528  000FE0  6F91               	movwf	(?_in_low_int+1)& (0+255),b
  2529  000FE2  0E01               	movlw	1
  2530  000FE4  0100               	movlb	0	; () banked
  2531  000FE6  6F90               	movwf	?_in_low_int& (0+255),b
  2532  000FE8  0012               	return	
  2533  000FEA                     __end_of_in_low_int:
  2534                           	opt stack 0
  2535                           tblptru	equ	0xFF8
  2536                           tblptrh	equ	0xFF7
  2537                           tblptrl	equ	0xFF6
  2538                           tablat	equ	0xFF5
  2539                           prodh	equ	0xFF4
  2540                           prodl	equ	0xFF3
  2541                           intcon	equ	0xFF2
  2542                           postinc0	equ	0xFEE
  2543                           wreg	equ	0xFE8
  2544                           indf1	equ	0xFE7
  2545                           postdec1	equ	0xFE5
  2546                           fsr1h	equ	0xFE2
  2547                           fsr1l	equ	0xFE1
  2548                           indf2	equ	0xFDF
  2549                           postinc2	equ	0xFDE
  2550                           postdec2	equ	0xFDD
  2551                           fsr2h	equ	0xFDA
  2552                           fsr2l	equ	0xFD9
  2553                           status	equ	0xFD8
  2554                           
  2555 ;; *************** function _in_high_int *****************
  2556 ;; Defined at:
  2557 ;;		line 23 in file "../src/interrupts.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;		None
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;		None
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  2   14[BANK0 ] int 
  2564 ;; Registers used:
  2565 ;;		wreg, status,2
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2571 ;;      Params:         0       2       0       0       0
  2572 ;;      Locals:         0       0       0       0       0
  2573 ;;      Temps:          0       0       0       0       0
  2574 ;;      Totals:         0       2       0       0       0
  2575 ;;Total ram usage:        2 bytes
  2576 ;; Hardware stack levels used:    1
  2577 ;; Hardware stack levels required when called:    8
  2578 ;; This function calls:
  2579 ;;		Nothing
  2580 ;; This function is called by:
  2581 ;;		_in_low_int
  2582 ;;		_in_main
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           	psect	text14
  2587  00130A                     __ptext14:
  2588                           	opt stack 0
  2589  00130A                     _in_high_int:
  2590                           	opt stack 18
  2591                           
  2592                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;incstack = 0
  2596  00130A  0E00               	movlw	0
  2597  00130C  AEF2               	btfss	intcon,7,c	;volatile
  2598  00130E  0E01               	movlw	1
  2599  001310  0100               	movlb	0	; () banked
  2600  001312  0100               	movlb	0	; () banked
  2601  001314  6F8E               	movwf	?_in_high_int& (0+255),b
  2602  001316  0100               	movlb	0	; () banked
  2603  001318  6B8F               	clrf	(?_in_high_int+1)& (0+255),b
  2604  00131A  0012               	return	
  2605  00131C                     __end_of_in_high_int:
  2606                           	opt stack 0
  2607                           tblptru	equ	0xFF8
  2608                           tblptrh	equ	0xFF7
  2609                           tblptrl	equ	0xFF6
  2610                           tablat	equ	0xFF5
  2611                           prodh	equ	0xFF4
  2612                           prodl	equ	0xFF3
  2613                           intcon	equ	0xFF2
  2614                           postinc0	equ	0xFEE
  2615                           wreg	equ	0xFE8
  2616                           indf1	equ	0xFE7
  2617                           postdec1	equ	0xFE5
  2618                           fsr1h	equ	0xFE2
  2619                           fsr1l	equ	0xFE1
  2620                           indf2	equ	0xFDF
  2621                           postinc2	equ	0xFDE
  2622                           postdec2	equ	0xFDD
  2623                           fsr2h	equ	0xFDA
  2624                           fsr2l	equ	0xFD9
  2625                           status	equ	0xFD8
  2626                           
  2627 ;; *************** function _check_msg *****************
  2628 ;; Defined at:
  2629 ;;		line 222 in file "../src/messages.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;  qptr            2   14[BANK0 ] PTR struct __msg_queue
  2632 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;		None
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  1    wreg      unsigned char 
  2637 ;; Registers used:
  2638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2644 ;;      Params:         0       2       0       0       0
  2645 ;;      Locals:         0       0       0       0       0
  2646 ;;      Temps:          0       1       0       0       0
  2647 ;;      Totals:         0       3       0       0       0
  2648 ;;Total ram usage:        3 bytes
  2649 ;; Hardware stack levels used:    1
  2650 ;; Hardware stack levels required when called:    8
  2651 ;; This function calls:
  2652 ;;		Nothing
  2653 ;; This function is called by:
  2654 ;;		_block_on_To_msgqueues
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658                           	psect	text15
  2659  001164                     __ptext15:
  2660                           	opt stack 0
  2661  001164                     _check_msg:
  2662                           	opt stack 20
  2663                           
  2664                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;incstack = 0
  2668  001164  0100               	movlb	0	; () banked
  2669  001166  EE20 F035          	lfsr	2,53
  2670  00116A  0100               	movlb	0	; () banked
  2671  00116C  518E               	movf	check_msg@qptr& (0+255),w,b
  2672  00116E  26D9               	addwf	fsr2l,f,c
  2673  001170  0100               	movlb	0	; () banked
  2674  001172  518F               	movf	(check_msg@qptr+1)& (0+255),w,b
  2675  001174  22DA               	addwfc	fsr2h,f,c
  2676  001176  50DF               	movf	indf2,w,c
  2677  001178  0100               	movlb	0	; () banked
  2678  00117A  6F90               	movwf	??_check_msg& (0+255),b
  2679  00117C  0100               	movlb	0	; () banked
  2680  00117E  5190               	movf	??_check_msg& (0+255),w,b
  2681  001180  0D0D               	mullw	13
  2682  001182  50F3               	movf	prodl,w,c
  2683  001184  0100               	movlb	0	; () banked
  2684  001186  0100               	movlb	0	; () banked
  2685  001188  258E               	addwf	check_msg@qptr& (0+255),w,b
  2686  00118A  6ED9               	movwf	fsr2l,c
  2687  00118C  50F4               	movf	prodh,w,c
  2688  00118E  0100               	movlb	0	; () banked
  2689  001190  0100               	movlb	0	; () banked
  2690  001192  218F               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  2691  001194  6EDA               	movwf	fsr2h,c
  2692  001196  50DF               	movf	indf2,w,c
  2693  001198  0012               	return	
  2694  00119A                     __end_of_check_msg:
  2695                           	opt stack 0
  2696                           tblptru	equ	0xFF8
  2697                           tblptrh	equ	0xFF7
  2698                           tblptrl	equ	0xFF6
  2699                           tablat	equ	0xFF5
  2700                           prodh	equ	0xFF4
  2701                           prodl	equ	0xFF3
  2702                           intcon	equ	0xFF2
  2703                           postinc0	equ	0xFEE
  2704                           wreg	equ	0xFE8
  2705                           indf1	equ	0xFE7
  2706                           postdec1	equ	0xFE5
  2707                           fsr1h	equ	0xFE2
  2708                           fsr1l	equ	0xFE1
  2709                           indf2	equ	0xFDF
  2710                           postinc2	equ	0xFDE
  2711                           postdec2	equ	0xFDD
  2712                           fsr2h	equ	0xFDA
  2713                           fsr2l	equ	0xFD9
  2714                           status	equ	0xFD8
  2715                           
  2716 ;; *************** function _Delay1KTCYx *****************
  2717 ;; Defined at:
  2718 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;  unit            1    wreg     unsigned char 
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;  unit            1   14[BANK0 ] unsigned char 
  2723 ;; Return value:  Size  Location     Type
  2724 ;;		None               void
  2725 ;; Registers used:
  2726 ;;		wreg
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2732 ;;      Params:         0       0       0       0       0
  2733 ;;      Locals:         0       1       0       0       0
  2734 ;;      Temps:          0       0       0       0       0
  2735 ;;      Totals:         0       1       0       0       0
  2736 ;;Total ram usage:        1 bytes
  2737 ;; Hardware stack levels used:    1
  2738 ;; Hardware stack levels required when called:    8
  2739 ;; This function calls:
  2740 ;;		Nothing
  2741 ;; This function is called by:
  2742 ;;		_block_on_To_msgqueues
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           	psect	text16
  2747  0012A6                     __ptext16:
  2748                           	opt stack 0
  2749  0012A6                     _Delay1KTCYx:
  2750                           	opt stack 20
  2751                           
  2752                           ; BSR set to: 0
  2753                           ;incstack = 0
  2754                           ;Delay1KTCYx@unit stored from wreg
  2755  0012A6  CFE8 F08E          	movff	wreg,Delay1KTCYx@unit
  2756  0012AA                     l788:
  2757  0012AA  0EFA               	movlw	250
  2758  0012AC                     u2377:
  2759  0012AC  F000               	nop	
  2760  0012AE  2EE8               	decfsz	wreg,f,c
  2761  0012B0  D7FD               	goto	u2377
  2762  0012B2  0100               	movlb	0	; () banked
  2763  0012B4  0100               	movlb	0	; () banked
  2764  0012B6  2F8E               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  2765  0012B8  D7F8               	goto	l788
  2766  0012BA  0012               	return	
  2767  0012BC                     __end_of_Delay1KTCYx:
  2768                           	opt stack 0
  2769                           tblptru	equ	0xFF8
  2770                           tblptrh	equ	0xFF7
  2771                           tblptrl	equ	0xFF6
  2772                           tablat	equ	0xFF5
  2773                           prodh	equ	0xFF4
  2774                           prodl	equ	0xFF3
  2775                           intcon	equ	0xFF2
  2776                           postinc0	equ	0xFEE
  2777                           wreg	equ	0xFE8
  2778                           indf1	equ	0xFE7
  2779                           postdec1	equ	0xFE5
  2780                           fsr1h	equ	0xFE2
  2781                           fsr1l	equ	0xFE1
  2782                           indf2	equ	0xFDF
  2783                           postinc2	equ	0xFDE
  2784                           postdec2	equ	0xFDD
  2785                           fsr2h	equ	0xFDA
  2786                           fsr2l	equ	0xFD9
  2787                           status	equ	0xFD8
  2788                           
  2789 ;; *************** function _WriteTimer1 *****************
  2790 ;; Defined at:
  2791 ;;		line 14 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;  timer1          2   14[BANK0 ] unsigned int 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;  timer           2   16[BANK0 ] struct Timers
  2796 ;; Return value:  Size  Location     Type
  2797 ;;		None               void
  2798 ;; Registers used:
  2799 ;;		None
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2805 ;;      Params:         0       2       0       0       0
  2806 ;;      Locals:         0       2       0       0       0
  2807 ;;      Temps:          0       0       0       0       0
  2808 ;;      Totals:         0       4       0       0       0
  2809 ;;Total ram usage:        4 bytes
  2810 ;; Hardware stack levels used:    1
  2811 ;; Hardware stack levels required when called:    8
  2812 ;; This function calls:
  2813 ;;		Nothing
  2814 ;; This function is called by:
  2815 ;;		_main
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           	psect	text17
  2820  00131C                     __ptext17:
  2821                           	opt stack 0
  2822  00131C                     _WriteTimer1:
  2823                           	opt stack 21
  2824                           
  2825                           ; BSR set to: 0
  2826                           ;incstack = 0
  2827  00131C  C08E  F090         	movff	WriteTimer1@timer1,WriteTimer1@timer
  2828  001320  C08F  F091         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  2829  001324  C091  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  2830  001328  C090  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  2831  00132C  0012               	return	
  2832  00132E                     __end_of_WriteTimer1:
  2833                           	opt stack 0
  2834                           tblptru	equ	0xFF8
  2835                           tblptrh	equ	0xFF7
  2836                           tblptrl	equ	0xFF6
  2837                           tablat	equ	0xFF5
  2838                           prodh	equ	0xFF4
  2839                           prodl	equ	0xFF3
  2840                           intcon	equ	0xFF2
  2841                           postinc0	equ	0xFEE
  2842                           wreg	equ	0xFE8
  2843                           indf1	equ	0xFE7
  2844                           postdec1	equ	0xFE5
  2845                           fsr1h	equ	0xFE2
  2846                           fsr1l	equ	0xFE1
  2847                           indf2	equ	0xFDF
  2848                           postinc2	equ	0xFDE
  2849                           postdec2	equ	0xFDD
  2850                           fsr2h	equ	0xFDA
  2851                           fsr2l	equ	0xFD9
  2852                           status	equ	0xFD8
  2853                           
  2854 ;; *************** function _ToMainLow_recvmsg *****************
  2855 ;; Defined at:
  2856 ;;		line 112 in file "../src/messages.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;  maxlength       1    wreg     unsigned char 
  2859 ;;  msgtype         2   38[BANK0 ] PTR unsigned char 
  2860 ;;		 -> main@msgtype(1), 
  2861 ;;  data            2   40[BANK0 ] PTR void 
  2862 ;;		 -> main@msgbuffer(11), 
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;  maxlength       1   42[BANK0 ] unsigned char 
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  1    wreg      char 
  2867 ;; Registers used:
  2868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2874 ;;      Params:         0       4       0       0       0
  2875 ;;      Locals:         0       1       0       0       0
  2876 ;;      Temps:          0       0       0       0       0
  2877 ;;      Totals:         0       5       0       0       0
  2878 ;;Total ram usage:        5 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; Hardware stack levels required when called:   10
  2881 ;; This function calls:
  2882 ;;		_recv_msg
  2883 ;; This function is called by:
  2884 ;;		_main
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text18
  2889  00102E                     __ptext18:
  2890                           	opt stack 0
  2891  00102E                     _ToMainLow_recvmsg:
  2892                           	opt stack 19
  2893                           
  2894                           ;incstack = 0
  2895                           ;ToMainLow_recvmsg@maxlength stored from wreg
  2896  00102E  CFE8 F0AA          	movff	wreg,ToMainLow_recvmsg@maxlength
  2897                           
  2898                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  2899  001032  0101               	movlb	1	; () banked
  2900  001034  0E01               	movlw	high _ToMainLow_MQ
  2901  001036  0100               	movlb	0	; () banked
  2902  001038  0100               	movlb	0	; () banked
  2903  00103A  6F99               	movwf	(recv_msg@qptr+1)& (0+255),b
  2904  00103C  0101               	movlb	1	; () banked
  2905  00103E  0EA2               	movlw	low _ToMainLow_MQ
  2906  001040  0100               	movlb	0	; () banked
  2907  001042  0100               	movlb	0	; () banked
  2908  001044  6F98               	movwf	recv_msg@qptr& (0+255),b
  2909  001046  C0AA  F09A         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  2910  00104A  0100               	movlb	0	; () banked
  2911  00104C  0100               	movlb	0	; () banked
  2912  00104E  C0A7  F09C         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  2913  001052  0100               	movlb	0	; () banked
  2914  001054  0100               	movlb	0	; () banked
  2915  001056  C0A6  F09B         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  2916  00105A  0100               	movlb	0	; () banked
  2917  00105C  0100               	movlb	0	; () banked
  2918  00105E  C0A9  F09E         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  2919  001062  0100               	movlb	0	; () banked
  2920  001064  0100               	movlb	0	; () banked
  2921  001066  C0A8  F09D         	movff	ToMainLow_recvmsg@data,recv_msg@data
  2922  00106A  EC77  F003         	call	_recv_msg	;wreg free
  2923  00106E  0012               	return	
  2924  001070                     __end_of_ToMainLow_recvmsg:
  2925                           	opt stack 0
  2926                           tblptru	equ	0xFF8
  2927                           tblptrh	equ	0xFF7
  2928                           tblptrl	equ	0xFF6
  2929                           tablat	equ	0xFF5
  2930                           prodh	equ	0xFF4
  2931                           prodl	equ	0xFF3
  2932                           intcon	equ	0xFF2
  2933                           postinc0	equ	0xFEE
  2934                           wreg	equ	0xFE8
  2935                           indf1	equ	0xFE7
  2936                           postdec1	equ	0xFE5
  2937                           fsr1h	equ	0xFE2
  2938                           fsr1l	equ	0xFE1
  2939                           indf2	equ	0xFDF
  2940                           postinc2	equ	0xFDE
  2941                           postdec2	equ	0xFDD
  2942                           fsr2h	equ	0xFDA
  2943                           fsr2l	equ	0xFD9
  2944                           status	equ	0xFD8
  2945                           
  2946 ;; *************** function _ToMainHigh_recvmsg *****************
  2947 ;; Defined at:
  2948 ;;		line 135 in file "../src/messages.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;  maxlength       1    wreg     unsigned char 
  2951 ;;  msgtype         2   38[BANK0 ] PTR unsigned char 
  2952 ;;		 -> main@msgtype(1), 
  2953 ;;  data            2   40[BANK0 ] PTR void 
  2954 ;;		 -> main@msgbuffer(11), 
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;  maxlength       1   42[BANK0 ] unsigned char 
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  1    wreg      char 
  2959 ;; Registers used:
  2960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2966 ;;      Params:         0       4       0       0       0
  2967 ;;      Locals:         0       1       0       0       0
  2968 ;;      Temps:          0       0       0       0       0
  2969 ;;      Totals:         0       5       0       0       0
  2970 ;;Total ram usage:        5 bytes
  2971 ;; Hardware stack levels used:    1
  2972 ;; Hardware stack levels required when called:   10
  2973 ;; This function calls:
  2974 ;;		_recv_msg
  2975 ;; This function is called by:
  2976 ;;		_main
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           	psect	text19
  2981  001070                     __ptext19:
  2982                           	opt stack 0
  2983  001070                     _ToMainHigh_recvmsg:
  2984                           	opt stack 19
  2985                           
  2986                           ;incstack = 0
  2987                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  2988  001070  CFE8 F0AA          	movff	wreg,ToMainHigh_recvmsg@maxlength
  2989                           
  2990                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  2991  001074  0101               	movlb	1	; () banked
  2992  001076  0E01               	movlw	high _ToMainHigh_MQ
  2993  001078  0100               	movlb	0	; () banked
  2994  00107A  0100               	movlb	0	; () banked
  2995  00107C  6F99               	movwf	(recv_msg@qptr+1)& (0+255),b
  2996  00107E  0101               	movlb	1	; () banked
  2997  001080  0E6C               	movlw	low _ToMainHigh_MQ
  2998  001082  0100               	movlb	0	; () banked
  2999  001084  0100               	movlb	0	; () banked
  3000  001086  6F98               	movwf	recv_msg@qptr& (0+255),b
  3001  001088  C0AA  F09A         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3002  00108C  0100               	movlb	0	; () banked
  3003  00108E  0100               	movlb	0	; () banked
  3004  001090  C0A7  F09C         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3005  001094  0100               	movlb	0	; () banked
  3006  001096  0100               	movlb	0	; () banked
  3007  001098  C0A6  F09B         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3008  00109C  0100               	movlb	0	; () banked
  3009  00109E  0100               	movlb	0	; () banked
  3010  0010A0  C0A9  F09E         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3011  0010A4  0100               	movlb	0	; () banked
  3012  0010A6  0100               	movlb	0	; () banked
  3013  0010A8  C0A8  F09D         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3014  0010AC  EC77  F003         	call	_recv_msg	;wreg free
  3015  0010B0  0012               	return	
  3016  0010B2                     __end_of_ToMainHigh_recvmsg:
  3017                           	opt stack 0
  3018                           tblptru	equ	0xFF8
  3019                           tblptrh	equ	0xFF7
  3020                           tblptrl	equ	0xFF6
  3021                           tablat	equ	0xFF5
  3022                           prodh	equ	0xFF4
  3023                           prodl	equ	0xFF3
  3024                           intcon	equ	0xFF2
  3025                           postinc0	equ	0xFEE
  3026                           wreg	equ	0xFE8
  3027                           indf1	equ	0xFE7
  3028                           postdec1	equ	0xFE5
  3029                           fsr1h	equ	0xFE2
  3030                           fsr1l	equ	0xFE1
  3031                           indf2	equ	0xFDF
  3032                           postinc2	equ	0xFDE
  3033                           postdec2	equ	0xFDD
  3034                           fsr2h	equ	0xFDA
  3035                           fsr2l	equ	0xFD9
  3036                           status	equ	0xFD8
  3037                           
  3038 ;; *************** function _recv_msg *****************
  3039 ;; Defined at:
  3040 ;;		line 63 in file "../src/messages.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  qptr            2   24[BANK0 ] PTR struct __msg_queue
  3043 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3044 ;;  maxlength       1   26[BANK0 ] unsigned char 
  3045 ;;  msgtype         2   27[BANK0 ] PTR unsigned char 
  3046 ;;		 -> main@msgtype(1), 
  3047 ;;  data            2   29[BANK0 ] PTR void 
  3048 ;;		 -> main@msgbuffer(11), 
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;  qmsg            2   36[BANK0 ] PTR struct __msg
  3051 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3052 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3053 ;;  tlength         2   34[BANK0 ] unsigned int 
  3054 ;;  slot            1   33[BANK0 ] unsigned char 
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      char 
  3057 ;; Registers used:
  3058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3064 ;;      Params:         0       7       0       0       0
  3065 ;;      Locals:         0       5       0       0       0
  3066 ;;      Temps:          0       2       0       0       0
  3067 ;;      Totals:         0      14       0       0       0
  3068 ;;Total ram usage:       14 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; Hardware stack levels required when called:    9
  3071 ;; This function calls:
  3072 ;;		_memcpy
  3073 ;; This function is called by:
  3074 ;;		_ToMainLow_recvmsg
  3075 ;;		_ToMainHigh_recvmsg
  3076 ;;		_FromMainLow_recvmsg
  3077 ;;		_FromMainHigh_recvmsg
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           	psect	text20
  3082  0006EE                     __ptext20:
  3083                           	opt stack 0
  3084  0006EE                     _recv_msg:
  3085                           	opt stack 19
  3086                           
  3087                           ;messages.c: 64: unsigned char slot;
  3088                           ;messages.c: 68: msg *qmsg;
  3089                           ;messages.c: 69: size_t tlength;
  3090                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3091                           
  3092                           ;incstack = 0
  3093  0006EE  0100               	movlb	0	; () banked
  3094  0006F0  EE20 F035          	lfsr	2,53
  3095  0006F4  0100               	movlb	0	; () banked
  3096  0006F6  5198               	movf	recv_msg@qptr& (0+255),w,b
  3097  0006F8  26D9               	addwf	fsr2l,f,c
  3098  0006FA  0100               	movlb	0	; () banked
  3099  0006FC  5199               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3100  0006FE  22DA               	addwfc	fsr2h,f,c
  3101  000700  50DF               	movf	indf2,w,c
  3102  000702  0100               	movlb	0	; () banked
  3103  000704  0100               	movlb	0	; () banked
  3104  000706  6FA1               	movwf	recv_msg@slot& (0+255),b
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3108  000708  0100               	movlb	0	; () banked
  3109  00070A  0100               	movlb	0	; () banked
  3110  00070C  51A1               	movf	recv_msg@slot& (0+255),w,b
  3111  00070E  0D0D               	mullw	13
  3112  000710  50F3               	movf	prodl,w,c
  3113  000712  0100               	movlb	0	; () banked
  3114  000714  0100               	movlb	0	; () banked
  3115  000716  2598               	addwf	recv_msg@qptr& (0+255),w,b
  3116  000718  0100               	movlb	0	; () banked
  3117  00071A  0100               	movlb	0	; () banked
  3118  00071C  6FA4               	movwf	recv_msg@qmsg& (0+255),b
  3119  00071E  50F4               	movf	prodh,w,c
  3120  000720  0100               	movlb	0	; () banked
  3121  000722  0100               	movlb	0	; () banked
  3122  000724  2199               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3123  000726  0100               	movlb	0	; () banked
  3124  000728  6FA5               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;messages.c: 74: if (qmsg->full == 1) {
  3128  00072A  0E01               	movlw	1
  3129  00072C  C0A4  FFD9         	movff	recv_msg@qmsg,fsr2l
  3130  000730  C0A5  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3131  000734  62DF               	cpfseq	indf2,c
  3132  000736  D074               	goto	l3174
  3133                           
  3134                           ; BSR set to: 0
  3135                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3136  000738  0100               	movlb	0	; () banked
  3137  00073A  EE20 F001          	lfsr	2,1
  3138  00073E  0100               	movlb	0	; () banked
  3139  000740  51A4               	movf	recv_msg@qmsg& (0+255),w,b
  3140  000742  26D9               	addwf	fsr2l,f,c
  3141  000744  0100               	movlb	0	; () banked
  3142  000746  51A5               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3143  000748  22DA               	addwfc	fsr2h,f,c
  3144  00074A  50DF               	movf	indf2,w,c
  3145  00074C  0100               	movlb	0	; () banked
  3146  00074E  0100               	movlb	0	; () banked
  3147  000750  5D9A               	subwf	recv_msg@maxlength& (0+255),w,b
  3148  000752  B0D8               	btfsc	status,0,c
  3149  000754  D002               	goto	l3158
  3150                           
  3151                           ; BSR set to: 0
  3152                           ;messages.c: 77: return (-3);
  3153  000756  0EFD               	movlw	253
  3154  000758  0012               	return	
  3155  00075A                     l3158:
  3156                           
  3157                           ; BSR set to: 0
  3158                           ;messages.c: 78: }
  3159                           ;messages.c: 80: tlength = qmsg->length;
  3160  00075A  0100               	movlb	0	; () banked
  3161  00075C  EE20 F001          	lfsr	2,1
  3162  000760  0100               	movlb	0	; () banked
  3163  000762  51A4               	movf	recv_msg@qmsg& (0+255),w,b
  3164  000764  26D9               	addwf	fsr2l,f,c
  3165  000766  0100               	movlb	0	; () banked
  3166  000768  51A5               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3167  00076A  22DA               	addwfc	fsr2h,f,c
  3168  00076C  50DF               	movf	indf2,w,c
  3169  00076E  0100               	movlb	0	; () banked
  3170  000770  6F9F               	movwf	??_recv_msg& (0+255),b
  3171  000772  0100               	movlb	0	; () banked
  3172  000774  519F               	movf	??_recv_msg& (0+255),w,b
  3173  000776  0100               	movlb	0	; () banked
  3174  000778  0100               	movlb	0	; () banked
  3175  00077A  6FA2               	movwf	recv_msg@tlength& (0+255),b
  3176  00077C  0100               	movlb	0	; () banked
  3177  00077E  6BA3               	clrf	(recv_msg@tlength+1)& (0+255),b
  3178                           
  3179                           ; BSR set to: 0
  3180                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3181  000780  0100               	movlb	0	; () banked
  3182  000782  0100               	movlb	0	; () banked
  3183  000784  C09E  F08F         	movff	recv_msg@data+1,memcpy@d1+1
  3184  000788  0100               	movlb	0	; () banked
  3185  00078A  0100               	movlb	0	; () banked
  3186  00078C  C09D  F08E         	movff	recv_msg@data,memcpy@d1
  3187  000790  0E03               	movlw	3
  3188  000792  0100               	movlb	0	; () banked
  3189  000794  0100               	movlb	0	; () banked
  3190  000796  25A4               	addwf	recv_msg@qmsg& (0+255),w,b
  3191  000798  0100               	movlb	0	; () banked
  3192  00079A  6F9F               	movwf	??_recv_msg& (0+255),b
  3193  00079C  0E00               	movlw	0
  3194  00079E  0100               	movlb	0	; () banked
  3195  0007A0  0100               	movlb	0	; () banked
  3196  0007A2  21A5               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3197  0007A4  0100               	movlb	0	; () banked
  3198  0007A6  6FA0               	movwf	(??_recv_msg+1)& (0+255),b
  3199  0007A8  C09F  F090         	movff	??_recv_msg,memcpy@s1
  3200  0007AC  C0A0  F091         	movff	??_recv_msg+1,memcpy@s1+1
  3201  0007B0  C0A2  F092         	movff	recv_msg@tlength,memcpy@n
  3202  0007B4  C0A3  F093         	movff	recv_msg@tlength+1,memcpy@n+1
  3203  0007B8  EC06  F007         	call	_memcpy	;wreg free
  3204                           
  3205                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  3206  0007BC  0100               	movlb	0	; () banked
  3207  0007BE  EE20 F035          	lfsr	2,53
  3208  0007C2  0100               	movlb	0	; () banked
  3209  0007C4  5198               	movf	recv_msg@qptr& (0+255),w,b
  3210  0007C6  26D9               	addwf	fsr2l,f,c
  3211  0007C8  0100               	movlb	0	; () banked
  3212  0007CA  5199               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3213  0007CC  22DA               	addwfc	fsr2h,f,c
  3214  0007CE  0100               	movlb	0	; () banked
  3215  0007D0  EE10 F035          	lfsr	1,53
  3216  0007D4  0100               	movlb	0	; () banked
  3217  0007D6  5198               	movf	recv_msg@qptr& (0+255),w,b
  3218  0007D8  26E1               	addwf	fsr1l,f,c
  3219  0007DA  0100               	movlb	0	; () banked
  3220  0007DC  5199               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3221  0007DE  22E2               	addwfc	fsr1h,f,c
  3222  0007E0  50E7               	movf	indf1,w,c
  3223  0007E2  0100               	movlb	0	; () banked
  3224  0007E4  6F9F               	movwf	??_recv_msg& (0+255),b
  3225  0007E6  0100               	movlb	0	; () banked
  3226  0007E8  299F               	incf	??_recv_msg& (0+255),w,b
  3227  0007EA  0B03               	andlw	3
  3228  0007EC  6EDF               	movwf	indf2,c
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  3232  0007EE  0100               	movlb	0	; () banked
  3233  0007F0  EE20 F002          	lfsr	2,2
  3234  0007F4  0100               	movlb	0	; () banked
  3235  0007F6  51A4               	movf	recv_msg@qmsg& (0+255),w,b
  3236  0007F8  26D9               	addwf	fsr2l,f,c
  3237  0007FA  0100               	movlb	0	; () banked
  3238  0007FC  51A5               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3239  0007FE  22DA               	addwfc	fsr2h,f,c
  3240  000800  C09B  FFE1         	movff	recv_msg@msgtype,fsr1l
  3241  000804  C09C  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  3242  000808  CFDF FFE7          	movff	indf2,indf1
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;messages.c: 91: qmsg->full = 0;
  3246  00080C  C0A4  FFD9         	movff	recv_msg@qmsg,fsr2l
  3247  000810  C0A5  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3248  000814  0E00               	movlw	0
  3249  000816  6EDF               	movwf	indf2,c
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;messages.c: 92: return (tlength);
  3253  000818  0100               	movlb	0	; () banked
  3254  00081A  0100               	movlb	0	; () banked
  3255  00081C  51A2               	movf	recv_msg@tlength& (0+255),w,b
  3256  00081E  0012               	return	
  3257  000820                     l3174:
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;messages.c: 94: return (-4);
  3261  000820  0EFC               	movlw	252
  3262  000822  0012               	return	
  3263  000824                     __end_of_recv_msg:
  3264                           	opt stack 0
  3265                           tblptru	equ	0xFF8
  3266                           tblptrh	equ	0xFF7
  3267                           tblptrl	equ	0xFF6
  3268                           tablat	equ	0xFF5
  3269                           prodh	equ	0xFF4
  3270                           prodl	equ	0xFF3
  3271                           intcon	equ	0xFF2
  3272                           postinc0	equ	0xFEE
  3273                           wreg	equ	0xFE8
  3274                           indf1	equ	0xFE7
  3275                           postdec1	equ	0xFE5
  3276                           fsr1h	equ	0xFE2
  3277                           fsr1l	equ	0xFE1
  3278                           indf2	equ	0xFDF
  3279                           postinc2	equ	0xFDE
  3280                           postdec2	equ	0xFDD
  3281                           fsr2h	equ	0xFDA
  3282                           fsr2l	equ	0xFD9
  3283                           status	equ	0xFD8
  3284                           
  3285 ;; *************** function _memcpy *****************
  3286 ;; Defined at:
  3287 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;  d1              2   14[BANK0 ] PTR void 
  3290 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3291 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3292 ;;		 -> main@msgbuffer(11), 
  3293 ;;  s1              2   16[BANK0 ] PTR const void 
  3294 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3295 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3296 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  3297 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(28), 
  3298 ;;  n               2   18[BANK0 ] unsigned int 
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;  s               2   22[BANK0 ] PTR const unsigned char 
  3301 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3302 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3303 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  3304 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(28), 
  3305 ;;  d               2   20[BANK0 ] PTR unsigned char 
  3306 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3307 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3308 ;;		 -> main@msgbuffer(11), 
  3309 ;; Return value:  Size  Location     Type
  3310 ;;                  2   14[BANK0 ] PTR void 
  3311 ;; Registers used:
  3312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/0
  3315 ;;		On exit  : 0/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3318 ;;      Params:         0       6       0       0       0
  3319 ;;      Locals:         0       4       0       0       0
  3320 ;;      Temps:          0       0       0       0       0
  3321 ;;      Totals:         0      10       0       0       0
  3322 ;;Total ram usage:       10 bytes
  3323 ;; Hardware stack levels used:    1
  3324 ;; Hardware stack levels required when called:    8
  3325 ;; This function calls:
  3326 ;;		Nothing
  3327 ;; This function is called by:
  3328 ;;		_recv_msg
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332                           	psect	text21
  3333  000E0C                     __ptext21:
  3334                           	opt stack 0
  3335  000E0C                     _memcpy:
  3336                           	opt stack 19
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;incstack = 0
  3340  000E0C  0100               	movlb	0	; () banked
  3341  000E0E  0100               	movlb	0	; () banked
  3342  000E10  C091  F097         	movff	memcpy@s1+1,memcpy@s+1
  3343  000E14  0100               	movlb	0	; () banked
  3344  000E16  0100               	movlb	0	; () banked
  3345  000E18  C090  F096         	movff	memcpy@s1,memcpy@s
  3346  000E1C  0100               	movlb	0	; () banked
  3347  000E1E  0100               	movlb	0	; () banked
  3348  000E20  C08F  F095         	movff	memcpy@d1+1,memcpy@d+1
  3349  000E24  0100               	movlb	0	; () banked
  3350  000E26  0100               	movlb	0	; () banked
  3351  000E28  C08E  F094         	movff	memcpy@d1,memcpy@d
  3352  000E2C  D012               	goto	l3144
  3353  000E2E                     l3138:
  3354                           
  3355                           ; BSR set to: 0
  3356  000E2E  C096  FFD9         	movff	memcpy@s,fsr2l
  3357  000E32  C097  FFDA         	movff	memcpy@s+1,fsr2h
  3358  000E36  C094  FFE1         	movff	memcpy@d,fsr1l
  3359  000E3A  C095  FFE2         	movff	memcpy@d+1,fsr1h
  3360  000E3E  CFDF FFE7          	movff	indf2,indf1
  3361                           
  3362                           ; BSR set to: 0
  3363  000E42  0100               	movlb	0	; () banked
  3364  000E44  0100               	movlb	0	; () banked
  3365  000E46  4B96               	infsnz	memcpy@s& (0+255),f,b
  3366  000E48  2B97               	incf	(memcpy@s+1)& (0+255),f,b
  3367                           
  3368                           ; BSR set to: 0
  3369  000E4A  0100               	movlb	0	; () banked
  3370  000E4C  0100               	movlb	0	; () banked
  3371  000E4E  4B94               	infsnz	memcpy@d& (0+255),f,b
  3372  000E50  2B95               	incf	(memcpy@d+1)& (0+255),f,b
  3373  000E52                     l3144:
  3374                           
  3375                           ; BSR set to: 0
  3376  000E52  0100               	movlb	0	; () banked
  3377  000E54  0100               	movlb	0	; () banked
  3378  000E56  0792               	decf	memcpy@n& (0+255),f,b
  3379  000E58  A0D8               	btfss	status,0,c
  3380  000E5A  0793               	decf	(memcpy@n+1)& (0+255),f,b
  3381  000E5C  0100               	movlb	0	; () banked
  3382  000E5E  2992               	incf	memcpy@n& (0+255),w,b
  3383  000E60  B4D8               	btfsc	status,2,c
  3384  000E62  2993               	incf	(memcpy@n+1)& (0+255),w,b
  3385  000E64  B4D8               	btfsc	status,2,c
  3386                           
  3387                           ; BSR set to: 0
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;	Return value of _memcpy is never used
  3391  000E66  0012               	return	
  3392  000E68  D7E2               	goto	l3138
  3393  000E6A                     __end_of_memcpy:
  3394                           	opt stack 0
  3395                           tblptru	equ	0xFF8
  3396                           tblptrh	equ	0xFF7
  3397                           tblptrl	equ	0xFF6
  3398                           tablat	equ	0xFF5
  3399                           prodh	equ	0xFF4
  3400                           prodl	equ	0xFF3
  3401                           intcon	equ	0xFF2
  3402                           postinc0	equ	0xFEE
  3403                           wreg	equ	0xFE8
  3404                           indf1	equ	0xFE7
  3405                           postdec1	equ	0xFE5
  3406                           fsr1h	equ	0xFE2
  3407                           fsr1l	equ	0xFE1
  3408                           indf2	equ	0xFDF
  3409                           postinc2	equ	0xFDE
  3410                           postdec2	equ	0xFDD
  3411                           fsr2h	equ	0xFDA
  3412                           fsr2l	equ	0xFD9
  3413                           status	equ	0xFD8
  3414                           
  3415 ;; *************** function _OpenUSART *****************
  3416 ;; Defined at:
  3417 ;;		line 73 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  3418 ;; Parameters:    Size  Location     Type
  3419 ;;  config          1    wreg     unsigned char 
  3420 ;;  spbrg           2   14[BANK0 ] unsigned int 
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;  config          1   19[BANK0 ] unsigned char 
  3423 ;; Return value:  Size  Location     Type
  3424 ;;		None               void
  3425 ;; Registers used:
  3426 ;;		wreg, status,2
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3432 ;;      Params:         0       2       0       0       0
  3433 ;;      Locals:         0       1       0       0       0
  3434 ;;      Temps:          0       3       0       0       0
  3435 ;;      Totals:         0       6       0       0       0
  3436 ;;Total ram usage:        6 bytes
  3437 ;; Hardware stack levels used:    1
  3438 ;; Hardware stack levels required when called:    8
  3439 ;; This function calls:
  3440 ;;		Nothing
  3441 ;; This function is called by:
  3442 ;;		_main
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           	psect	text22
  3447  000B04                     __ptext22:
  3448                           	opt stack 0
  3449  000B04                     _OpenUSART:
  3450                           	opt stack 21
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;incstack = 0
  3454                           ;OpenUSART@config stored from wreg
  3455  000B04  CFE8 F093          	movff	wreg,OpenUSART@config
  3456  000B08  0E00               	movlw	0
  3457  000B0A  6EAC               	movwf	4012,c	;volatile
  3458  000B0C  0E00               	movlw	0
  3459  000B0E  6EAB               	movwf	4011,c	;volatile
  3460  000B10  0100               	movlb	0	; () banked
  3461  000B12  0100               	movlb	0	; () banked
  3462  000B14  B193               	btfsc	OpenUSART@config& (0+255),0,b
  3463                           
  3464                           ; BSR set to: 0
  3465  000B16  88AC               	bsf	4012,4,c	;volatile
  3466                           
  3467                           ; BSR set to: 0
  3468                           
  3469                           ; BSR set to: 0
  3470  000B18  0100               	movlb	0	; () banked
  3471  000B1A  0100               	movlb	0	; () banked
  3472  000B1C  A393               	btfss	OpenUSART@config& (0+255),1,b
  3473  000B1E  D002               	goto	l3014
  3474                           
  3475                           ; BSR set to: 0
  3476  000B20  8CAC               	bsf	4012,6,c	;volatile
  3477  000B22  8CAB               	bsf	4011,6,c	;volatile
  3478  000B24                     l3014:
  3479                           
  3480                           ; BSR set to: 0
  3481  000B24  0100               	movlb	0	; () banked
  3482  000B26  0100               	movlb	0	; () banked
  3483  000B28  B593               	btfsc	OpenUSART@config& (0+255),2,b
  3484                           
  3485                           ; BSR set to: 0
  3486  000B2A  8EAC               	bsf	4012,7,c	;volatile
  3487                           
  3488                           ; BSR set to: 0
  3489                           
  3490                           ; BSR set to: 0
  3491  000B2C  0100               	movlb	0	; () banked
  3492  000B2E  0100               	movlb	0	; () banked
  3493  000B30  A793               	btfss	OpenUSART@config& (0+255),3,b
  3494  000B32  D002               	goto	l557
  3495                           
  3496                           ; BSR set to: 0
  3497  000B34  88AB               	bsf	4011,4,c	;volatile
  3498  000B36  D001               	goto	l3022
  3499  000B38                     l557:
  3500                           
  3501                           ; BSR set to: 0
  3502  000B38  8AAB               	bsf	4011,5,c	;volatile
  3503  000B3A                     l3022:
  3504                           
  3505                           ; BSR set to: 0
  3506  000B3A  0100               	movlb	0	; () banked
  3507  000B3C  0100               	movlb	0	; () banked
  3508  000B3E  B993               	btfsc	OpenUSART@config& (0+255),4,b
  3509                           
  3510                           ; BSR set to: 0
  3511  000B40  84AC               	bsf	4012,2,c	;volatile
  3512                           
  3513                           ; BSR set to: 0
  3514  000B42  989E               	bcf	3998,4,c	;volatile
  3515                           
  3516                           ; BSR set to: 0
  3517  000B44  0100               	movlb	0	; () banked
  3518  000B46  0100               	movlb	0	; () banked
  3519  000B48  BB93               	btfsc	OpenUSART@config& (0+255),5,b
  3520                           
  3521                           ; BSR set to: 0
  3522  000B4A  86AB               	bsf	4011,3,c	;volatile
  3523                           
  3524                           ; BSR set to: 0
  3525                           
  3526                           ; BSR set to: 0
  3527  000B4C  0100               	movlb	0	; () banked
  3528  000B4E  0100               	movlb	0	; () banked
  3529  000B50  AD93               	btfss	OpenUSART@config& (0+255),6,b
  3530  000B52  D002               	goto	l561
  3531                           
  3532                           ; BSR set to: 0
  3533  000B54  8A9D               	bsf	3997,5,c	;volatile
  3534  000B56  D001               	goto	l562
  3535  000B58                     l561:
  3536                           
  3537                           ; BSR set to: 0
  3538  000B58  9A9D               	bcf	3997,5,c	;volatile
  3539  000B5A                     l562:
  3540                           
  3541                           ; BSR set to: 0
  3542  000B5A  9A9E               	bcf	3998,5,c	;volatile
  3543                           
  3544                           ; BSR set to: 0
  3545  000B5C  0100               	movlb	0	; () banked
  3546  000B5E  0100               	movlb	0	; () banked
  3547  000B60  AF93               	btfss	OpenUSART@config& (0+255),7,b
  3548  000B62  D002               	goto	l563
  3549                           
  3550                           ; BSR set to: 0
  3551  000B64  889D               	bsf	3997,4,c	;volatile
  3552  000B66  D001               	goto	l564
  3553  000B68                     l563:
  3554                           
  3555                           ; BSR set to: 0
  3556  000B68  989D               	bcf	3997,4,c	;volatile
  3557  000B6A                     l564:
  3558                           
  3559                           ; BSR set to: 0
  3560  000B6A  C08E  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  3561                           
  3562                           ; BSR set to: 0
  3563  000B6E  0100               	movlb	0	; () banked
  3564  000B70  C08F  F090         	movff	OpenUSART@spbrg+1,??_OpenUSART
  3565  000B74  C090  F091         	movff	??_OpenUSART,??_OpenUSART+1
  3566  000B78  0100               	movlb	0	; () banked
  3567  000B7A  6B92               	clrf	(??_OpenUSART+2)& (0+255),b
  3568  000B7C  0100               	movlb	0	; () banked
  3569  000B7E  5191               	movf	(??_OpenUSART+1)& (0+255),w,b
  3570  000B80  6EB0               	movwf	4016,c	;volatile
  3571                           
  3572                           ; BSR set to: 0
  3573  000B82  8AAC               	bsf	4012,5,c	;volatile
  3574                           
  3575                           ; BSR set to: 0
  3576  000B84  8EAB               	bsf	4011,7,c	;volatile
  3577                           
  3578                           ; BSR set to: 0
  3579  000B86  9C94               	bcf	3988,6,c	;volatile
  3580                           
  3581                           ; BSR set to: 0
  3582  000B88  8E94               	bsf	3988,7,c	;volatile
  3583                           
  3584                           ; BSR set to: 0
  3585  000B8A  A8AC               	btfss	4012,4,c	;volatile
  3586  000B8C  0012               	return	
  3587                           
  3588                           ; BSR set to: 0
  3589  000B8E  BEAC               	btfsc	4012,7,c	;volatile
  3590  000B90  0012               	return	
  3591                           
  3592                           ; BSR set to: 0
  3593  000B92  8C94               	bsf	3988,6,c	;volatile
  3594  000B94  0012               	return	
  3595  000B96                     __end_of_OpenUSART:
  3596                           	opt stack 0
  3597                           tblptru	equ	0xFF8
  3598                           tblptrh	equ	0xFF7
  3599                           tblptrl	equ	0xFF6
  3600                           tablat	equ	0xFF5
  3601                           prodh	equ	0xFF4
  3602                           prodl	equ	0xFF3
  3603                           intcon	equ	0xFF2
  3604                           postinc0	equ	0xFEE
  3605                           wreg	equ	0xFE8
  3606                           indf1	equ	0xFE7
  3607                           postdec1	equ	0xFE5
  3608                           fsr1h	equ	0xFE2
  3609                           fsr1l	equ	0xFE1
  3610                           indf2	equ	0xFDF
  3611                           postinc2	equ	0xFDE
  3612                           postdec2	equ	0xFDD
  3613                           fsr2h	equ	0xFDA
  3614                           fsr2l	equ	0xFD9
  3615                           status	equ	0xFD8
  3616                           
  3617 ;; *************** function _OpenTimer1 *****************
  3618 ;; Defined at:
  3619 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;  config          1    wreg     unsigned char 
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;  config          1   14[BANK0 ] unsigned char 
  3624 ;; Return value:  Size  Location     Type
  3625 ;;		None               void
  3626 ;; Registers used:
  3627 ;;		wreg, status,2, status,0
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3633 ;;      Params:         0       0       0       0       0
  3634 ;;      Locals:         0       1       0       0       0
  3635 ;;      Temps:          0       0       0       0       0
  3636 ;;      Totals:         0       1       0       0       0
  3637 ;;Total ram usage:        1 bytes
  3638 ;; Hardware stack levels used:    1
  3639 ;; Hardware stack levels required when called:    8
  3640 ;; This function calls:
  3641 ;;		Nothing
  3642 ;; This function is called by:
  3643 ;;		_main
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           	psect	text23
  3648  00112C                     __ptext23:
  3649                           	opt stack 0
  3650  00112C                     _OpenTimer1:
  3651                           	opt stack 21
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;incstack = 0
  3655                           ;OpenTimer1@config stored from wreg
  3656  00112C  CFE8 F08E          	movff	wreg,OpenTimer1@config
  3657  001130  0100               	movlb	0	; () banked
  3658  001132  0100               	movlb	0	; () banked
  3659  001134  518E               	movf	OpenTimer1@config& (0+255),w,b
  3660  001136  0B7E               	andlw	126
  3661  001138  6ECD               	movwf	4045,c	;volatile
  3662                           
  3663                           ; BSR set to: 0
  3664  00113A  0100               	movlb	0	; () banked
  3665  00113C  0100               	movlb	0	; () banked
  3666  00113E  AD8E               	btfss	OpenTimer1@config& (0+255),6,b
  3667  001140  D002               	goto	l522
  3668                           
  3669                           ; BSR set to: 0
  3670  001142  8ECD               	bsf	4045,7,c	;volatile
  3671  001144  D001               	goto	l2972
  3672  001146                     l522:
  3673                           
  3674                           ; BSR set to: 0
  3675  001146  9ECD               	bcf	4045,7,c	;volatile
  3676  001148                     l2972:
  3677                           
  3678                           ; BSR set to: 0
  3679  001148  0E00               	movlw	0
  3680  00114A  6ECF               	movwf	4047,c	;volatile
  3681  00114C  0E00               	movlw	0
  3682  00114E  6ECE               	movwf	4046,c	;volatile
  3683                           
  3684                           ; BSR set to: 0
  3685  001150  909E               	bcf	3998,0,c	;volatile
  3686                           
  3687                           ; BSR set to: 0
  3688  001152  0100               	movlb	0	; () banked
  3689  001154  0100               	movlb	0	; () banked
  3690  001156  AF8E               	btfss	OpenTimer1@config& (0+255),7,b
  3691  001158  D002               	goto	l524
  3692                           
  3693                           ; BSR set to: 0
  3694  00115A  809D               	bsf	3997,0,c	;volatile
  3695  00115C  D001               	goto	l525
  3696  00115E                     l524:
  3697                           
  3698                           ; BSR set to: 0
  3699  00115E  909D               	bcf	3997,0,c	;volatile
  3700  001160                     l525:
  3701                           
  3702                           ; BSR set to: 0
  3703  001160  80CD               	bsf	4045,0,c	;volatile
  3704                           
  3705                           ; BSR set to: 0
  3706  001162  0012               	return	
  3707  001164                     __end_of_OpenTimer1:
  3708                           	opt stack 0
  3709                           tblptru	equ	0xFF8
  3710                           tblptrh	equ	0xFF7
  3711                           tblptrl	equ	0xFF6
  3712                           tablat	equ	0xFF5
  3713                           prodh	equ	0xFF4
  3714                           prodl	equ	0xFF3
  3715                           intcon	equ	0xFF2
  3716                           postinc0	equ	0xFEE
  3717                           wreg	equ	0xFE8
  3718                           indf1	equ	0xFE7
  3719                           postdec1	equ	0xFE5
  3720                           fsr1h	equ	0xFE2
  3721                           fsr1l	equ	0xFE1
  3722                           indf2	equ	0xFDF
  3723                           postinc2	equ	0xFDE
  3724                           postdec2	equ	0xFDD
  3725                           fsr2h	equ	0xFDA
  3726                           fsr2l	equ	0xFD9
  3727                           status	equ	0xFD8
  3728                           
  3729 ;; *************** function _OpenTimer0 *****************
  3730 ;; Defined at:
  3731 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;  config          1    wreg     unsigned char 
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;  config          1   14[BANK0 ] unsigned char 
  3736 ;; Return value:  Size  Location     Type
  3737 ;;		None               void
  3738 ;; Registers used:
  3739 ;;		wreg, status,2, status,0
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3745 ;;      Params:         0       0       0       0       0
  3746 ;;      Locals:         0       1       0       0       0
  3747 ;;      Temps:          0       0       0       0       0
  3748 ;;      Totals:         0       1       0       0       0
  3749 ;;Total ram usage:        1 bytes
  3750 ;; Hardware stack levels used:    1
  3751 ;; Hardware stack levels required when called:    8
  3752 ;; This function calls:
  3753 ;;		Nothing
  3754 ;; This function is called by:
  3755 ;;		_main
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text24
  3760  0011C8                     __ptext24:
  3761                           	opt stack 0
  3762  0011C8                     _OpenTimer0:
  3763                           	opt stack 21
  3764                           
  3765                           ; BSR set to: 0
  3766                           ;incstack = 0
  3767                           ;OpenTimer0@config stored from wreg
  3768  0011C8  CFE8 F08E          	movff	wreg,OpenTimer0@config
  3769  0011CC  0100               	movlb	0	; () banked
  3770  0011CE  0100               	movlb	0	; () banked
  3771  0011D0  518E               	movf	OpenTimer0@config& (0+255),w,b
  3772  0011D2  0B7F               	andlw	127
  3773  0011D4  6ED5               	movwf	4053,c	;volatile
  3774                           
  3775                           ; BSR set to: 0
  3776  0011D6  0E00               	movlw	0
  3777  0011D8  6ED7               	movwf	4055,c	;volatile
  3778                           
  3779                           ; BSR set to: 0
  3780  0011DA  0E00               	movlw	0
  3781  0011DC  6ED6               	movwf	4054,c	;volatile
  3782                           
  3783                           ; BSR set to: 0
  3784  0011DE  94F2               	bcf	intcon,2,c	;volatile
  3785                           
  3786                           ; BSR set to: 0
  3787  0011E0  0100               	movlb	0	; () banked
  3788  0011E2  0100               	movlb	0	; () banked
  3789  0011E4  AF8E               	btfss	OpenTimer0@config& (0+255),7,b
  3790  0011E6  D002               	goto	l498
  3791                           
  3792                           ; BSR set to: 0
  3793  0011E8  8AF2               	bsf	intcon,5,c	;volatile
  3794  0011EA  D001               	goto	l499
  3795  0011EC                     l498:
  3796                           
  3797                           ; BSR set to: 0
  3798  0011EC  9AF2               	bcf	intcon,5,c	;volatile
  3799  0011EE                     l499:
  3800                           
  3801                           ; BSR set to: 0
  3802  0011EE  8ED5               	bsf	4053,7,c	;volatile
  3803                           
  3804                           ; BSR set to: 0
  3805  0011F0  0012               	return	
  3806  0011F2                     __end_of_OpenTimer0:
  3807                           	opt stack 0
  3808                           tblptru	equ	0xFF8
  3809                           tblptrh	equ	0xFF7
  3810                           tblptrl	equ	0xFF6
  3811                           tablat	equ	0xFF5
  3812                           prodh	equ	0xFF4
  3813                           prodl	equ	0xFF3
  3814                           intcon	equ	0xFF2
  3815                           postinc0	equ	0xFEE
  3816                           wreg	equ	0xFE8
  3817                           indf1	equ	0xFE7
  3818                           postdec1	equ	0xFE5
  3819                           fsr1h	equ	0xFE2
  3820                           fsr1l	equ	0xFE1
  3821                           indf2	equ	0xFDF
  3822                           postinc2	equ	0xFDE
  3823                           postdec2	equ	0xFDD
  3824                           fsr2h	equ	0xFDA
  3825                           fsr2l	equ	0xFD9
  3826                           status	equ	0xFD8
  3827                           
  3828 ;; *************** function _InterruptHandlerLow *****************
  3829 ;; Defined at:
  3830 ;;		line 125 in file "../src/interrupts.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;		None
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;		None
  3835 ;; Return value:  Size  Location     Type
  3836 ;;		None               void
  3837 ;; Registers used:
  3838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3844 ;;      Params:         0       0       0       0       0
  3845 ;;      Locals:         0       0       0       0       0
  3846 ;;      Temps:         17       0       0       0       0
  3847 ;;      Totals:        17       0       0       0       0
  3848 ;;Total ram usage:       17 bytes
  3849 ;; Hardware stack levels used:    1
  3850 ;; Hardware stack levels required when called:    7
  3851 ;; This function calls:
  3852 ;;		_timer1_int_handler
  3853 ;;		_uart_send_int_handler
  3854 ;; This function is called by:
  3855 ;;		Interrupt level 1
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           	psect	intcodelo
  3860  000018                     __pintcodelo:
  3861                           	opt stack 0
  3862  000018                     _InterruptHandlerLow:
  3863                           	opt stack 18
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;incstack = 0
  3867  000018  CFD8 F005          	movff	status,??_InterruptHandlerLow
  3868  00001C  CFE8 F006          	movff	wreg,??_InterruptHandlerLow+1
  3869  000020  CFE0 F007          	movff	bsr,??_InterruptHandlerLow+2
  3870  000024  CFFA F008          	movff	pclath,??_InterruptHandlerLow+3
  3871  000028  CFFB F009          	movff	pclatu,??_InterruptHandlerLow+4
  3872  00002C  CFE9 F00A          	movff	fsr0l,??_InterruptHandlerLow+5
  3873  000030  CFEA F00B          	movff	fsr0h,??_InterruptHandlerLow+6
  3874  000034  CFE1 F00C          	movff	fsr1l,??_InterruptHandlerLow+7
  3875  000038  CFE2 F00D          	movff	fsr1h,??_InterruptHandlerLow+8
  3876  00003C  CFD9 F00E          	movff	fsr2l,??_InterruptHandlerLow+9
  3877  000040  CFDA F00F          	movff	fsr2h,??_InterruptHandlerLow+10
  3878  000044  CFF3 F010          	movff	prodl,??_InterruptHandlerLow+11
  3879  000048  CFF4 F011          	movff	prodh,??_InterruptHandlerLow+12
  3880  00004C  CFF6 F012          	movff	tblptrl,??_InterruptHandlerLow+13
  3881  000050  CFF7 F013          	movff	tblptrh,??_InterruptHandlerLow+14
  3882  000054  CFF8 F014          	movff	tblptru,??_InterruptHandlerLow+15
  3883  000058  CFF5 F015          	movff	tablat,??_InterruptHandlerLow+16
  3884                           
  3885                           ;interrupts.c: 128: if (PIR1bits.TMR1IF) {
  3886  00005C  A09E               	btfss	3998,0,c	;volatile
  3887  00005E  D003               	goto	i1l3310
  3888                           
  3889                           ;interrupts.c: 129: PIR1bits.TMR1IF = 0;
  3890  000060  909E               	bcf	3998,0,c	;volatile
  3891                           
  3892                           ;interrupts.c: 130: timer1_int_handler();
  3893  000062  EC46  F009         	call	_timer1_int_handler	;wreg free
  3894  000066                     i1l3310:
  3895                           
  3896                           ;interrupts.c: 131: }
  3897                           ;interrupts.c: 134: if (PIR1bits.TX1IF && PIE1bits.TX1IE) {
  3898  000066  B89E               	btfsc	3998,4,c	;volatile
  3899  000068  A89D               	btfss	3997,4,c	;volatile
  3900  00006A  D002               	goto	i1l53
  3901                           
  3902                           ;interrupts.c: 135: uart_send_int_handler();
  3903  00006C  ECCB  F005         	call	_uart_send_int_handler	;wreg free
  3904  000070                     i1l53:
  3905  000070  C015  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  3906  000074  C014  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  3907  000078  C013  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  3908  00007C  C012  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  3909  000080  C011  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  3910  000084  C010  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  3911  000088  C00F  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  3912  00008C  C00E  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  3913  000090  C00D  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  3914  000094  C00C  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  3915  000098  C00B  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  3916  00009C  C00A  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  3917  0000A0  C009  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  3918  0000A4  C008  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  3919  0000A8  C007  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  3920  0000AC  C006  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  3921  0000B0  C005  FFD8         	movff	??_InterruptHandlerLow,status
  3922  0000B4  0010               	retfie	
  3923  0000B6                     __end_of_InterruptHandlerLow:
  3924                           	opt stack 0
  3925                           pclatu	equ	0xFFB
  3926                           pclath	equ	0xFFA
  3927                           tblptru	equ	0xFF8
  3928                           tblptrh	equ	0xFF7
  3929                           tblptrl	equ	0xFF6
  3930                           tablat	equ	0xFF5
  3931                           prodh	equ	0xFF4
  3932                           prodl	equ	0xFF3
  3933                           intcon	equ	0xFF2
  3934                           postinc0	equ	0xFEE
  3935                           fsr0h	equ	0xFEA
  3936                           fsr0l	equ	0xFE9
  3937                           wreg	equ	0xFE8
  3938                           indf1	equ	0xFE7
  3939                           postdec1	equ	0xFE5
  3940                           fsr1h	equ	0xFE2
  3941                           fsr1l	equ	0xFE1
  3942                           bsr	equ	0xFE0
  3943                           indf2	equ	0xFDF
  3944                           postinc2	equ	0xFDE
  3945                           postdec2	equ	0xFDD
  3946                           fsr2h	equ	0xFDA
  3947                           fsr2l	equ	0xFD9
  3948                           status	equ	0xFD8
  3949                           
  3950 ;; *************** function _uart_send_int_handler *****************
  3951 ;; Defined at:
  3952 ;;		line 17 in file "../src/my_uart.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;		None
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;		None
  3957 ;; Return value:  Size  Location     Type
  3958 ;;		None               void
  3959 ;; Registers used:
  3960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3966 ;;      Params:         0       0       0       0       0
  3967 ;;      Locals:         0       0       0       0       0
  3968 ;;      Temps:          1       0       0       0       0
  3969 ;;      Totals:         1       0       0       0       0
  3970 ;;Total ram usage:        1 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; Hardware stack levels required when called:    6
  3973 ;; This function calls:
  3974 ;;		_WriteUSART
  3975 ;; This function is called by:
  3976 ;;		_InterruptHandlerLow
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text26
  3981  000B96                     __ptext26:
  3982                           	opt stack 0
  3983  000B96                     _uart_send_int_handler:
  3984                           	opt stack 18
  3985                           
  3986                           ;my_uart.c: 19: if (uc_ptr->Tx_buflen == uc_ptr->msg_length) {
  3987                           
  3988                           ;incstack = 0
  3989  000B96  0100               	movlb	0	; () banked
  3990  000B98  EE20 F00A          	lfsr	2,10
  3991  000B9C  0100               	movlb	0	; () banked
  3992  000B9E  51C2               	movf	_uc_ptr& (0+255),w,b
  3993  000BA0  26D9               	addwf	fsr2l,f,c
  3994  000BA2  0100               	movlb	0	; () banked
  3995  000BA4  51C3               	movf	(_uc_ptr+1)& (0+255),w,b
  3996  000BA6  22DA               	addwfc	fsr2h,f,c
  3997  000BA8  0100               	movlb	0	; () banked
  3998  000BAA  EE10 F00B          	lfsr	1,11
  3999  000BAE  0100               	movlb	0	; () banked
  4000  000BB0  51C2               	movf	_uc_ptr& (0+255),w,b
  4001  000BB2  26E1               	addwf	fsr1l,f,c
  4002  000BB4  0100               	movlb	0	; () banked
  4003  000BB6  51C3               	movf	(_uc_ptr+1)& (0+255),w,b
  4004  000BB8  22E2               	addwfc	fsr1h,f,c
  4005  000BBA  50E7               	movf	indf1,w,c
  4006  000BBC  62DF               	cpfseq	indf2,c
  4007  000BBE  D00D               	goto	i1l3300
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;my_uart.c: 20: PIE1bits.TX1IE = 0;
  4011  000BC0  989D               	bcf	3997,4,c	;volatile
  4012                           
  4013                           ; BSR set to: 0
  4014                           ;my_uart.c: 21: uc_ptr->Tx_buflen = 0;
  4015  000BC2  0100               	movlb	0	; () banked
  4016  000BC4  EE20 F00A          	lfsr	2,10
  4017  000BC8  0100               	movlb	0	; () banked
  4018  000BCA  51C2               	movf	_uc_ptr& (0+255),w,b
  4019  000BCC  26D9               	addwf	fsr2l,f,c
  4020  000BCE  0100               	movlb	0	; () banked
  4021  000BD0  51C3               	movf	(_uc_ptr+1)& (0+255),w,b
  4022  000BD2  22DA               	addwfc	fsr2h,f,c
  4023  000BD4  0E00               	movlw	0
  4024  000BD6  6EDF               	movwf	indf2,c
  4025                           
  4026                           ;my_uart.c: 22: } else {
  4027  000BD8  0012               	return	
  4028  000BDA                     i1l3300:
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;my_uart.c: 23: WriteUSART(uc_ptr->Tx_buffer[uc_ptr->Tx_buflen]);
  4032  000BDA  0100               	movlb	0	; () banked
  4033  000BDC  EE20 F00A          	lfsr	2,10
  4034  000BE0  0100               	movlb	0	; () banked
  4035  000BE2  51C2               	movf	_uc_ptr& (0+255),w,b
  4036  000BE4  26D9               	addwf	fsr2l,f,c
  4037  000BE6  0100               	movlb	0	; () banked
  4038  000BE8  51C3               	movf	(_uc_ptr+1)& (0+255),w,b
  4039  000BEA  22DA               	addwfc	fsr2h,f,c
  4040  000BEC  50DF               	movf	indf2,w,c
  4041  000BEE  6E02               	movwf	??_uart_send_int_handler& (0+255),c
  4042  000BF0  5002               	movf	??_uart_send_int_handler,w,c
  4043  000BF2  0D01               	mullw	1
  4044  000BF4  50F3               	movf	prodl,w,c
  4045  000BF6  0100               	movlb	0	; () banked
  4046  000BF8  0100               	movlb	0	; () banked
  4047  000BFA  25C2               	addwf	_uc_ptr& (0+255),w,b
  4048  000BFC  6ED9               	movwf	fsr2l,c
  4049  000BFE  50F4               	movf	prodh,w,c
  4050  000C00  0100               	movlb	0	; () banked
  4051  000C02  0100               	movlb	0	; () banked
  4052  000C04  21C3               	addwfc	(_uc_ptr+1)& (0+255),w,b
  4053  000C06  6EDA               	movwf	fsr2h,c
  4054  000C08  50DF               	movf	indf2,w,c
  4055  000C0A  EC69  F009         	call	_WriteUSART
  4056                           
  4057                           ;my_uart.c: 24: uc_ptr->Tx_buflen++;
  4058  000C0E  0100               	movlb	0	; () banked
  4059  000C10  EE20 F00A          	lfsr	2,10
  4060  000C14  0100               	movlb	0	; () banked
  4061  000C16  51C2               	movf	_uc_ptr& (0+255),w,b
  4062  000C18  26D9               	addwf	fsr2l,f,c
  4063  000C1A  0100               	movlb	0	; () banked
  4064  000C1C  51C3               	movf	(_uc_ptr+1)& (0+255),w,b
  4065  000C1E  22DA               	addwfc	fsr2h,f,c
  4066  000C20  2ADF               	incf	indf2,f,c
  4067  000C22  0012               	return	
  4068  000C24                     __end_of_uart_send_int_handler:
  4069                           	opt stack 0
  4070                           pclatu	equ	0xFFB
  4071                           pclath	equ	0xFFA
  4072                           tblptru	equ	0xFF8
  4073                           tblptrh	equ	0xFF7
  4074                           tblptrl	equ	0xFF6
  4075                           tablat	equ	0xFF5
  4076                           prodh	equ	0xFF4
  4077                           prodl	equ	0xFF3
  4078                           intcon	equ	0xFF2
  4079                           postinc0	equ	0xFEE
  4080                           fsr0h	equ	0xFEA
  4081                           fsr0l	equ	0xFE9
  4082                           wreg	equ	0xFE8
  4083                           indf1	equ	0xFE7
  4084                           postdec1	equ	0xFE5
  4085                           fsr1h	equ	0xFE2
  4086                           fsr1l	equ	0xFE1
  4087                           bsr	equ	0xFE0
  4088                           indf2	equ	0xFDF
  4089                           postinc2	equ	0xFDE
  4090                           postdec2	equ	0xFDD
  4091                           fsr2h	equ	0xFDA
  4092                           fsr2l	equ	0xFD9
  4093                           status	equ	0xFD8
  4094                           
  4095 ;; *************** function _WriteUSART *****************
  4096 ;; Defined at:
  4097 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\USART\uwrite.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;  data            1    wreg     unsigned char 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;  data            1    0[COMRAM] unsigned char 
  4102 ;; Return value:  Size  Location     Type
  4103 ;;		None               void
  4104 ;; Registers used:
  4105 ;;		wreg
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4111 ;;      Params:         0       0       0       0       0
  4112 ;;      Locals:         1       0       0       0       0
  4113 ;;      Temps:          0       0       0       0       0
  4114 ;;      Totals:         1       0       0       0       0
  4115 ;;Total ram usage:        1 bytes
  4116 ;; Hardware stack levels used:    1
  4117 ;; Hardware stack levels required when called:    5
  4118 ;; This function calls:
  4119 ;;		Nothing
  4120 ;; This function is called by:
  4121 ;;		_uart_send_int_handler
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           	psect	text27
  4126  0012D2                     __ptext27:
  4127                           	opt stack 0
  4128  0012D2                     _WriteUSART:
  4129                           	opt stack 18
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;incstack = 0
  4133                           ;WriteUSART@data stored from wreg
  4134  0012D2  CFE8 F001          	movff	wreg,WriteUSART@data
  4135  0012D6  ACAC               	btfss	4012,6,c	;volatile
  4136  0012D8  D003               	goto	i1l3256
  4137  0012DA  90AC               	bcf	4012,0,c	;volatile
  4138  0012DC  B24C               	btfsc	_USART_Status,1,c
  4139  0012DE  80AC               	bsf	4012,0,c	;volatile
  4140  0012E0                     i1l3256:
  4141  0012E0  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
  4142  0012E4  0012               	return	
  4143  0012E6                     __end_of_WriteUSART:
  4144                           	opt stack 0
  4145                           pclatu	equ	0xFFB
  4146                           pclath	equ	0xFFA
  4147                           tblptru	equ	0xFF8
  4148                           tblptrh	equ	0xFF7
  4149                           tblptrl	equ	0xFF6
  4150                           tablat	equ	0xFF5
  4151                           prodh	equ	0xFF4
  4152                           prodl	equ	0xFF3
  4153                           intcon	equ	0xFF2
  4154                           postinc0	equ	0xFEE
  4155                           fsr0h	equ	0xFEA
  4156                           fsr0l	equ	0xFE9
  4157                           wreg	equ	0xFE8
  4158                           indf1	equ	0xFE7
  4159                           postdec1	equ	0xFE5
  4160                           fsr1h	equ	0xFE2
  4161                           fsr1l	equ	0xFE1
  4162                           bsr	equ	0xFE0
  4163                           indf2	equ	0xFDF
  4164                           postinc2	equ	0xFDE
  4165                           postdec2	equ	0xFDD
  4166                           fsr2h	equ	0xFDA
  4167                           fsr2l	equ	0xFD9
  4168                           status	equ	0xFD8
  4169                           
  4170 ;; *************** function _timer1_int_handler *****************
  4171 ;; Defined at:
  4172 ;;		line 40 in file "../src/user_interrupts.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;		None
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;		None
  4177 ;; Return value:  Size  Location     Type
  4178 ;;		None               void
  4179 ;; Registers used:
  4180 ;;		wreg, status,2, status,0, cstack
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4186 ;;      Params:         0       0       0       0       0
  4187 ;;      Locals:         0       0       0       0       0
  4188 ;;      Temps:          0       0       0       0       0
  4189 ;;      Totals:         0       0       0       0       0
  4190 ;;Total ram usage:        0 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; Hardware stack levels required when called:    6
  4193 ;; This function calls:
  4194 ;;		i1_WriteTimer1
  4195 ;; This function is called by:
  4196 ;;		_InterruptHandlerLow
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           	psect	text28
  4201  00128C                     __ptext28:
  4202                           	opt stack 0
  4203  00128C                     _timer1_int_handler:
  4204                           	opt stack 18
  4205                           
  4206                           ;user_interrupts.c: 42: { LATCbits.LATC2 = 1; };
  4207                           
  4208                           ;incstack = 0
  4209  00128C  848B               	bsf	3979,2,c	;volatile
  4210                           
  4211                           ;user_interrupts.c: 43: { LATCbits.LATC2 = 0; };
  4212  00128E  948B               	bcf	3979,2,c	;volatile
  4213                           
  4214                           ;user_interrupts.c: 44: { LATCbits.LATC2 = 1; };
  4215  001290  848B               	bsf	3979,2,c	;volatile
  4216                           
  4217                           ;user_interrupts.c: 45: { LATCbits.LATC2 = 0; };
  4218  001292  948B               	bcf	3979,2,c	;volatile
  4219                           
  4220                           ;user_interrupts.c: 48: timer1Counter++;
  4221  001294  4A49               	infsnz	_timer1Counter,f,c
  4222  001296  2A4A               	incf	_timer1Counter+1,f,c
  4223                           
  4224                           ;user_interrupts.c: 50: WriteTimer1(0xFFCF);
  4225  001298  0EFF               	movlw	255
  4226  00129A  6E02               	movwf	i1WriteTimer1@timer1+1,c
  4227  00129C  0ECF               	movlw	207
  4228  00129E  6E01               	movwf	i1WriteTimer1@timer1,c
  4229  0012A0  EC97  F009         	call	i1_WriteTimer1	;wreg free
  4230  0012A4  0012               	return	
  4231  0012A6                     __end_of_timer1_int_handler:
  4232                           	opt stack 0
  4233                           pclatu	equ	0xFFB
  4234                           pclath	equ	0xFFA
  4235                           tblptru	equ	0xFF8
  4236                           tblptrh	equ	0xFF7
  4237                           tblptrl	equ	0xFF6
  4238                           tablat	equ	0xFF5
  4239                           prodh	equ	0xFF4
  4240                           prodl	equ	0xFF3
  4241                           intcon	equ	0xFF2
  4242                           postinc0	equ	0xFEE
  4243                           fsr0h	equ	0xFEA
  4244                           fsr0l	equ	0xFE9
  4245                           wreg	equ	0xFE8
  4246                           indf1	equ	0xFE7
  4247                           postdec1	equ	0xFE5
  4248                           fsr1h	equ	0xFE2
  4249                           fsr1l	equ	0xFE1
  4250                           bsr	equ	0xFE0
  4251                           indf2	equ	0xFDF
  4252                           postinc2	equ	0xFDE
  4253                           postdec2	equ	0xFDD
  4254                           fsr2h	equ	0xFDA
  4255                           fsr2l	equ	0xFD9
  4256                           status	equ	0xFD8
  4257                           
  4258 ;; *************** function i1_WriteTimer1 *****************
  4259 ;; Defined at:
  4260 ;;		line 14 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;  timer1          2    0[COMRAM] unsigned int 
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;  WriteTimer1     2    2[COMRAM] struct Timers
  4265 ;; Return value:  Size  Location     Type
  4266 ;;		None               void
  4267 ;; Registers used:
  4268 ;;		None
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4274 ;;      Params:         2       0       0       0       0
  4275 ;;      Locals:         2       0       0       0       0
  4276 ;;      Temps:          0       0       0       0       0
  4277 ;;      Totals:         4       0       0       0       0
  4278 ;;Total ram usage:        4 bytes
  4279 ;; Hardware stack levels used:    1
  4280 ;; Hardware stack levels required when called:    5
  4281 ;; This function calls:
  4282 ;;		Nothing
  4283 ;; This function is called by:
  4284 ;;		_timer1_int_handler
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288                           	psect	text29
  4289  00132E                     __ptext29:
  4290                           	opt stack 0
  4291  00132E                     i1_WriteTimer1:
  4292                           	opt stack 18
  4293                           
  4294                           ;incstack = 0
  4295  00132E  C001  F003         	movff	i1WriteTimer1@timer1,i1WriteTimer1@timer
  4296  001332  C002  F004         	movff	i1WriteTimer1@timer1+1,i1WriteTimer1@timer+1
  4297  001336  C004  FFCF         	movff	i1WriteTimer1@timer+1,4047	;volatile
  4298  00133A  C003  FFCE         	movff	i1WriteTimer1@timer,4046	;volatile
  4299  00133E  0012               	return	
  4300  001340                     __end_ofi1_WriteTimer1:
  4301                           	opt stack 0
  4302                           pclatu	equ	0xFFB
  4303                           pclath	equ	0xFFA
  4304                           tblptru	equ	0xFF8
  4305                           tblptrh	equ	0xFF7
  4306                           tblptrl	equ	0xFF6
  4307                           tablat	equ	0xFF5
  4308                           prodh	equ	0xFF4
  4309                           prodl	equ	0xFF3
  4310                           intcon	equ	0xFF2
  4311                           postinc0	equ	0xFEE
  4312                           fsr0h	equ	0xFEA
  4313                           fsr0l	equ	0xFE9
  4314                           wreg	equ	0xFE8
  4315                           indf1	equ	0xFE7
  4316                           postdec1	equ	0xFE5
  4317                           fsr1h	equ	0xFE2
  4318                           fsr1l	equ	0xFE1
  4319                           bsr	equ	0xFE0
  4320                           indf2	equ	0xFDF
  4321                           postinc2	equ	0xFDE
  4322                           postdec2	equ	0xFDD
  4323                           fsr2h	equ	0xFDA
  4324                           fsr2l	equ	0xFD9
  4325                           status	equ	0xFD8
  4326                           
  4327 ;; *************** function _InterruptHandlerHigh *****************
  4328 ;; Defined at:
  4329 ;;		line 87 in file "../src/interrupts.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;		None
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;		None
  4334 ;; Return value:  Size  Location     Type
  4335 ;;		None               void
  4336 ;; Registers used:
  4337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4343 ;;      Params:         0       0       0       0       0
  4344 ;;      Locals:         0       0       0       0       0
  4345 ;;      Temps:          0      14       0       0       0
  4346 ;;      Totals:         0      14       0       0       0
  4347 ;;Total ram usage:       14 bytes
  4348 ;; Hardware stack levels used:    1
  4349 ;; Hardware stack levels required when called:    4
  4350 ;; This function calls:
  4351 ;;		_SleepIfOkay
  4352 ;;		_i2c_int_handler
  4353 ;;		_timer0_int_handler
  4354 ;; This function is called by:
  4355 ;;		Interrupt level 2
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           	psect	intcode
  4360  000008                     __pintcode:
  4361                           	opt stack 0
  4362  000008                     _InterruptHandlerHigh:
  4363                           	opt stack 18
  4364                           
  4365                           ;incstack = 0
  4366  000008  CFFA F080          	movff	pclath,??_InterruptHandlerHigh
  4367  00000C  CFFB F081          	movff	pclatu,??_InterruptHandlerHigh+1
  4368  000010  EF12  F006         	goto	int_func
  4369                           pclatu	equ	0xFFB
  4370                           pclath	equ	0xFFA
  4371                           tblptru	equ	0xFF8
  4372                           tblptrh	equ	0xFF7
  4373                           tblptrl	equ	0xFF6
  4374                           tablat	equ	0xFF5
  4375                           prodh	equ	0xFF4
  4376                           prodl	equ	0xFF3
  4377                           intcon	equ	0xFF2
  4378                           postinc0	equ	0xFEE
  4379                           fsr0h	equ	0xFEA
  4380                           fsr0l	equ	0xFE9
  4381                           wreg	equ	0xFE8
  4382                           indf1	equ	0xFE7
  4383                           postdec1	equ	0xFE5
  4384                           fsr1h	equ	0xFE2
  4385                           fsr1l	equ	0xFE1
  4386                           bsr	equ	0xFE0
  4387                           indf2	equ	0xFDF
  4388                           postinc2	equ	0xFDE
  4389                           postdec2	equ	0xFDD
  4390                           fsr2h	equ	0xFDA
  4391                           fsr2l	equ	0xFD9
  4392                           status	equ	0xFD8
  4393                           
  4394                           	psect	intcode_body
  4395  000C24                     __pintcode_body:
  4396                           	opt stack 18
  4397  000C24                     int_func:
  4398                           	opt stack 18
  4399  000C24  CFE9 F082          	movff	fsr0l,??_InterruptHandlerHigh+2
  4400  000C28  CFEA F083          	movff	fsr0h,??_InterruptHandlerHigh+3
  4401  000C2C  CFE1 F084          	movff	fsr1l,??_InterruptHandlerHigh+4
  4402  000C30  CFE2 F085          	movff	fsr1h,??_InterruptHandlerHigh+5
  4403  000C34  CFD9 F086          	movff	fsr2l,??_InterruptHandlerHigh+6
  4404  000C38  CFDA F087          	movff	fsr2h,??_InterruptHandlerHigh+7
  4405  000C3C  CFF3 F088          	movff	prodl,??_InterruptHandlerHigh+8
  4406  000C40  CFF4 F089          	movff	prodh,??_InterruptHandlerHigh+9
  4407  000C44  CFF6 F08A          	movff	tblptrl,??_InterruptHandlerHigh+10
  4408  000C48  CFF7 F08B          	movff	tblptrh,??_InterruptHandlerHigh+11
  4409  000C4C  CFF8 F08C          	movff	tblptru,??_InterruptHandlerHigh+12
  4410  000C50  CFF5 F08D          	movff	tablat,??_InterruptHandlerHigh+13
  4411                           
  4412                           ;interrupts.c: 92: if (PIR1bits.SSPIF) {
  4413  000C54  A69E               	btfss	3998,3,c	;volatile
  4414  000C56  D003               	goto	i2l2714
  4415                           
  4416                           ;interrupts.c: 94: PIR1bits.SSPIF = 0;
  4417  000C58  969E               	bcf	3998,3,c	;volatile
  4418                           
  4419                           ;interrupts.c: 96: i2c_int_handler();
  4420  000C5A  EC5D  F000         	call	_i2c_int_handler	;wreg free
  4421  000C5E                     i2l2714:
  4422                           
  4423                           ;interrupts.c: 97: }
  4424                           ;interrupts.c: 100: if (INTCONbits.TMR0IF) {
  4425  000C5E  A4F2               	btfss	intcon,2,c	;volatile
  4426  000C60  D003               	goto	i2l2720
  4427                           
  4428                           ;interrupts.c: 101: INTCONbits.TMR0IF = 0;
  4429  000C62  94F2               	bcf	intcon,2,c	;volatile
  4430                           
  4431                           ;interrupts.c: 103: timer0_int_handler();
  4432  000C64  EC5E  F009         	call	_timer0_int_handler	;wreg free
  4433  000C68                     i2l2720:
  4434                           
  4435                           ;interrupts.c: 104: }
  4436                           ;interrupts.c: 111: SleepIfOkay();
  4437  000C68  ECAB  F007         	call	_SleepIfOkay	;wreg free
  4438  000C6C  C08D  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  4439  000C70  C08C  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  4440  000C74  C08B  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  4441  000C78  C08A  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  4442  000C7C  C089  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  4443  000C80  C088  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  4444  000C84  C087  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  4445  000C88  C086  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  4446  000C8C  C085  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  4447  000C90  C084  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  4448  000C94  C083  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  4449  000C98  C082  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  4450  000C9C  C081  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  4451  000CA0  C080  FFFA         	movff	??_InterruptHandlerHigh,pclath
  4452  000CA4  0011               	retfie		f
  4453  000CA6                     __end_of_InterruptHandlerHigh:
  4454                           	opt stack 0
  4455                           pclatu	equ	0xFFB
  4456                           pclath	equ	0xFFA
  4457                           tblptru	equ	0xFF8
  4458                           tblptrh	equ	0xFF7
  4459                           tblptrl	equ	0xFF6
  4460                           tablat	equ	0xFF5
  4461                           prodh	equ	0xFF4
  4462                           prodl	equ	0xFF3
  4463                           intcon	equ	0xFF2
  4464                           postinc0	equ	0xFEE
  4465                           fsr0h	equ	0xFEA
  4466                           fsr0l	equ	0xFE9
  4467                           wreg	equ	0xFE8
  4468                           indf1	equ	0xFE7
  4469                           postdec1	equ	0xFE5
  4470                           fsr1h	equ	0xFE2
  4471                           fsr1l	equ	0xFE1
  4472                           bsr	equ	0xFE0
  4473                           indf2	equ	0xFDF
  4474                           postinc2	equ	0xFDE
  4475                           postdec2	equ	0xFDD
  4476                           fsr2h	equ	0xFDA
  4477                           fsr2l	equ	0xFD9
  4478                           status	equ	0xFD8
  4479                           
  4480 ;; *************** function _timer0_int_handler *****************
  4481 ;; Defined at:
  4482 ;;		line 19 in file "../src/user_interrupts.c"
  4483 ;; Parameters:    Size  Location     Type
  4484 ;;		None
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;		None
  4487 ;; Return value:  Size  Location     Type
  4488 ;;		None               void
  4489 ;; Registers used:
  4490 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4496 ;;      Params:         0       0       0       0       0
  4497 ;;      Locals:         0       0       0       0       0
  4498 ;;      Temps:          0       0       0       0       0
  4499 ;;      Totals:         0       0       0       0       0
  4500 ;;Total ram usage:        0 bytes
  4501 ;; Hardware stack levels used:    1
  4502 ;; Hardware stack levels required when called:    1
  4503 ;; This function calls:
  4504 ;;		_WriteTimer0
  4505 ;; This function is called by:
  4506 ;;		_InterruptHandlerHigh
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           	psect	text31
  4511  0012BC                     __ptext31:
  4512                           	opt stack 0
  4513  0012BC                     _timer0_int_handler:
  4514                           	opt stack 20
  4515                           
  4516                           ;user_interrupts.c: 21: { LATCbits.LATC2 = 1; };
  4517                           
  4518                           ;incstack = 0
  4519  0012BC  848B               	bsf	3979,2,c	;volatile
  4520                           
  4521                           ;user_interrupts.c: 22: { LATCbits.LATC2 = 0; };
  4522  0012BE  948B               	bcf	3979,2,c	;volatile
  4523                           
  4524                           ;user_interrupts.c: 25: timer0Counter++;
  4525  0012C0  4A47               	infsnz	_timer0Counter,f,c
  4526  0012C2  2A48               	incf	_timer0Counter+1,f,c
  4527                           
  4528                           ;user_interrupts.c: 27: WriteTimer0(0xCF);
  4529  0012C4  0E00               	movlw	0
  4530  0012C6  6E17               	movwf	WriteTimer0@timer0+1,c
  4531  0012C8  0ECF               	movlw	207
  4532  0012CA  6E16               	movwf	WriteTimer0@timer0,c
  4533  0012CC  ECA0  F009         	call	_WriteTimer0	;wreg free
  4534  0012D0  0012               	return	
  4535  0012D2                     __end_of_timer0_int_handler:
  4536                           	opt stack 0
  4537                           pclatu	equ	0xFFB
  4538                           pclath	equ	0xFFA
  4539                           tblptru	equ	0xFF8
  4540                           tblptrh	equ	0xFF7
  4541                           tblptrl	equ	0xFF6
  4542                           tablat	equ	0xFF5
  4543                           prodh	equ	0xFF4
  4544                           prodl	equ	0xFF3
  4545                           intcon	equ	0xFF2
  4546                           postinc0	equ	0xFEE
  4547                           fsr0h	equ	0xFEA
  4548                           fsr0l	equ	0xFE9
  4549                           wreg	equ	0xFE8
  4550                           indf1	equ	0xFE7
  4551                           postdec1	equ	0xFE5
  4552                           fsr1h	equ	0xFE2
  4553                           fsr1l	equ	0xFE1
  4554                           bsr	equ	0xFE0
  4555                           indf2	equ	0xFDF
  4556                           postinc2	equ	0xFDE
  4557                           postdec2	equ	0xFDD
  4558                           fsr2h	equ	0xFDA
  4559                           fsr2l	equ	0xFD9
  4560                           status	equ	0xFD8
  4561                           
  4562 ;; *************** function _WriteTimer0 *****************
  4563 ;; Defined at:
  4564 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  4565 ;; Parameters:    Size  Location     Type
  4566 ;;  timer0          2   21[COMRAM] unsigned int 
  4567 ;; Auto vars:     Size  Location     Type
  4568 ;;  timer           2   23[COMRAM] struct Timers
  4569 ;; Return value:  Size  Location     Type
  4570 ;;		None               void
  4571 ;; Registers used:
  4572 ;;		None
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4578 ;;      Params:         2       0       0       0       0
  4579 ;;      Locals:         2       0       0       0       0
  4580 ;;      Temps:          0       0       0       0       0
  4581 ;;      Totals:         4       0       0       0       0
  4582 ;;Total ram usage:        4 bytes
  4583 ;; Hardware stack levels used:    1
  4584 ;; This function calls:
  4585 ;;		Nothing
  4586 ;; This function is called by:
  4587 ;;		_timer0_int_handler
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           	psect	text32
  4592  001340                     __ptext32:
  4593                           	opt stack 0
  4594  001340                     _WriteTimer0:
  4595                           	opt stack 20
  4596                           
  4597                           ;incstack = 0
  4598  001340  C016  F018         	movff	WriteTimer0@timer0,WriteTimer0@timer
  4599  001344  C017  F019         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  4600  001348  C019  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  4601  00134C  C018  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  4602  001350  0012               	return	
  4603  001352                     __end_of_WriteTimer0:
  4604                           	opt stack 0
  4605                           pclatu	equ	0xFFB
  4606                           pclath	equ	0xFFA
  4607                           tblptru	equ	0xFF8
  4608                           tblptrh	equ	0xFF7
  4609                           tblptrl	equ	0xFF6
  4610                           tablat	equ	0xFF5
  4611                           prodh	equ	0xFF4
  4612                           prodl	equ	0xFF3
  4613                           intcon	equ	0xFF2
  4614                           postinc0	equ	0xFEE
  4615                           fsr0h	equ	0xFEA
  4616                           fsr0l	equ	0xFE9
  4617                           wreg	equ	0xFE8
  4618                           indf1	equ	0xFE7
  4619                           postdec1	equ	0xFE5
  4620                           fsr1h	equ	0xFE2
  4621                           fsr1l	equ	0xFE1
  4622                           bsr	equ	0xFE0
  4623                           indf2	equ	0xFDF
  4624                           postinc2	equ	0xFDE
  4625                           postdec2	equ	0xFDD
  4626                           fsr2h	equ	0xFDA
  4627                           fsr2l	equ	0xFD9
  4628                           status	equ	0xFD8
  4629                           
  4630 ;; *************** function _i2c_int_handler *****************
  4631 ;; Defined at:
  4632 ;;		line 70 in file "../src/my_i2c.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;		None
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;  error_buf       3   49[COMRAM] unsigned char [3]
  4637 ;;  data_read       1   57[COMRAM] unsigned char 
  4638 ;;  msg_ready       1   56[COMRAM] unsigned char 
  4639 ;;  i2c_data        1   55[COMRAM] unsigned char 
  4640 ;;  msg_to_send     1   54[COMRAM] unsigned char 
  4641 ;;  overrun_erro    1   53[COMRAM] unsigned char 
  4642 ;;  data_written    1   52[COMRAM] unsigned char 
  4643 ;; Return value:  Size  Location     Type
  4644 ;;		None               void
  4645 ;; Registers used:
  4646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4652 ;;      Params:         0       0       0       0       0
  4653 ;;      Locals:         9       0       0       0       0
  4654 ;;      Temps:          2       0       0       0       0
  4655 ;;      Totals:        11       0       0       0       0
  4656 ;;Total ram usage:       11 bytes
  4657 ;; Hardware stack levels used:    1
  4658 ;; Hardware stack levels required when called:    3
  4659 ;; This function calls:
  4660 ;;		_ToMainHigh_sendmsg
  4661 ;;		_handle_start
  4662 ;;		_readMessages
  4663 ;; This function is called by:
  4664 ;;		_InterruptHandlerHigh
  4665 ;; This function uses a non-reentrant model
  4666 ;;
  4667                           
  4668                           	psect	text33
  4669  0000BA                     __ptext33:
  4670                           	opt stack 0
  4671  0000BA                     _i2c_int_handler:
  4672                           	opt stack 18
  4673                           
  4674                           ;my_i2c.c: 71: unsigned char i2c_data;
  4675                           ;my_i2c.c: 72: unsigned char data_read = 0;
  4676                           
  4677                           ;incstack = 0
  4678  0000BA  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4679  0000BC  0E00               	movlw	0
  4680  0000BE  6E3A               	movwf	i2c_int_handler@data_read,c
  4681  0000C0  5030               	movf	??_i2c_int_handler& (0+255),w,c
  4682                           
  4683                           ;my_i2c.c: 73: unsigned char data_written = 0;
  4684  0000C2  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4685  0000C4  0E00               	movlw	0
  4686  0000C6  6E35               	movwf	i2c_int_handler@data_written,c
  4687  0000C8  5030               	movf	??_i2c_int_handler& (0+255),w,c
  4688                           
  4689                           ;my_i2c.c: 74: unsigned char msg_ready = 0;
  4690  0000CA  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4691  0000CC  0E00               	movlw	0
  4692  0000CE  6E39               	movwf	i2c_int_handler@msg_ready,c
  4693  0000D0  5030               	movf	??_i2c_int_handler& (0+255),w,c
  4694                           
  4695                           ;my_i2c.c: 75: unsigned char msg_to_send = 0;
  4696  0000D2  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4697  0000D4  0E00               	movlw	0
  4698  0000D6  6E37               	movwf	i2c_int_handler@msg_to_send,c
  4699  0000D8  5030               	movf	??_i2c_int_handler& (0+255),w,c
  4700                           
  4701                           ;my_i2c.c: 76: unsigned char overrun_error = 0;
  4702  0000DA  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4703  0000DC  0E00               	movlw	0
  4704  0000DE  6E36               	movwf	i2c_int_handler@overrun_error,c
  4705  0000E0  5030               	movf	??_i2c_int_handler& (0+255),w,c
  4706                           
  4707                           ;my_i2c.c: 77: unsigned char error_buf[3];
  4708                           ;my_i2c.c: 80: if (SSPCON1bits.SSPOV == 1) {
  4709  0000E2  ACC6               	btfss	4038,6,c	;volatile
  4710  0000E4  D01C               	goto	i2l2736
  4711                           
  4712                           ;my_i2c.c: 81: SSPCON1bits.SSPOV = 0;
  4713  0000E6  9CC6               	bcf	4038,6,c	;volatile
  4714                           
  4715                           ;my_i2c.c: 85: ic_ptr->status = 0x5;
  4716  0000E8  EE20 F00C          	lfsr	2,12
  4717  0000EC  5062               	movf	_ic_ptr,w,c
  4718  0000EE  26D9               	addwf	fsr2l,f,c
  4719  0000F0  5063               	movf	_ic_ptr+1,w,c
  4720  0000F2  22DA               	addwfc	fsr2h,f,c
  4721  0000F4  0E05               	movlw	5
  4722  0000F6  6EDF               	movwf	indf2,c
  4723                           
  4724                           ;my_i2c.c: 86: overrun_error = 1;
  4725  0000F8  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4726  0000FA  0E01               	movlw	1
  4727  0000FC  6E36               	movwf	i2c_int_handler@overrun_error,c
  4728  0000FE  5030               	movf	??_i2c_int_handler& (0+255),w,c
  4729                           
  4730                           ;my_i2c.c: 87: ic_ptr->error_count++;
  4731  000100  EE20 F00E          	lfsr	2,14
  4732  000104  5062               	movf	_ic_ptr,w,c
  4733  000106  26D9               	addwf	fsr2l,f,c
  4734  000108  5063               	movf	_ic_ptr+1,w,c
  4735  00010A  22DA               	addwfc	fsr2h,f,c
  4736  00010C  2ADF               	incf	indf2,f,c
  4737                           
  4738                           ;my_i2c.c: 88: ic_ptr->error_code = 0x4;
  4739  00010E  EE20 F00D          	lfsr	2,13
  4740  000112  5062               	movf	_ic_ptr,w,c
  4741  000114  26D9               	addwf	fsr2l,f,c
  4742  000116  5063               	movf	_ic_ptr+1,w,c
  4743  000118  22DA               	addwfc	fsr2h,f,c
  4744  00011A  0E04               	movlw	4
  4745  00011C  6EDF               	movwf	indf2,c
  4746  00011E                     i2l2736:
  4747                           
  4748                           ;my_i2c.c: 89: }
  4749                           ;my_i2c.c: 91: if (SSPSTATbits.BF == 1) {
  4750  00011E  A0C7               	btfss	4039,0,c	;volatile
  4751  000120  D006               	goto	i2l2742
  4752                           
  4753                           ;my_i2c.c: 92: i2c_data = SSPBUF;
  4754  000122  CFC9 F038          	movff	4041,i2c_int_handler@i2c_data	;volatile
  4755                           
  4756                           ;my_i2c.c: 93: data_read = 1;
  4757  000126  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4758  000128  0E01               	movlw	1
  4759  00012A  6E3A               	movwf	i2c_int_handler@data_read,c
  4760  00012C  5030               	movf	??_i2c_int_handler& (0+255),w,c
  4761  00012E                     i2l2742:
  4762                           
  4763                           ;my_i2c.c: 94: }
  4764                           ;my_i2c.c: 96: if (!overrun_error) {
  4765  00012E  6636               	tstfsz	i2c_int_handler@overrun_error,c
  4766  000130  D142               	goto	i2l296
  4767  000132  D12E               	goto	i2l2830
  4768  000134                     i2l298:
  4769                           
  4770                           ;my_i2c.c: 99: {
  4771                           ;my_i2c.c: 101: if (SSPSTATbits.S == 1) {
  4772  000134  A6C7               	btfss	4039,3,c	;volatile
  4773  000136  D13F               	goto	i2l296
  4774                           
  4775                           ;my_i2c.c: 102: handle_start(data_read);
  4776  000138  503A               	movf	i2c_int_handler@data_read,w,c
  4777  00013A  EC36  F005         	call	_handle_start
  4778                           
  4779                           ;my_i2c.c: 104: if (ic_ptr->status == 0x8) {
  4780  00013E  EE20 F00C          	lfsr	2,12
  4781  000142  5062               	movf	_ic_ptr,w,c
  4782  000144  26D9               	addwf	fsr2l,f,c
  4783  000146  5063               	movf	_ic_ptr+1,w,c
  4784  000148  22DA               	addwfc	fsr2h,f,c
  4785  00014A  0E08               	movlw	8
  4786  00014C  62DF               	cpfseq	indf2,c
  4787  00014E  D133               	goto	i2l296
  4788                           
  4789                           ;my_i2c.c: 105: data_read = 0;
  4790  000150  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4791  000152  0E00               	movlw	0
  4792  000154  6E3A               	movwf	i2c_int_handler@data_read,c
  4793  000156  5030               	movf	??_i2c_int_handler& (0+255),w,c
  4794                           
  4795                           ;my_i2c.c: 106: msg_to_send = 1;
  4796  000158  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4797  00015A  0E01               	movlw	1
  4798  00015C  6E37               	movwf	i2c_int_handler@msg_to_send,c
  4799  00015E  D10E               	goto	L6
  4800  000160                     i2l302:
  4801                           
  4802                           ;my_i2c.c: 112: {
  4803                           ;my_i2c.c: 114: if (SSPSTATbits.P == 1) {
  4804  000160  A8C7               	btfss	4039,4,c	;volatile
  4805  000162  D021               	goto	i2l2762
  4806                           
  4807                           ;my_i2c.c: 117: ic_ptr->event_count++;
  4808  000164  EE20 F00B          	lfsr	2,11
  4809  000168  5062               	movf	_ic_ptr,w,c
  4810  00016A  26D9               	addwf	fsr2l,f,c
  4811  00016C  5063               	movf	_ic_ptr+1,w,c
  4812  00016E  22DA               	addwfc	fsr2h,f,c
  4813  000170  2ADF               	incf	indf2,f,c
  4814                           
  4815                           ;my_i2c.c: 118: if (data_read) {
  4816  000172  503A               	movf	i2c_int_handler@data_read,w,c
  4817  000174  B4D8               	btfsc	status,2,c
  4818  000176  D104               	goto	L8
  4819                           
  4820                           ;my_i2c.c: 119: if (SSPSTATbits.D_A == 0) {
  4821  000178  BAC7               	btfsc	4039,5,c	;volatile
  4822  00017A  D005               	goto	i2l2760
  4823                           
  4824                           ;my_i2c.c: 120: msg_ready = 1;
  4825  00017C  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4826  00017E  0E01               	movlw	1
  4827  000180  6E39               	movwf	i2c_int_handler@msg_ready,c
  4828  000182  5030               	movf	??_i2c_int_handler& (0+255),w,c
  4829                           
  4830                           ;my_i2c.c: 121: } else {
  4831  000184  D0FD               	goto	L8
  4832  000186                     i2l2760:
  4833                           
  4834                           ;my_i2c.c: 122: ic_ptr->error_count++;
  4835  000186  EE20 F00E          	lfsr	2,14
  4836  00018A  5062               	movf	_ic_ptr,w,c
  4837  00018C  26D9               	addwf	fsr2l,f,c
  4838  00018E  5063               	movf	_ic_ptr+1,w,c
  4839  000190  22DA               	addwfc	fsr2h,f,c
  4840  000192  2ADF               	incf	indf2,f,c
  4841                           
  4842                           ;my_i2c.c: 123: ic_ptr->error_code = 0x6;
  4843  000194  EE20 F00D          	lfsr	2,13
  4844  000198  5062               	movf	_ic_ptr,w,c
  4845  00019A  26D9               	addwf	fsr2l,f,c
  4846  00019C  5063               	movf	_ic_ptr+1,w,c
  4847  00019E  22DA               	addwfc	fsr2h,f,c
  4848  0001A0  0E06               	movlw	6
  4849  0001A2  6EDF               	movwf	indf2,c
  4850  0001A4  D0ED               	goto	L8
  4851  0001A6                     i2l2762:
  4852  0001A6  503A               	movf	i2c_int_handler@data_read,w,c
  4853  0001A8  B4D8               	btfsc	status,2,c
  4854  0001AA  D105               	goto	i2l296
  4855                           
  4856                           ;my_i2c.c: 128: ic_ptr->event_count++;
  4857  0001AC  EE20 F00B          	lfsr	2,11
  4858  0001B0  5062               	movf	_ic_ptr,w,c
  4859  0001B2  26D9               	addwf	fsr2l,f,c
  4860  0001B4  5063               	movf	_ic_ptr+1,w,c
  4861  0001B6  22DA               	addwfc	fsr2h,f,c
  4862  0001B8  2ADF               	incf	indf2,f,c
  4863                           
  4864                           ;my_i2c.c: 129: if (SSPSTATbits.D_A == 0) {
  4865  0001BA  BAC7               	btfsc	4039,5,c	;volatile
  4866  0001BC  D013               	goto	i2l2778
  4867                           
  4868                           ;my_i2c.c: 130: if (SSPSTATbits.R_W == 0) {
  4869  0001BE  B4C7               	btfsc	4039,2,c	;volatile
  4870  0001C0  D008               	goto	i2l2772
  4871                           
  4872                           ;my_i2c.c: 131: ic_ptr->status = 0x7;
  4873  0001C2  EE20 F00C          	lfsr	2,12
  4874  0001C6  5062               	movf	_ic_ptr,w,c
  4875  0001C8  26D9               	addwf	fsr2l,f,c
  4876  0001CA  5063               	movf	_ic_ptr+1,w,c
  4877  0001CC  22DA               	addwfc	fsr2h,f,c
  4878  0001CE  0E07               	movlw	7
  4879  0001D0  D053               	goto	L5
  4880  0001D2                     i2l2772:
  4881                           
  4882                           ;my_i2c.c: 133: ic_ptr->status = 0x8;
  4883  0001D2  EE20 F00C          	lfsr	2,12
  4884  0001D6  5062               	movf	_ic_ptr,w,c
  4885  0001D8  26D9               	addwf	fsr2l,f,c
  4886  0001DA  5063               	movf	_ic_ptr+1,w,c
  4887  0001DC  22DA               	addwfc	fsr2h,f,c
  4888  0001DE  0E08               	movlw	8
  4889  0001E0  6EDF               	movwf	indf2,c
  4890  0001E2  D0C5               	goto	L9
  4891  0001E4                     i2l2778:
  4892                           
  4893                           ;my_i2c.c: 139: ic_ptr->error_count++;
  4894  0001E4  EE20 F00E          	lfsr	2,14
  4895  0001E8  5062               	movf	_ic_ptr,w,c
  4896  0001EA  26D9               	addwf	fsr2l,f,c
  4897  0001EC  5063               	movf	_ic_ptr+1,w,c
  4898  0001EE  22DA               	addwfc	fsr2h,f,c
  4899  0001F0  2ADF               	incf	indf2,f,c
  4900                           
  4901                           ;my_i2c.c: 140: ic_ptr->status = 0x5;
  4902  0001F2  EE20 F00C          	lfsr	2,12
  4903  0001F6  5062               	movf	_ic_ptr,w,c
  4904  0001F8  26D9               	addwf	fsr2l,f,c
  4905  0001FA  5063               	movf	_ic_ptr+1,w,c
  4906  0001FC  22DA               	addwfc	fsr2h,f,c
  4907  0001FE  0E05               	movlw	5
  4908  000200  6EDF               	movwf	indf2,c
  4909                           
  4910                           ;my_i2c.c: 141: ic_ptr->error_code = 0x6;
  4911  000202  EE20 F00D          	lfsr	2,13
  4912  000206  5062               	movf	_ic_ptr,w,c
  4913  000208  26D9               	addwf	fsr2l,f,c
  4914  00020A  5063               	movf	_ic_ptr+1,w,c
  4915  00020C  22DA               	addwfc	fsr2h,f,c
  4916  00020E  0E06               	movlw	6
  4917  000210  D033               	goto	L5
  4918  000212                     i2l2780:
  4919                           
  4920                           ;my_i2c.c: 147: {
  4921                           ;my_i2c.c: 148: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  4922  000212  EE20 F01A          	lfsr	2,26
  4923  000216  5062               	movf	_ic_ptr,w,c
  4924  000218  26D9               	addwf	fsr2l,f,c
  4925  00021A  5063               	movf	_ic_ptr+1,w,c
  4926  00021C  22DA               	addwfc	fsr2h,f,c
  4927  00021E  50DF               	movf	indf2,w,c
  4928  000220  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4929  000222  EE20 F019          	lfsr	2,25
  4930  000226  5062               	movf	_ic_ptr,w,c
  4931  000228  26D9               	addwf	fsr2l,f,c
  4932  00022A  5063               	movf	_ic_ptr+1,w,c
  4933  00022C  22DA               	addwfc	fsr2h,f,c
  4934  00022E  50DF               	movf	indf2,w,c
  4935  000230  5C30               	subwf	??_i2c_int_handler,w,c
  4936  000232  B0D8               	btfsc	status,0,c
  4937  000234  D0A5               	goto	L8
  4938                           
  4939                           ;my_i2c.c: 149: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  4940  000236  EE20 F01A          	lfsr	2,26
  4941  00023A  5062               	movf	_ic_ptr,w,c
  4942  00023C  26D9               	addwf	fsr2l,f,c
  4943  00023E  5063               	movf	_ic_ptr+1,w,c
  4944  000240  22DA               	addwfc	fsr2h,f,c
  4945  000242  50DF               	movf	indf2,w,c
  4946  000244  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4947  000246  5030               	movf	??_i2c_int_handler,w,c
  4948  000248  0D01               	mullw	1
  4949  00024A  0E0F               	movlw	15
  4950  00024C  26F3               	addwf	prodl,f,c
  4951  00024E  0E00               	movlw	0
  4952  000250  22F4               	addwfc	prodh,f,c
  4953  000252  50F3               	movf	prodl,w,c
  4954  000254  2462               	addwf	_ic_ptr,w,c
  4955  000256  6ED9               	movwf	fsr2l,c
  4956  000258  50F4               	movf	prodh,w,c
  4957  00025A  2063               	addwfc	_ic_ptr+1,w,c
  4958  00025C  6EDA               	movwf	fsr2h,c
  4959  00025E  50DF               	movf	indf2,w,c
  4960  000260  6EC9               	movwf	4041,c	;volatile
  4961                           
  4962                           ;my_i2c.c: 150: ic_ptr->outbufind++;
  4963  000262  EE20 F01A          	lfsr	2,26
  4964  000266  5062               	movf	_ic_ptr,w,c
  4965  000268  26D9               	addwf	fsr2l,f,c
  4966  00026A  5063               	movf	_ic_ptr+1,w,c
  4967  00026C  22DA               	addwfc	fsr2h,f,c
  4968  00026E  2ADF               	incf	indf2,f,c
  4969                           
  4970                           ;my_i2c.c: 151: data_written = 1;
  4971  000270  6E30               	movwf	??_i2c_int_handler& (0+255),c
  4972  000272  0E01               	movlw	1
  4973  000274  6E35               	movwf	i2c_int_handler@data_written,c
  4974  000276  D082               	goto	L6
  4975  000278                     L5:
  4976  000278  6EDF               	movwf	indf2,c
  4977  00027A  D09D               	goto	i2l296
  4978  00027C                     i2l316:
  4979                           
  4980                           ;my_i2c.c: 159: {
  4981                           ;my_i2c.c: 161: if (SSPSTATbits.P == 1) {
  4982  00027C  A8C7               	btfss	4039,4,c	;volatile
  4983  00027E  D043               	goto	i2l2808
  4984                           
  4985                           ;my_i2c.c: 163: ic_ptr->event_count++;
  4986  000280  EE20 F00B          	lfsr	2,11
  4987  000284  5062               	movf	_ic_ptr,w,c
  4988  000286  26D9               	addwf	fsr2l,f,c
  4989  000288  5063               	movf	_ic_ptr+1,w,c
  4990  00028A  22DA               	addwfc	fsr2h,f,c
  4991  00028C  2ADF               	incf	indf2,f,c
  4992                           
  4993                           ;my_i2c.c: 164: if (data_read) {
  4994  00028E  503A               	movf	i2c_int_handler@data_read,w,c
  4995  000290  B4D8               	btfsc	status,2,c
  4996  000292  D034               	goto	i2l2804
  4997                           
  4998                           ;my_i2c.c: 165: if (SSPSTATbits.D_A == 1) {
  4999  000294  AAC7               	btfss	4039,5,c	;volatile
  5000  000296  D01A               	goto	i2l2802
  5001                           
  5002                           ;my_i2c.c: 166: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  5003  000298  EE20 F00A          	lfsr	2,10
  5004  00029C  5062               	movf	_ic_ptr,w,c
  5005  00029E  26D9               	addwf	fsr2l,f,c
  5006  0002A0  5063               	movf	_ic_ptr+1,w,c
  5007  0002A2  22DA               	addwfc	fsr2h,f,c
  5008  0002A4  50DF               	movf	indf2,w,c
  5009  0002A6  6E30               	movwf	??_i2c_int_handler& (0+255),c
  5010  0002A8  5030               	movf	??_i2c_int_handler,w,c
  5011  0002AA  0D01               	mullw	1
  5012  0002AC  50F3               	movf	prodl,w,c
  5013  0002AE  2462               	addwf	_ic_ptr,w,c
  5014  0002B0  6ED9               	movwf	fsr2l,c
  5015  0002B2  50F4               	movf	prodh,w,c
  5016  0002B4  2063               	addwfc	_ic_ptr+1,w,c
  5017  0002B6  6EDA               	movwf	fsr2h,c
  5018  0002B8  C038  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  5019                           
  5020                           ;my_i2c.c: 167: ic_ptr->buflen++;
  5021  0002BC  EE20 F00A          	lfsr	2,10
  5022  0002C0  5062               	movf	_ic_ptr,w,c
  5023  0002C2  26D9               	addwf	fsr2l,f,c
  5024  0002C4  5063               	movf	_ic_ptr+1,w,c
  5025  0002C6  22DA               	addwfc	fsr2h,f,c
  5026  0002C8  2ADF               	incf	indf2,f,c
  5027  0002CA  D018               	goto	i2l2804
  5028  0002CC                     i2l2802:
  5029                           
  5030                           ;my_i2c.c: 170: ic_ptr->error_count++;
  5031  0002CC  EE20 F00E          	lfsr	2,14
  5032  0002D0  5062               	movf	_ic_ptr,w,c
  5033  0002D2  26D9               	addwf	fsr2l,f,c
  5034  0002D4  5063               	movf	_ic_ptr+1,w,c
  5035  0002D6  22DA               	addwfc	fsr2h,f,c
  5036  0002D8  2ADF               	incf	indf2,f,c
  5037                           
  5038                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  5039  0002DA  EE20 F00D          	lfsr	2,13
  5040  0002DE  5062               	movf	_ic_ptr,w,c
  5041  0002E0  26D9               	addwf	fsr2l,f,c
  5042  0002E2  5063               	movf	_ic_ptr+1,w,c
  5043  0002E4  22DA               	addwfc	fsr2h,f,c
  5044  0002E6  0E06               	movlw	6
  5045  0002E8  6EDF               	movwf	indf2,c
  5046                           
  5047                           ;my_i2c.c: 172: ic_ptr->status = 0x5;
  5048  0002EA  EE20 F00C          	lfsr	2,12
  5049  0002EE  5062               	movf	_ic_ptr,w,c
  5050  0002F0  26D9               	addwf	fsr2l,f,c
  5051  0002F2  5063               	movf	_ic_ptr+1,w,c
  5052  0002F4  22DA               	addwfc	fsr2h,f,c
  5053  0002F6  0E05               	movlw	5
  5054  0002F8  6EDF               	movwf	indf2,c
  5055  0002FA  D042               	goto	L8
  5056  0002FC                     i2l2804:
  5057                           
  5058                           ;my_i2c.c: 175: msg_ready = 1;
  5059  0002FC  6E30               	movwf	??_i2c_int_handler& (0+255),c
  5060  0002FE  0E01               	movlw	1
  5061  000300  6E39               	movwf	i2c_int_handler@msg_ready,c
  5062  000302  5030               	movf	??_i2c_int_handler& (0+255),w,c
  5063  000304  D03D               	goto	L8
  5064  000306                     i2l2808:
  5065  000306  503A               	movf	i2c_int_handler@data_read,w,c
  5066  000308  B4D8               	btfsc	status,2,c
  5067  00030A  D055               	goto	i2l296
  5068                           
  5069                           ;my_i2c.c: 179: ic_ptr->event_count++;
  5070  00030C  EE20 F00B          	lfsr	2,11
  5071  000310  5062               	movf	_ic_ptr,w,c
  5072  000312  26D9               	addwf	fsr2l,f,c
  5073  000314  5063               	movf	_ic_ptr+1,w,c
  5074  000316  22DA               	addwfc	fsr2h,f,c
  5075  000318  2ADF               	incf	indf2,f,c
  5076                           
  5077                           ;my_i2c.c: 180: if (SSPSTATbits.D_A == 1) {
  5078  00031A  AAC7               	btfss	4039,5,c	;volatile
  5079  00031C  D01A               	goto	i2l324
  5080                           
  5081                           ;my_i2c.c: 181: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  5082  00031E  EE20 F00A          	lfsr	2,10
  5083  000322  5062               	movf	_ic_ptr,w,c
  5084  000324  26D9               	addwf	fsr2l,f,c
  5085  000326  5063               	movf	_ic_ptr+1,w,c
  5086  000328  22DA               	addwfc	fsr2h,f,c
  5087  00032A  50DF               	movf	indf2,w,c
  5088  00032C  6E30               	movwf	??_i2c_int_handler& (0+255),c
  5089  00032E  5030               	movf	??_i2c_int_handler,w,c
  5090  000330  0D01               	mullw	1
  5091  000332  50F3               	movf	prodl,w,c
  5092  000334  2462               	addwf	_ic_ptr,w,c
  5093  000336  6ED9               	movwf	fsr2l,c
  5094  000338  50F4               	movf	prodh,w,c
  5095  00033A  2063               	addwfc	_ic_ptr+1,w,c
  5096  00033C  6EDA               	movwf	fsr2h,c
  5097  00033E  C038  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  5098                           
  5099                           ;my_i2c.c: 182: ic_ptr->buflen++;
  5100  000342  EE20 F00A          	lfsr	2,10
  5101  000346  5062               	movf	_ic_ptr,w,c
  5102  000348  26D9               	addwf	fsr2l,f,c
  5103  00034A  5063               	movf	_ic_ptr+1,w,c
  5104  00034C  22DA               	addwfc	fsr2h,f,c
  5105  00034E  2ADF               	incf	indf2,f,c
  5106                           
  5107                           ;my_i2c.c: 183: } else {
  5108  000350  D032               	goto	i2l296
  5109  000352                     i2l324:
  5110                           
  5111                           ;my_i2c.c: 184: if (SSPSTATbits.R_W == 1) {
  5112  000352  A4C7               	btfss	4039,2,c	;volatile
  5113  000354  D718               	goto	i2l2760
  5114                           
  5115                           ;my_i2c.c: 185: ic_ptr->status = 0x8;
  5116  000356  EE20 F00C          	lfsr	2,12
  5117  00035A  5062               	movf	_ic_ptr,w,c
  5118  00035C  26D9               	addwf	fsr2l,f,c
  5119  00035E  5063               	movf	_ic_ptr+1,w,c
  5120  000360  22DA               	addwfc	fsr2h,f,c
  5121  000362  0E08               	movlw	8
  5122  000364  6EDF               	movwf	indf2,c
  5123                           
  5124                           ;my_i2c.c: 186: msg_ready = 1;
  5125  000366  6E30               	movwf	??_i2c_int_handler& (0+255),c
  5126  000368  0E01               	movlw	1
  5127  00036A  6E39               	movwf	i2c_int_handler@msg_ready,c
  5128  00036C  5030               	movf	??_i2c_int_handler& (0+255),w,c
  5129  00036E                     L9:
  5130                           
  5131                           ;my_i2c.c: 187: msg_to_send = 1;
  5132  00036E  6E30               	movwf	??_i2c_int_handler& (0+255),c
  5133  000370  0E01               	movlw	1
  5134  000372  6E37               	movwf	i2c_int_handler@msg_to_send,c
  5135  000374  5030               	movf	??_i2c_int_handler& (0+255),w,c
  5136                           
  5137                           ;my_i2c.c: 189: data_read = 0;
  5138  000376  6E30               	movwf	??_i2c_int_handler& (0+255),c
  5139  000378  0E00               	movlw	0
  5140  00037A  6E3A               	movwf	i2c_int_handler@data_read,c
  5141  00037C                     L6:
  5142  00037C  5030               	movf	??_i2c_int_handler& (0+255),w,c
  5143                           
  5144                           ;my_i2c.c: 190: } else {
  5145  00037E  D01B               	goto	i2l296
  5146  000380                     L8:
  5147                           
  5148                           ;my_i2c.c: 193: ic_ptr->status = 0x5;
  5149  000380  EE20 F00C          	lfsr	2,12
  5150  000384  5062               	movf	_ic_ptr,w,c
  5151  000386  26D9               	addwf	fsr2l,f,c
  5152  000388  5063               	movf	_ic_ptr+1,w,c
  5153  00038A  22DA               	addwfc	fsr2h,f,c
  5154  00038C  0E05               	movlw	5
  5155  00038E  D774               	goto	L5
  5156  000390                     i2l2830:
  5157  000390  EE20 F00C          	lfsr	2,12
  5158  000394  5062               	movf	_ic_ptr,w,c
  5159  000396  26D9               	addwf	fsr2l,f,c
  5160  000398  5063               	movf	_ic_ptr+1,w,c
  5161  00039A  22DA               	addwfc	fsr2h,f,c
  5162  00039C  50DF               	movf	indf2,w,c
  5163                           
  5164                           ; Switch size 1, requested type "space"
  5165                           ; Number of cases is 4, Range of values is 5 to 8
  5166                           ; switch strategies available:
  5167                           ; Name         Instructions Cycles
  5168                           ; simple_byte           13     7 (average)
  5169                           ;	Chosen strategy is simple_byte
  5170  00039E  0A05               	xorlw	5	; case 5
  5171  0003A0  B4D8               	btfsc	status,2,c
  5172  0003A2  D6C8               	goto	i2l298
  5173  0003A4  0A03               	xorlw	3	; case 6
  5174  0003A6  B4D8               	btfsc	status,2,c
  5175  0003A8  D6DB               	goto	i2l302
  5176  0003AA  0A01               	xorlw	1	; case 7
  5177  0003AC  B4D8               	btfsc	status,2,c
  5178  0003AE  D766               	goto	i2l316
  5179  0003B0  0A0F               	xorlw	15	; case 8
  5180  0003B2  B4D8               	btfsc	status,2,c
  5181  0003B4  D72E               	goto	i2l2780
  5182  0003B6                     i2l296:
  5183                           
  5184                           ;my_i2c.c: 200: }
  5185                           ;my_i2c.c: 203: if (data_read || data_written) {
  5186  0003B6  663A               	tstfsz	i2c_int_handler@data_read,c
  5187  0003B8  D003               	goto	i2l330
  5188  0003BA  5035               	movf	i2c_int_handler@data_written,w,c
  5189  0003BC  B4D8               	btfsc	status,2,c
  5190  0003BE  D002               	goto	i2l2836
  5191  0003C0                     i2l330:
  5192                           
  5193                           ;my_i2c.c: 205: if (SSPCON1bits.CKP == 0) {
  5194  0003C0  A8C6               	btfss	4038,4,c	;volatile
  5195                           
  5196                           ;my_i2c.c: 206: SSPCON1bits.CKP = 1;
  5197  0003C2  88C6               	bsf	4038,4,c	;volatile
  5198  0003C4                     i2l2836:
  5199                           
  5200                           ;my_i2c.c: 207: }
  5201                           ;my_i2c.c: 208: }
  5202                           ;my_i2c.c: 211: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  5203  0003C4  EE20 F00A          	lfsr	2,10
  5204  0003C8  5062               	movf	_ic_ptr,w,c
  5205  0003CA  26D9               	addwf	fsr2l,f,c
  5206  0003CC  5063               	movf	_ic_ptr+1,w,c
  5207  0003CE  22DA               	addwfc	fsr2h,f,c
  5208  0003D0  0E08               	movlw	8
  5209  0003D2  64DF               	cpfsgt	indf2,c
  5210  0003D4  D019               	goto	i2l2842
  5211  0003D6  6639               	tstfsz	i2c_int_handler@msg_ready,c
  5212  0003D8  D017               	goto	i2l2842
  5213                           
  5214                           ;my_i2c.c: 212: ic_ptr->status = 0x5;
  5215  0003DA  EE20 F00C          	lfsr	2,12
  5216  0003DE  5062               	movf	_ic_ptr,w,c
  5217  0003E0  26D9               	addwf	fsr2l,f,c
  5218  0003E2  5063               	movf	_ic_ptr+1,w,c
  5219  0003E4  22DA               	addwfc	fsr2h,f,c
  5220  0003E6  0E05               	movlw	5
  5221  0003E8  6EDF               	movwf	indf2,c
  5222                           
  5223                           ;my_i2c.c: 213: ic_ptr->error_count++;
  5224  0003EA  EE20 F00E          	lfsr	2,14
  5225  0003EE  5062               	movf	_ic_ptr,w,c
  5226  0003F0  26D9               	addwf	fsr2l,f,c
  5227  0003F2  5063               	movf	_ic_ptr+1,w,c
  5228  0003F4  22DA               	addwfc	fsr2h,f,c
  5229  0003F6  2ADF               	incf	indf2,f,c
  5230                           
  5231                           ;my_i2c.c: 214: ic_ptr->error_code = 0x7;
  5232  0003F8  EE20 F00D          	lfsr	2,13
  5233  0003FC  5062               	movf	_ic_ptr,w,c
  5234  0003FE  26D9               	addwf	fsr2l,f,c
  5235  000400  5063               	movf	_ic_ptr+1,w,c
  5236  000402  22DA               	addwfc	fsr2h,f,c
  5237  000404  0E07               	movlw	7
  5238  000406  6EDF               	movwf	indf2,c
  5239  000408                     i2l2842:
  5240                           
  5241                           ;my_i2c.c: 215: }
  5242                           ;my_i2c.c: 217: if (msg_ready) {
  5243  000408  5039               	movf	i2c_int_handler@msg_ready,w,c
  5244  00040A  B4D8               	btfsc	status,2,c
  5245  00040C  D030               	goto	i2l2852
  5246                           
  5247                           ;my_i2c.c: 218: { LATCbits.LATC1 = 1; };
  5248  00040E  828B               	bsf	3979,1,c	;volatile
  5249                           
  5250                           ;my_i2c.c: 219: { LATCbits.LATC1 = 0; };
  5251  000410  928B               	bcf	3979,1,c	;volatile
  5252                           
  5253                           ;my_i2c.c: 221: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  5254  000412  EE20 F00B          	lfsr	2,11
  5255  000416  5062               	movf	_ic_ptr,w,c
  5256  000418  26D9               	addwf	fsr2l,f,c
  5257  00041A  5063               	movf	_ic_ptr+1,w,c
  5258  00041C  22DA               	addwfc	fsr2h,f,c
  5259  00041E  EE10 F00A          	lfsr	1,10
  5260  000422  5062               	movf	_ic_ptr,w,c
  5261  000424  26E1               	addwf	fsr1l,f,c
  5262  000426  5063               	movf	_ic_ptr+1,w,c
  5263  000428  22E2               	addwfc	fsr1h,f,c
  5264  00042A  50E7               	movf	indf1,w,c
  5265  00042C  6E30               	movwf	??_i2c_int_handler& (0+255),c
  5266  00042E  5030               	movf	??_i2c_int_handler,w,c
  5267  000430  0D01               	mullw	1
  5268  000432  50F3               	movf	prodl,w,c
  5269  000434  2462               	addwf	_ic_ptr,w,c
  5270  000436  6EE1               	movwf	fsr1l,c
  5271  000438  50F4               	movf	prodh,w,c
  5272  00043A  2063               	addwfc	_ic_ptr+1,w,c
  5273  00043C  6EE2               	movwf	fsr1h,c
  5274  00043E  CFDF FFE7          	movff	indf2,indf1
  5275                           
  5276                           ;my_i2c.c: 222: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  5277  000442  6E30               	movwf	??_i2c_int_handler& (0+255),c
  5278  000444  0E28               	movlw	40
  5279  000446  6E2C               	movwf	ToMainHigh_sendmsg@msgtype,c
  5280  000448  5030               	movf	??_i2c_int_handler& (0+255),w,c
  5281  00044A  C063  F02E         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  5282  00044E  C062  F02D         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  5283  000452  EE20 F00A          	lfsr	2,10
  5284  000456  5062               	movf	_ic_ptr,w,c
  5285  000458  26D9               	addwf	fsr2l,f,c
  5286  00045A  5063               	movf	_ic_ptr+1,w,c
  5287  00045C  22DA               	addwfc	fsr2h,f,c
  5288  00045E  50DF               	movf	indf2,w,c
  5289  000460  6E31               	movwf	(??_i2c_int_handler+1)& (0+255),c
  5290  000462  2831               	incf	??_i2c_int_handler+1,w,c
  5291  000464  EC21  F009         	call	_ToMainHigh_sendmsg
  5292                           
  5293                           ;my_i2c.c: 223: ic_ptr->buflen = 0;
  5294  000468  EE20 F00A          	lfsr	2,10
  5295  00046C  D02E               	goto	L7
  5296  00046E                     i2l2852:
  5297  00046E  EE20 F00E          	lfsr	2,14
  5298  000472  5062               	movf	_ic_ptr,w,c
  5299  000474  26D9               	addwf	fsr2l,f,c
  5300  000476  5063               	movf	_ic_ptr+1,w,c
  5301  000478  22DA               	addwfc	fsr2h,f,c
  5302  00047A  50DF               	movf	indf2,w,c
  5303  00047C  B4D8               	btfsc	status,2,c
  5304  00047E  D02B               	goto	i2l2860
  5305                           
  5306                           ;my_i2c.c: 225: error_buf[0] = ic_ptr->error_count;
  5307  000480  EE20 F00E          	lfsr	2,14
  5308  000484  5062               	movf	_ic_ptr,w,c
  5309  000486  26D9               	addwf	fsr2l,f,c
  5310  000488  5063               	movf	_ic_ptr+1,w,c
  5311  00048A  22DA               	addwfc	fsr2h,f,c
  5312  00048C  50DF               	movf	indf2,w,c
  5313  00048E  6E32               	movwf	i2c_int_handler@error_buf,c
  5314                           
  5315                           ;my_i2c.c: 226: error_buf[1] = ic_ptr->error_code;
  5316  000490  EE20 F00D          	lfsr	2,13
  5317  000494  5062               	movf	_ic_ptr,w,c
  5318  000496  26D9               	addwf	fsr2l,f,c
  5319  000498  5063               	movf	_ic_ptr+1,w,c
  5320  00049A  22DA               	addwfc	fsr2h,f,c
  5321  00049C  50DF               	movf	indf2,w,c
  5322  00049E  6E33               	movwf	i2c_int_handler@error_buf+1,c
  5323                           
  5324                           ;my_i2c.c: 227: error_buf[2] = ic_ptr->event_count;
  5325  0004A0  EE20 F00B          	lfsr	2,11
  5326  0004A4  5062               	movf	_ic_ptr,w,c
  5327  0004A6  26D9               	addwf	fsr2l,f,c
  5328  0004A8  5063               	movf	_ic_ptr+1,w,c
  5329  0004AA  22DA               	addwfc	fsr2h,f,c
  5330  0004AC  50DF               	movf	indf2,w,c
  5331  0004AE  6E34               	movwf	i2c_int_handler@error_buf+2,c
  5332                           
  5333                           ;my_i2c.c: 228: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  5334  0004B0  6E30               	movwf	??_i2c_int_handler& (0+255),c
  5335  0004B2  0E29               	movlw	41
  5336  0004B4  6E2C               	movwf	ToMainHigh_sendmsg@msgtype,c
  5337  0004B6  5030               	movf	??_i2c_int_handler& (0+255),w,c
  5338  0004B8  0E00               	movlw	high i2c_int_handler@error_buf
  5339  0004BA  6E2E               	movwf	ToMainHigh_sendmsg@data+1,c
  5340  0004BC  0E32               	movlw	low i2c_int_handler@error_buf
  5341  0004BE  6E2D               	movwf	ToMainHigh_sendmsg@data,c
  5342  0004C0  0E03               	movlw	3
  5343  0004C2  EC21  F009         	call	_ToMainHigh_sendmsg
  5344                           
  5345                           ;my_i2c.c: 229: ic_ptr->error_count = 0;
  5346  0004C6  EE20 F00E          	lfsr	2,14
  5347  0004CA                     L7:
  5348  0004CA  5062               	movf	_ic_ptr,w,c
  5349  0004CC  26D9               	addwf	fsr2l,f,c
  5350  0004CE  5063               	movf	_ic_ptr+1,w,c
  5351  0004D0  22DA               	addwfc	fsr2h,f,c
  5352  0004D2  0E00               	movlw	0
  5353  0004D4  6EDF               	movwf	indf2,c
  5354  0004D6                     i2l2860:
  5355                           
  5356                           ;my_i2c.c: 230: }
  5357                           ;my_i2c.c: 231: if (msg_to_send) {
  5358  0004D6  5037               	movf	i2c_int_handler@msg_to_send,w,c
  5359  0004D8  B4D8               	btfsc	status,2,c
  5360  0004DA  0012               	return	
  5361                           
  5362                           ;my_i2c.c: 233: readMessages();
  5363  0004DC  EC79  F008         	call	_readMessages	;wreg free
  5364  0004E0  0012               	return	
  5365  0004E2                     __end_of_i2c_int_handler:
  5366                           	opt stack 0
  5367                           pclatu	equ	0xFFB
  5368                           pclath	equ	0xFFA
  5369                           tblptru	equ	0xFF8
  5370                           tblptrh	equ	0xFF7
  5371                           tblptrl	equ	0xFF6
  5372                           tablat	equ	0xFF5
  5373                           prodh	equ	0xFF4
  5374                           prodl	equ	0xFF3
  5375                           intcon	equ	0xFF2
  5376                           postinc0	equ	0xFEE
  5377                           fsr0h	equ	0xFEA
  5378                           fsr0l	equ	0xFE9
  5379                           wreg	equ	0xFE8
  5380                           indf1	equ	0xFE7
  5381                           postdec1	equ	0xFE5
  5382                           fsr1h	equ	0xFE2
  5383                           fsr1l	equ	0xFE1
  5384                           bsr	equ	0xFE0
  5385                           indf2	equ	0xFDF
  5386                           postinc2	equ	0xFDE
  5387                           postdec2	equ	0xFDD
  5388                           fsr2h	equ	0xFDA
  5389                           fsr2l	equ	0xFD9
  5390                           status	equ	0xFD8
  5391                           
  5392 ;; *************** function _readMessages *****************
  5393 ;; Defined at:
  5394 ;;		line 306 in file "../src/my_i2c.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;		None
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;		None
  5399 ;; Return value:  Size  Location     Type
  5400 ;;		None               void
  5401 ;; Registers used:
  5402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5408 ;;      Params:         0       0       0       0       0
  5409 ;;      Locals:         0       0       0       0       0
  5410 ;;      Temps:          1       0       0       0       0
  5411 ;;      Totals:         1       0       0       0       0
  5412 ;;Total ram usage:        1 bytes
  5413 ;; Hardware stack levels used:    1
  5414 ;; Hardware stack levels required when called:    1
  5415 ;; This function calls:
  5416 ;;		_start_i2c_slave_reply
  5417 ;; This function is called by:
  5418 ;;		_i2c_int_handler
  5419 ;; This function uses a non-reentrant model
  5420 ;;
  5421                           
  5422                           	psect	text34
  5423  0010F2                     __ptext34:
  5424                           	opt stack 0
  5425  0010F2                     _readMessages:
  5426                           	opt stack 19
  5427                           
  5428                           ;my_i2c.c: 309: { LATCbits.LATC1 = 1; };
  5429                           
  5430                           ;incstack = 0
  5431  0010F2  828B               	bsf	3979,1,c	;volatile
  5432                           
  5433                           ;my_i2c.c: 310: { LATCbits.LATC1 = 0; };
  5434  0010F4  928B               	bcf	3979,1,c	;volatile
  5435                           
  5436                           ;my_i2c.c: 313: motorEncoderBuffer[0] = 0x07;
  5437  0010F6  6E1B               	movwf	??_readMessages& (0+255),c
  5438  0010F8  0E07               	movlw	7
  5439  0010FA  6E50               	movwf	_motorEncoderBuffer,c
  5440  0010FC  501B               	movf	??_readMessages& (0+255),w,c
  5441                           
  5442                           ;my_i2c.c: 314: motorEncoderBuffer[1] = 0x02;
  5443  0010FE  6E1B               	movwf	??_readMessages& (0+255),c
  5444  001100  0E02               	movlw	2
  5445  001102  6E51               	movwf	_motorEncoderBuffer+1,c
  5446  001104  501B               	movf	??_readMessages& (0+255),w,c
  5447                           
  5448                           ;my_i2c.c: 315: motorEncoderBuffer[2] = timer0Counter;
  5449  001106  C047  F052         	movff	_timer0Counter,_motorEncoderBuffer+2
  5450                           
  5451                           ;my_i2c.c: 316: motorEncoderBuffer[3] = timer1Counter;
  5452  00110A  C049  F053         	movff	_timer1Counter,_motorEncoderBuffer+3
  5453                           
  5454                           ;my_i2c.c: 317: motorEncoderBuffer[4] = timer0Counter ^ timer1Counter;
  5455  00110E  5047               	movf	_timer0Counter,w,c
  5456  001110  1849               	xorwf	_timer1Counter,w,c
  5457  001112  6E54               	movwf	_motorEncoderBuffer+4,c
  5458                           
  5459                           ;my_i2c.c: 318: length = 5;
  5460  001114  6E1B               	movwf	??_readMessages& (0+255),c
  5461  001116  0E05               	movlw	5
  5462  001118  6E4E               	movwf	_length,c
  5463  00111A  501B               	movf	??_readMessages& (0+255),w,c
  5464                           
  5465                           ;my_i2c.c: 320: start_i2c_slave_reply(length, motorEncoderBuffer);
  5466  00111C  0E00               	movlw	high _motorEncoderBuffer
  5467  00111E  6E17               	movwf	start_i2c_slave_reply@msg+1,c
  5468  001120  0E50               	movlw	low _motorEncoderBuffer
  5469  001122  6E16               	movwf	start_i2c_slave_reply@msg,c
  5470  001124  504E               	movf	_length,w,c
  5471  001126  EC83  F004         	call	_start_i2c_slave_reply
  5472  00112A  0012               	return	
  5473  00112C                     __end_of_readMessages:
  5474                           	opt stack 0
  5475                           pclatu	equ	0xFFB
  5476                           pclath	equ	0xFFA
  5477                           tblptru	equ	0xFF8
  5478                           tblptrh	equ	0xFF7
  5479                           tblptrl	equ	0xFF6
  5480                           tablat	equ	0xFF5
  5481                           prodh	equ	0xFF4
  5482                           prodl	equ	0xFF3
  5483                           intcon	equ	0xFF2
  5484                           postinc0	equ	0xFEE
  5485                           fsr0h	equ	0xFEA
  5486                           fsr0l	equ	0xFE9
  5487                           wreg	equ	0xFE8
  5488                           indf1	equ	0xFE7
  5489                           postdec1	equ	0xFE5
  5490                           fsr1h	equ	0xFE2
  5491                           fsr1l	equ	0xFE1
  5492                           bsr	equ	0xFE0
  5493                           indf2	equ	0xFDF
  5494                           postinc2	equ	0xFDE
  5495                           postdec2	equ	0xFDD
  5496                           fsr2h	equ	0xFDA
  5497                           fsr2l	equ	0xFD9
  5498                           status	equ	0xFD8
  5499                           
  5500 ;; *************** function _start_i2c_slave_reply *****************
  5501 ;; Defined at:
  5502 ;;		line 24 in file "../src/my_i2c.c"
  5503 ;; Parameters:    Size  Location     Type
  5504 ;;  length          1    wreg     unsigned char 
  5505 ;;  msg             2   21[COMRAM] PTR unsigned char 
  5506 ;;		 -> motorEncoderBuffer(5), 
  5507 ;; Auto vars:     Size  Location     Type
  5508 ;;  length          1   25[COMRAM] unsigned char 
  5509 ;; Return value:  Size  Location     Type
  5510 ;;		None               void
  5511 ;; Registers used:
  5512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5513 ;; Tracked objects:
  5514 ;;		On entry : 0/0
  5515 ;;		On exit  : 0/0
  5516 ;;		Unchanged: 0/0
  5517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5518 ;;      Params:         2       0       0       0       0
  5519 ;;      Locals:         1       0       0       0       0
  5520 ;;      Temps:          2       0       0       0       0
  5521 ;;      Totals:         5       0       0       0       0
  5522 ;;Total ram usage:        5 bytes
  5523 ;; Hardware stack levels used:    1
  5524 ;; This function calls:
  5525 ;;		Nothing
  5526 ;; This function is called by:
  5527 ;;		_readMessages
  5528 ;; This function uses a non-reentrant model
  5529 ;;
  5530                           
  5531                           	psect	text35
  5532  000906                     __ptext35:
  5533                           	opt stack 0
  5534  000906                     _start_i2c_slave_reply:
  5535                           	opt stack 19
  5536                           
  5537                           ;incstack = 0
  5538                           ;start_i2c_slave_reply@length stored from wreg
  5539  000906  CFE8 F01A          	movff	wreg,start_i2c_slave_reply@length
  5540                           
  5541                           ;my_i2c.c: 26: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  5542  00090A  EE20 F019          	lfsr	2,25
  5543  00090E  5062               	movf	_ic_ptr,w,c
  5544  000910  26D9               	addwf	fsr2l,f,c
  5545  000912  5063               	movf	_ic_ptr+1,w,c
  5546  000914  22DA               	addwfc	fsr2h,f,c
  5547  000916  0E00               	movlw	0
  5548  000918  6EDF               	movwf	indf2,c
  5549  00091A  D02D               	goto	i2l3216
  5550  00091C                     i2l3212:
  5551                           
  5552                           ;my_i2c.c: 27: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  5553  00091C  EE20 F019          	lfsr	2,25
  5554  000920  5062               	movf	_ic_ptr,w,c
  5555  000922  26D9               	addwf	fsr2l,f,c
  5556  000924  5063               	movf	_ic_ptr+1,w,c
  5557  000926  22DA               	addwfc	fsr2h,f,c
  5558  000928  50DF               	movf	indf2,w,c
  5559  00092A  6E18               	movwf	??_start_i2c_slave_reply& (0+255),c
  5560  00092C  5018               	movf	??_start_i2c_slave_reply,w,c
  5561  00092E  0D01               	mullw	1
  5562  000930  50F3               	movf	prodl,w,c
  5563  000932  2416               	addwf	start_i2c_slave_reply@msg,w,c
  5564  000934  6ED9               	movwf	fsr2l,c
  5565  000936  50F4               	movf	prodh,w,c
  5566  000938  2017               	addwfc	start_i2c_slave_reply@msg+1,w,c
  5567  00093A  6EDA               	movwf	fsr2h,c
  5568  00093C  EE10 F019          	lfsr	1,25
  5569  000940  5062               	movf	_ic_ptr,w,c
  5570  000942  26E1               	addwf	fsr1l,f,c
  5571  000944  5063               	movf	_ic_ptr+1,w,c
  5572  000946  22E2               	addwfc	fsr1h,f,c
  5573  000948  50E7               	movf	indf1,w,c
  5574  00094A  6E19               	movwf	(??_start_i2c_slave_reply+1)& (0+255),c
  5575  00094C  5019               	movf	??_start_i2c_slave_reply+1,w,c
  5576  00094E  0D01               	mullw	1
  5577  000950  0E0F               	movlw	15
  5578  000952  26F3               	addwf	prodl,f,c
  5579  000954  0E00               	movlw	0
  5580  000956  22F4               	addwfc	prodh,f,c
  5581  000958  50F3               	movf	prodl,w,c
  5582  00095A  2462               	addwf	_ic_ptr,w,c
  5583  00095C  6EE1               	movwf	fsr1l,c
  5584  00095E  50F4               	movf	prodh,w,c
  5585  000960  2063               	addwfc	_ic_ptr+1,w,c
  5586  000962  6EE2               	movwf	fsr1h,c
  5587  000964  CFDF FFE7          	movff	indf2,indf1
  5588  000968  EE20 F019          	lfsr	2,25
  5589  00096C  5062               	movf	_ic_ptr,w,c
  5590  00096E  26D9               	addwf	fsr2l,f,c
  5591  000970  5063               	movf	_ic_ptr+1,w,c
  5592  000972  22DA               	addwfc	fsr2h,f,c
  5593  000974  2ADF               	incf	indf2,f,c
  5594  000976                     i2l3216:
  5595  000976  EE20 F019          	lfsr	2,25
  5596  00097A  5062               	movf	_ic_ptr,w,c
  5597  00097C  26D9               	addwf	fsr2l,f,c
  5598  00097E  5063               	movf	_ic_ptr+1,w,c
  5599  000980  22DA               	addwfc	fsr2h,f,c
  5600  000982  50DF               	movf	indf2,w,c
  5601  000984  6E18               	movwf	??_start_i2c_slave_reply& (0+255),c
  5602  000986  501A               	movf	start_i2c_slave_reply@length,w,c
  5603  000988  5C18               	subwf	??_start_i2c_slave_reply,w,c
  5604  00098A  A0D8               	btfss	status,0,c
  5605  00098C  D7C7               	goto	i2l3212
  5606                           
  5607                           ;my_i2c.c: 28: }
  5608                           ;my_i2c.c: 29: ic_ptr->outbuflen = length;
  5609  00098E  EE20 F019          	lfsr	2,25
  5610  000992  5062               	movf	_ic_ptr,w,c
  5611  000994  26D9               	addwf	fsr2l,f,c
  5612  000996  5063               	movf	_ic_ptr+1,w,c
  5613  000998  22DA               	addwfc	fsr2h,f,c
  5614  00099A  C01A  FFDF         	movff	start_i2c_slave_reply@length,indf2
  5615                           
  5616                           ;my_i2c.c: 30: ic_ptr->outbufind = 1;
  5617  00099E  EE20 F01A          	lfsr	2,26
  5618  0009A2  5062               	movf	_ic_ptr,w,c
  5619  0009A4  26D9               	addwf	fsr2l,f,c
  5620  0009A6  5063               	movf	_ic_ptr+1,w,c
  5621  0009A8  22DA               	addwfc	fsr2h,f,c
  5622  0009AA  0E01               	movlw	1
  5623  0009AC  6EDF               	movwf	indf2,c
  5624                           
  5625                           ;my_i2c.c: 33: SSPBUF = ic_ptr->outbuffer[0];
  5626  0009AE  EE20 F00F          	lfsr	2,15
  5627  0009B2  5062               	movf	_ic_ptr,w,c
  5628  0009B4  26D9               	addwf	fsr2l,f,c
  5629  0009B6  5063               	movf	_ic_ptr+1,w,c
  5630  0009B8  22DA               	addwfc	fsr2h,f,c
  5631  0009BA  50DF               	movf	indf2,w,c
  5632  0009BC  6EC9               	movwf	4041,c	;volatile
  5633                           
  5634                           ;my_i2c.c: 36: SSPCON1bits.CKP = 1;
  5635  0009BE  88C6               	bsf	4038,4,c	;volatile
  5636  0009C0  0012               	return	
  5637  0009C2                     __end_of_start_i2c_slave_reply:
  5638                           	opt stack 0
  5639                           pclatu	equ	0xFFB
  5640                           pclath	equ	0xFFA
  5641                           tblptru	equ	0xFF8
  5642                           tblptrh	equ	0xFF7
  5643                           tblptrl	equ	0xFF6
  5644                           tablat	equ	0xFF5
  5645                           prodh	equ	0xFF4
  5646                           prodl	equ	0xFF3
  5647                           intcon	equ	0xFF2
  5648                           postinc0	equ	0xFEE
  5649                           fsr0h	equ	0xFEA
  5650                           fsr0l	equ	0xFE9
  5651                           wreg	equ	0xFE8
  5652                           indf1	equ	0xFE7
  5653                           postdec1	equ	0xFE5
  5654                           fsr1h	equ	0xFE2
  5655                           fsr1l	equ	0xFE1
  5656                           bsr	equ	0xFE0
  5657                           indf2	equ	0xFDF
  5658                           postinc2	equ	0xFDE
  5659                           postdec2	equ	0xFDD
  5660                           fsr2h	equ	0xFDA
  5661                           fsr2l	equ	0xFD9
  5662                           status	equ	0xFD8
  5663                           
  5664 ;; *************** function _handle_start *****************
  5665 ;; Defined at:
  5666 ;;		line 41 in file "../src/my_i2c.c"
  5667 ;; Parameters:    Size  Location     Type
  5668 ;;  data_read       1    wreg     unsigned char 
  5669 ;; Auto vars:     Size  Location     Type
  5670 ;;  data_read       1   21[COMRAM] unsigned char 
  5671 ;; Return value:  Size  Location     Type
  5672 ;;		None               void
  5673 ;; Registers used:
  5674 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5675 ;; Tracked objects:
  5676 ;;		On entry : 0/0
  5677 ;;		On exit  : 0/0
  5678 ;;		Unchanged: 0/0
  5679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5680 ;;      Params:         0       0       0       0       0
  5681 ;;      Locals:         1       0       0       0       0
  5682 ;;      Temps:          0       0       0       0       0
  5683 ;;      Totals:         1       0       0       0       0
  5684 ;;Total ram usage:        1 bytes
  5685 ;; Hardware stack levels used:    1
  5686 ;; This function calls:
  5687 ;;		Nothing
  5688 ;; This function is called by:
  5689 ;;		_i2c_int_handler
  5690 ;; This function uses a non-reentrant model
  5691 ;;
  5692                           
  5693                           	psect	text36
  5694  000A6C                     __ptext36:
  5695                           	opt stack 0
  5696  000A6C                     _handle_start:
  5697                           	opt stack 20
  5698                           
  5699                           ;incstack = 0
  5700                           ;handle_start@data_read stored from wreg
  5701  000A6C  CFE8 F016          	movff	wreg,handle_start@data_read
  5702                           
  5703                           ;my_i2c.c: 42: ic_ptr->event_count = 1;
  5704  000A70  EE20 F00B          	lfsr	2,11
  5705  000A74  5062               	movf	_ic_ptr,w,c
  5706  000A76  26D9               	addwf	fsr2l,f,c
  5707  000A78  5063               	movf	_ic_ptr+1,w,c
  5708  000A7A  22DA               	addwfc	fsr2h,f,c
  5709  000A7C  0E01               	movlw	1
  5710  000A7E  6EDF               	movwf	indf2,c
  5711                           
  5712                           ;my_i2c.c: 43: ic_ptr->buflen = 0;
  5713  000A80  EE20 F00A          	lfsr	2,10
  5714  000A84  5062               	movf	_ic_ptr,w,c
  5715  000A86  26D9               	addwf	fsr2l,f,c
  5716  000A88  5063               	movf	_ic_ptr+1,w,c
  5717  000A8A  22DA               	addwfc	fsr2h,f,c
  5718  000A8C  0E00               	movlw	0
  5719  000A8E  6EDF               	movwf	indf2,c
  5720                           
  5721                           ;my_i2c.c: 45: if (data_read) {
  5722  000A90  5016               	movf	handle_start@data_read,w,c
  5723  000A92  B4D8               	btfsc	status,2,c
  5724  000A94  D02E               	goto	i2l3234
  5725                           
  5726                           ;my_i2c.c: 46: if (SSPSTATbits.D_A == 1) {
  5727  000A96  AAC7               	btfss	4039,5,c	;volatile
  5728  000A98  D018               	goto	i2l286
  5729                           
  5730                           ;my_i2c.c: 49: ic_ptr->status = 0x5;
  5731  000A9A  EE20 F00C          	lfsr	2,12
  5732  000A9E  5062               	movf	_ic_ptr,w,c
  5733  000AA0  26D9               	addwf	fsr2l,f,c
  5734  000AA2  5063               	movf	_ic_ptr+1,w,c
  5735  000AA4  22DA               	addwfc	fsr2h,f,c
  5736  000AA6  0E05               	movlw	5
  5737  000AA8  6EDF               	movwf	indf2,c
  5738                           
  5739                           ;my_i2c.c: 50: ic_ptr->error_count++;
  5740  000AAA  EE20 F00E          	lfsr	2,14
  5741  000AAE  5062               	movf	_ic_ptr,w,c
  5742  000AB0  26D9               	addwf	fsr2l,f,c
  5743  000AB2  5063               	movf	_ic_ptr+1,w,c
  5744  000AB4  22DA               	addwfc	fsr2h,f,c
  5745  000AB6  2ADF               	incf	indf2,f,c
  5746                           
  5747                           ;my_i2c.c: 51: ic_ptr->error_code = 0x5;
  5748  000AB8  EE20 F00D          	lfsr	2,13
  5749  000ABC  5062               	movf	_ic_ptr,w,c
  5750  000ABE  26D9               	addwf	fsr2l,f,c
  5751  000AC0  5063               	movf	_ic_ptr+1,w,c
  5752  000AC2  22DA               	addwfc	fsr2h,f,c
  5753  000AC4  0E05               	movlw	5
  5754  000AC6  6EDF               	movwf	indf2,c
  5755                           
  5756                           ;my_i2c.c: 52: } else {
  5757  000AC8  0012               	return	
  5758  000ACA                     i2l286:
  5759                           
  5760                           ;my_i2c.c: 53: if (SSPSTATbits.R_W == 1) {
  5761  000ACA  A4C7               	btfss	4039,2,c	;volatile
  5762  000ACC  D009               	goto	i2l3232
  5763                           
  5764                           ;my_i2c.c: 54: ic_ptr->status = 0x8;
  5765  000ACE  EE20 F00C          	lfsr	2,12
  5766  000AD2  5062               	movf	_ic_ptr,w,c
  5767  000AD4  26D9               	addwf	fsr2l,f,c
  5768  000AD6  5063               	movf	_ic_ptr+1,w,c
  5769  000AD8  22DA               	addwfc	fsr2h,f,c
  5770  000ADA  0E08               	movlw	8
  5771  000ADC  6EDF               	movwf	indf2,c
  5772                           
  5773                           ;my_i2c.c: 55: } else {
  5774  000ADE  0012               	return	
  5775  000AE0                     i2l3232:
  5776                           
  5777                           ;my_i2c.c: 56: ic_ptr->status = 0x7;
  5778  000AE0  EE20 F00C          	lfsr	2,12
  5779  000AE4  5062               	movf	_ic_ptr,w,c
  5780  000AE6  26D9               	addwf	fsr2l,f,c
  5781  000AE8  5063               	movf	_ic_ptr+1,w,c
  5782  000AEA  22DA               	addwfc	fsr2h,f,c
  5783  000AEC  0E07               	movlw	7
  5784  000AEE  6EDF               	movwf	indf2,c
  5785  000AF0  0012               	return	
  5786  000AF2                     i2l3234:
  5787                           
  5788                           ;my_i2c.c: 60: ic_ptr->status = 0x6;
  5789  000AF2  EE20 F00C          	lfsr	2,12
  5790  000AF6  5062               	movf	_ic_ptr,w,c
  5791  000AF8  26D9               	addwf	fsr2l,f,c
  5792  000AFA  5063               	movf	_ic_ptr+1,w,c
  5793  000AFC  22DA               	addwfc	fsr2h,f,c
  5794  000AFE  0E06               	movlw	6
  5795  000B00  6EDF               	movwf	indf2,c
  5796  000B02  0012               	return	
  5797  000B04                     __end_of_handle_start:
  5798                           	opt stack 0
  5799                           pclatu	equ	0xFFB
  5800                           pclath	equ	0xFFA
  5801                           tblptru	equ	0xFF8
  5802                           tblptrh	equ	0xFF7
  5803                           tblptrl	equ	0xFF6
  5804                           tablat	equ	0xFF5
  5805                           prodh	equ	0xFF4
  5806                           prodl	equ	0xFF3
  5807                           intcon	equ	0xFF2
  5808                           postinc0	equ	0xFEE
  5809                           fsr0h	equ	0xFEA
  5810                           fsr0l	equ	0xFE9
  5811                           wreg	equ	0xFE8
  5812                           indf1	equ	0xFE7
  5813                           postdec1	equ	0xFE5
  5814                           fsr1h	equ	0xFE2
  5815                           fsr1l	equ	0xFE1
  5816                           bsr	equ	0xFE0
  5817                           indf2	equ	0xFDF
  5818                           postinc2	equ	0xFDE
  5819                           postdec2	equ	0xFDD
  5820                           fsr2h	equ	0xFDA
  5821                           fsr2l	equ	0xFD9
  5822                           status	equ	0xFD8
  5823                           
  5824 ;; *************** function _ToMainHigh_sendmsg *****************
  5825 ;; Defined at:
  5826 ;;		line 126 in file "../src/messages.c"
  5827 ;; Parameters:    Size  Location     Type
  5828 ;;  length          1    wreg     unsigned char 
  5829 ;;  msgtype         1   43[COMRAM] unsigned char 
  5830 ;;  data            2   44[COMRAM] PTR void 
  5831 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), main@ic(28), 
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;  length          1   46[COMRAM] unsigned char 
  5834 ;; Return value:  Size  Location     Type
  5835 ;;                  1    wreg      char 
  5836 ;; Registers used:
  5837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5838 ;; Tracked objects:
  5839 ;;		On entry : 0/0
  5840 ;;		On exit  : 0/0
  5841 ;;		Unchanged: 0/0
  5842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5843 ;;      Params:         3       0       0       0       0
  5844 ;;      Locals:         1       0       0       0       0
  5845 ;;      Temps:          0       0       0       0       0
  5846 ;;      Totals:         4       0       0       0       0
  5847 ;;Total ram usage:        4 bytes
  5848 ;; Hardware stack levels used:    1
  5849 ;; Hardware stack levels required when called:    2
  5850 ;; This function calls:
  5851 ;;		_send_msg
  5852 ;; This function is called by:
  5853 ;;		_i2c_int_handler
  5854 ;; This function uses a non-reentrant model
  5855 ;;
  5856                           
  5857                           	psect	text37
  5858  001242                     __ptext37:
  5859                           	opt stack 0
  5860  001242                     _ToMainHigh_sendmsg:
  5861                           	opt stack 18
  5862                           
  5863                           ;incstack = 0
  5864                           ;ToMainHigh_sendmsg@length stored from wreg
  5865  001242  CFE8 F02F          	movff	wreg,ToMainHigh_sendmsg@length
  5866                           
  5867                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  5868                           ;	Return value of _ToMainHigh_sendmsg is never used
  5869  001246  0101               	movlb	1	; () banked
  5870  001248  0E01               	movlw	high _ToMainHigh_MQ
  5871  00124A  6E21               	movwf	send_msg@qptr+1,c
  5872  00124C  0101               	movlb	1	; () banked
  5873  00124E  0E6C               	movlw	low _ToMainHigh_MQ
  5874  001250  6E20               	movwf	send_msg@qptr,c
  5875  001252  C02F  F022         	movff	ToMainHigh_sendmsg@length,send_msg@length
  5876  001256  C02C  F023         	movff	ToMainHigh_sendmsg@msgtype,send_msg@msgtype
  5877  00125A  C02E  F025         	movff	ToMainHigh_sendmsg@data+1,send_msg@data+1
  5878  00125E  C02D  F024         	movff	ToMainHigh_sendmsg@data,send_msg@data
  5879  001262  ECE1  F004         	call	_send_msg	;wreg free
  5880  001266  0012               	return	
  5881  001268                     __end_of_ToMainHigh_sendmsg:
  5882                           	opt stack 0
  5883                           pclatu	equ	0xFFB
  5884                           pclath	equ	0xFFA
  5885                           tblptru	equ	0xFF8
  5886                           tblptrh	equ	0xFF7
  5887                           tblptrl	equ	0xFF6
  5888                           tablat	equ	0xFF5
  5889                           prodh	equ	0xFF4
  5890                           prodl	equ	0xFF3
  5891                           intcon	equ	0xFF2
  5892                           postinc0	equ	0xFEE
  5893                           fsr0h	equ	0xFEA
  5894                           fsr0l	equ	0xFE9
  5895                           wreg	equ	0xFE8
  5896                           indf1	equ	0xFE7
  5897                           postdec1	equ	0xFE5
  5898                           fsr1h	equ	0xFE2
  5899                           fsr1l	equ	0xFE1
  5900                           bsr	equ	0xFE0
  5901                           indf2	equ	0xFDF
  5902                           postinc2	equ	0xFDE
  5903                           postdec2	equ	0xFDD
  5904                           fsr2h	equ	0xFDA
  5905                           fsr2l	equ	0xFD9
  5906                           status	equ	0xFD8
  5907                           
  5908 ;; *************** function _send_msg *****************
  5909 ;; Defined at:
  5910 ;;		line 24 in file "../src/messages.c"
  5911 ;; Parameters:    Size  Location     Type
  5912 ;;  qptr            2   31[COMRAM] PTR struct __msg_queue
  5913 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5914 ;;  length          1   33[COMRAM] unsigned char 
  5915 ;;  msgtype         1   34[COMRAM] unsigned char 
  5916 ;;  data            2   35[COMRAM] PTR void 
  5917 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), main@ic(28), 
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;  qmsg            2   41[COMRAM] PTR struct __msg
  5920 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5921 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5922 ;;  tlength         2   38[COMRAM] unsigned int 
  5923 ;;  slot            1   40[COMRAM] unsigned char 
  5924 ;; Return value:  Size  Location     Type
  5925 ;;                  1    wreg      char 
  5926 ;; Registers used:
  5927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5928 ;; Tracked objects:
  5929 ;;		On entry : 0/0
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5933 ;;      Params:         6       0       0       0       0
  5934 ;;      Locals:         5       0       0       0       0
  5935 ;;      Temps:          1       0       0       0       0
  5936 ;;      Totals:        12       0       0       0       0
  5937 ;;Total ram usage:       12 bytes
  5938 ;; Hardware stack levels used:    1
  5939 ;; Hardware stack levels required when called:    1
  5940 ;; This function calls:
  5941 ;;		i2_memcpy
  5942 ;; This function is called by:
  5943 ;;		_ToMainHigh_sendmsg
  5944 ;;		_ToMainLow_sendmsg
  5945 ;;		_FromMainLow_sendmsg
  5946 ;;		_FromMainHigh_sendmsg
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           	psect	text38
  5951  0009C2                     __ptext38:
  5952                           	opt stack 0
  5953  0009C2                     _send_msg:
  5954                           	opt stack 18
  5955                           
  5956                           ;messages.c: 25: unsigned char slot;
  5957                           ;messages.c: 27: msg *qmsg;
  5958                           ;messages.c: 28: size_t tlength = length;
  5959                           
  5960                           ;incstack = 0
  5961  0009C2  C022  F027         	movff	send_msg@length,send_msg@tlength
  5962  0009C6  6A28               	clrf	send_msg@tlength+1,c
  5963                           
  5964                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5965  0009C8  EE20 F034          	lfsr	2,52
  5966  0009CC  5020               	movf	send_msg@qptr,w,c
  5967  0009CE  26D9               	addwf	fsr2l,f,c
  5968  0009D0  5021               	movf	send_msg@qptr+1,w,c
  5969  0009D2  22DA               	addwfc	fsr2h,f,c
  5970  0009D4  50DF               	movf	indf2,w,c
  5971  0009D6  6E29               	movwf	send_msg@slot,c
  5972                           
  5973                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5974  0009D8  5029               	movf	send_msg@slot,w,c
  5975  0009DA  0D0D               	mullw	13
  5976  0009DC  50F3               	movf	prodl,w,c
  5977  0009DE  2420               	addwf	send_msg@qptr,w,c
  5978  0009E0  6E2A               	movwf	send_msg@qmsg,c
  5979  0009E2  50F4               	movf	prodh,w,c
  5980  0009E4  2021               	addwfc	send_msg@qptr+1,w,c
  5981  0009E6  6E2B               	movwf	send_msg@qmsg+1,c
  5982                           
  5983                           ;messages.c: 41: if (qmsg->full != 0) {
  5984  0009E8  C02A  FFD9         	movff	send_msg@qmsg,fsr2l
  5985  0009EC  C02B  FFDA         	movff	send_msg@qmsg+1,fsr2h
  5986  0009F0  50DF               	movf	indf2,w,c
  5987  0009F2  B4D8               	btfsc	status,2,c
  5988  0009F4  D002               	goto	i2l3124
  5989                           
  5990                           ;messages.c: 42: return (-1);
  5991  0009F6  0EFF               	movlw	255
  5992  0009F8  0012               	return	
  5993  0009FA                     i2l3124:
  5994                           
  5995                           ;messages.c: 43: }
  5996                           ;messages.c: 46: qmsg->length = length;
  5997  0009FA  EE20 F001          	lfsr	2,1
  5998  0009FE  502A               	movf	send_msg@qmsg,w,c
  5999  000A00  26D9               	addwf	fsr2l,f,c
  6000  000A02  502B               	movf	send_msg@qmsg+1,w,c
  6001  000A04  22DA               	addwfc	fsr2h,f,c
  6002  000A06  C022  FFDF         	movff	send_msg@length,indf2
  6003                           
  6004                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6005  000A0A  EE20 F002          	lfsr	2,2
  6006  000A0E  502A               	movf	send_msg@qmsg,w,c
  6007  000A10  26D9               	addwf	fsr2l,f,c
  6008  000A12  502B               	movf	send_msg@qmsg+1,w,c
  6009  000A14  22DA               	addwfc	fsr2h,f,c
  6010  000A16  C023  FFDF         	movff	send_msg@msgtype,indf2
  6011                           
  6012                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6013  000A1A  0E03               	movlw	3
  6014  000A1C  242A               	addwf	send_msg@qmsg,w,c
  6015  000A1E  6E16               	movwf	i2memcpy@d1,c
  6016  000A20  0E00               	movlw	0
  6017  000A22  202B               	addwfc	send_msg@qmsg+1,w,c
  6018  000A24  6E17               	movwf	i2memcpy@d1+1,c
  6019  000A26  C025  F019         	movff	send_msg@data+1,i2memcpy@s1+1
  6020  000A2A  C024  F018         	movff	send_msg@data,i2memcpy@s1
  6021  000A2E  C027  F01A         	movff	send_msg@tlength,i2memcpy@n
  6022  000A32  C028  F01B         	movff	send_msg@tlength+1,i2memcpy@n+1
  6023  000A36  EC59  F008         	call	i2_memcpy	;wreg free
  6024                           
  6025                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6026  000A3A  EE20 F034          	lfsr	2,52
  6027  000A3E  5020               	movf	send_msg@qptr,w,c
  6028  000A40  26D9               	addwf	fsr2l,f,c
  6029  000A42  5021               	movf	send_msg@qptr+1,w,c
  6030  000A44  22DA               	addwfc	fsr2h,f,c
  6031  000A46  EE10 F034          	lfsr	1,52
  6032  000A4A  5020               	movf	send_msg@qptr,w,c
  6033  000A4C  26E1               	addwf	fsr1l,f,c
  6034  000A4E  5021               	movf	send_msg@qptr+1,w,c
  6035  000A50  22E2               	addwfc	fsr1h,f,c
  6036  000A52  50E7               	movf	indf1,w,c
  6037  000A54  6E26               	movwf	??_send_msg& (0+255),c
  6038  000A56  2826               	incf	??_send_msg,w,c
  6039  000A58  0B03               	andlw	3
  6040  000A5A  6EDF               	movwf	indf2,c
  6041                           
  6042                           ;messages.c: 59: qmsg->full = 1;
  6043  000A5C  C02A  FFD9         	movff	send_msg@qmsg,fsr2l
  6044  000A60  C02B  FFDA         	movff	send_msg@qmsg+1,fsr2h
  6045  000A64  0E01               	movlw	1
  6046  000A66  6EDF               	movwf	indf2,c
  6047                           
  6048                           ;messages.c: 60: return (1);
  6049  000A68  0E01               	movlw	1
  6050  000A6A  0012               	return	
  6051  000A6C                     __end_of_send_msg:
  6052                           	opt stack 0
  6053                           pclatu	equ	0xFFB
  6054                           pclath	equ	0xFFA
  6055                           tblptru	equ	0xFF8
  6056                           tblptrh	equ	0xFF7
  6057                           tblptrl	equ	0xFF6
  6058                           tablat	equ	0xFF5
  6059                           prodh	equ	0xFF4
  6060                           prodl	equ	0xFF3
  6061                           intcon	equ	0xFF2
  6062                           postinc0	equ	0xFEE
  6063                           fsr0h	equ	0xFEA
  6064                           fsr0l	equ	0xFE9
  6065                           wreg	equ	0xFE8
  6066                           indf1	equ	0xFE7
  6067                           postdec1	equ	0xFE5
  6068                           fsr1h	equ	0xFE2
  6069                           fsr1l	equ	0xFE1
  6070                           bsr	equ	0xFE0
  6071                           indf2	equ	0xFDF
  6072                           postinc2	equ	0xFDE
  6073                           postdec2	equ	0xFDD
  6074                           fsr2h	equ	0xFDA
  6075                           fsr2l	equ	0xFD9
  6076                           status	equ	0xFD8
  6077                           
  6078 ;; *************** function i2_memcpy *****************
  6079 ;; Defined at:
  6080 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
  6081 ;; Parameters:    Size  Location     Type
  6082 ;;  d1              2   21[COMRAM] PTR void 
  6083 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6084 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6085 ;;		 -> main@msgbuffer(11), 
  6086 ;;  s1              2   23[COMRAM] PTR const void 
  6087 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6088 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6089 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  6090 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(28), 
  6091 ;;  n               2   25[COMRAM] unsigned int 
  6092 ;; Auto vars:     Size  Location     Type
  6093 ;;  memcpy          2   29[COMRAM] PTR const unsigned char 
  6094 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6095 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6096 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  6097 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(28), 
  6098 ;;  memcpy          2   27[COMRAM] PTR unsigned char 
  6099 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6100 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6101 ;;		 -> main@msgbuffer(11), 
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  2   21[COMRAM] PTR void 
  6104 ;; Registers used:
  6105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/0
  6108 ;;		On exit  : 0/0
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6111 ;;      Params:         6       0       0       0       0
  6112 ;;      Locals:         4       0       0       0       0
  6113 ;;      Temps:          0       0       0       0       0
  6114 ;;      Totals:        10       0       0       0       0
  6115 ;;Total ram usage:       10 bytes
  6116 ;; Hardware stack levels used:    1
  6117 ;; This function calls:
  6118 ;;		Nothing
  6119 ;; This function is called by:
  6120 ;;		_send_msg
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           	psect	text39
  6125  0010B2                     __ptext39:
  6126                           	opt stack 0
  6127  0010B2                     i2_memcpy:
  6128                           	opt stack 18
  6129                           
  6130                           ;incstack = 0
  6131  0010B2  C019  F01F         	movff	i2memcpy@s1+1,i2memcpy@s+1
  6132  0010B6  C018  F01E         	movff	i2memcpy@s1,i2memcpy@s
  6133  0010BA  C017  F01D         	movff	i2memcpy@d1+1,i2memcpy@d+1
  6134  0010BE  C016  F01C         	movff	i2memcpy@d1,i2memcpy@d
  6135  0010C2  D00E               	goto	i2l3292
  6136  0010C4                     i2l3286:
  6137  0010C4  C01E  FFD9         	movff	i2memcpy@s,fsr2l
  6138  0010C8  C01F  FFDA         	movff	i2memcpy@s+1,fsr2h
  6139  0010CC  C01C  FFE1         	movff	i2memcpy@d,fsr1l
  6140  0010D0  C01D  FFE2         	movff	i2memcpy@d+1,fsr1h
  6141  0010D4  CFDF FFE7          	movff	indf2,indf1
  6142  0010D8  4A1E               	infsnz	i2memcpy@s,f,c
  6143  0010DA  2A1F               	incf	i2memcpy@s+1,f,c
  6144  0010DC  4A1C               	infsnz	i2memcpy@d,f,c
  6145  0010DE  2A1D               	incf	i2memcpy@d+1,f,c
  6146  0010E0                     i2l3292:
  6147  0010E0  061A               	decf	i2memcpy@n,f,c
  6148  0010E2  A0D8               	btfss	status,0,c
  6149  0010E4  061B               	decf	i2memcpy@n+1,f,c
  6150  0010E6  281A               	incf	i2memcpy@n& (0+255),w,c
  6151  0010E8  B4D8               	btfsc	status,2,c
  6152  0010EA  281B               	incf	(i2memcpy@n+1)& (0+255),w,c
  6153  0010EC  B4D8               	btfsc	status,2,c
  6154                           
  6155                           ;	Return value of i2_memcpy is never used
  6156  0010EE  0012               	return	
  6157  0010F0  D7E9               	goto	i2l3286
  6158  0010F2                     __end_ofi2_memcpy:
  6159                           	opt stack 0
  6160                           pclatu	equ	0xFFB
  6161                           pclath	equ	0xFFA
  6162                           tblptru	equ	0xFF8
  6163                           tblptrh	equ	0xFF7
  6164                           tblptrl	equ	0xFF6
  6165                           tablat	equ	0xFF5
  6166                           prodh	equ	0xFF4
  6167                           prodl	equ	0xFF3
  6168                           intcon	equ	0xFF2
  6169                           postinc0	equ	0xFEE
  6170                           fsr0h	equ	0xFEA
  6171                           fsr0l	equ	0xFE9
  6172                           wreg	equ	0xFE8
  6173                           indf1	equ	0xFE7
  6174                           postdec1	equ	0xFE5
  6175                           fsr1h	equ	0xFE2
  6176                           fsr1l	equ	0xFE1
  6177                           bsr	equ	0xFE0
  6178                           indf2	equ	0xFDF
  6179                           postinc2	equ	0xFDE
  6180                           postdec2	equ	0xFDD
  6181                           fsr2h	equ	0xFDA
  6182                           fsr2l	equ	0xFD9
  6183                           status	equ	0xFD8
  6184                           
  6185 ;; *************** function _SleepIfOkay *****************
  6186 ;; Defined at:
  6187 ;;		line 228 in file "../src/messages.c"
  6188 ;; Parameters:    Size  Location     Type
  6189 ;;		None
  6190 ;; Auto vars:     Size  Location     Type
  6191 ;;		None
  6192 ;; Return value:  Size  Location     Type
  6193 ;;		None               void
  6194 ;; Registers used:
  6195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/0
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6201 ;;      Params:         0       0       0       0       0
  6202 ;;      Locals:         0       0       0       0       0
  6203 ;;      Temps:          0       0       0       0       0
  6204 ;;      Totals:         0       0       0       0       0
  6205 ;;Total ram usage:        0 bytes
  6206 ;; Hardware stack levels used:    1
  6207 ;; Hardware stack levels required when called:    2
  6208 ;; This function calls:
  6209 ;;		_enter_sleep_mode
  6210 ;;		i2_check_msg
  6211 ;;		i2_in_high_int
  6212 ;;		i2_in_low_int
  6213 ;; This function is called by:
  6214 ;;		_InterruptHandlerHigh
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218                           	psect	text40
  6219  000F56                     __ptext40:
  6220                           	opt stack 0
  6221  000F56                     _SleepIfOkay:
  6222                           	opt stack 19
  6223                           
  6224                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  6225                           
  6226                           ;incstack = 0
  6227  000F56  664B               	tstfsz	_MQ_Main_Willing_to_block,c
  6228  000F58  D001               	goto	i2l2158
  6229  000F5A  0012               	return	
  6230  000F5C                     i2l2158:
  6231                           
  6232                           ;messages.c: 232: }
  6233                           ;messages.c: 235: if (in_low_int()) {
  6234  000F5C  ECCD  F008         	call	i2_in_low_int	;wreg free
  6235  000F60  5019               	movf	?i2_in_low_int+1,w,c
  6236  000F62  1018               	iorwf	?i2_in_low_int,w,c
  6237  000F64  A4D8               	btfss	status,2,c
  6238  000F66  0012               	return	
  6239                           
  6240                           ;messages.c: 237: }
  6241                           ;messages.c: 240: if (!in_high_int()) {
  6242                           
  6243                           ;messages.c: 236: return;
  6244  000F68  ECB0  F009         	call	i2_in_high_int	;wreg free
  6245  000F6C  5017               	movf	?i2_in_high_int+1,w,c
  6246  000F6E  1016               	iorwf	?i2_in_high_int,w,c
  6247  000F70  B4D8               	btfsc	status,2,c
  6248  000F72  0012               	return	
  6249                           
  6250                           ;messages.c: 242: }
  6251                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  6252                           
  6253                           ;messages.c: 241: return;
  6254  000F74  0101               	movlb	1	; () banked
  6255  000F76  0E01               	movlw	high _ToMainHigh_MQ
  6256  000F78  6E17               	movwf	i2check_msg@qptr+1,c
  6257  000F7A  0101               	movlb	1	; () banked
  6258  000F7C  0E6C               	movlw	low _ToMainHigh_MQ
  6259  000F7E  6E16               	movwf	i2check_msg@qptr,c
  6260  000F80  EC34  F009         	call	i2_check_msg	;wreg free
  6261  000F84  0900               	iorlw	0
  6262  000F86  A4D8               	btfss	status,2,c
  6263  000F88  0012               	return	
  6264                           
  6265                           ;messages.c: 249: }
  6266                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  6267                           
  6268                           ;messages.c: 248: return;
  6269  000F8A  0101               	movlb	1	; () banked
  6270  000F8C  0E01               	movlw	high _ToMainLow_MQ
  6271  000F8E  6E17               	movwf	i2check_msg@qptr+1,c
  6272  000F90  0101               	movlb	1	; () banked
  6273  000F92  0EA2               	movlw	low _ToMainLow_MQ
  6274  000F94  6E16               	movwf	i2check_msg@qptr,c
  6275  000F96  EC34  F009         	call	i2_check_msg	;wreg free
  6276  000F9A  0900               	iorlw	0
  6277  000F9C  B4D8               	btfsc	status,2,c
  6278                           
  6279                           ;messages.c: 252: }
  6280                           ;messages.c: 253: enter_sleep_mode();
  6281                           
  6282                           ;messages.c: 251: return;
  6283  000F9E  ECBA  F009         	call	_enter_sleep_mode	;wreg free
  6284  000FA2  0012               	return	
  6285  000FA4                     __end_of_SleepIfOkay:
  6286                           	opt stack 0
  6287                           pclatu	equ	0xFFB
  6288                           pclath	equ	0xFFA
  6289                           tblptru	equ	0xFF8
  6290                           tblptrh	equ	0xFF7
  6291                           tblptrl	equ	0xFF6
  6292                           tablat	equ	0xFF5
  6293                           prodh	equ	0xFF4
  6294                           prodl	equ	0xFF3
  6295                           intcon	equ	0xFF2
  6296                           postinc0	equ	0xFEE
  6297                           fsr0h	equ	0xFEA
  6298                           fsr0l	equ	0xFE9
  6299                           wreg	equ	0xFE8
  6300                           indf1	equ	0xFE7
  6301                           postdec1	equ	0xFE5
  6302                           fsr1h	equ	0xFE2
  6303                           fsr1l	equ	0xFE1
  6304                           bsr	equ	0xFE0
  6305                           indf2	equ	0xFDF
  6306                           postinc2	equ	0xFDE
  6307                           postdec2	equ	0xFDD
  6308                           fsr2h	equ	0xFDA
  6309                           fsr2l	equ	0xFD9
  6310                           status	equ	0xFD8
  6311                           
  6312 ;; *************** function i2_in_low_int *****************
  6313 ;; Defined at:
  6314 ;;		line 32 in file "../src/interrupts.c"
  6315 ;; Parameters:    Size  Location     Type
  6316 ;;		None
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;		None
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  2   23[COMRAM] int 
  6321 ;; Registers used:
  6322 ;;		wreg, status,2, status,0, cstack
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6328 ;;      Params:         2       0       0       0       0
  6329 ;;      Locals:         0       0       0       0       0
  6330 ;;      Temps:          0       0       0       0       0
  6331 ;;      Totals:         2       0       0       0       0
  6332 ;;Total ram usage:        2 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; Hardware stack levels required when called:    1
  6335 ;; This function calls:
  6336 ;;		i2_in_high_int
  6337 ;; This function is called by:
  6338 ;;		_SleepIfOkay
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           	psect	text41
  6343  00119A                     __ptext41:
  6344                           	opt stack 0
  6345  00119A                     i2_in_low_int:
  6346                           	opt stack 19
  6347                           
  6348                           ;interrupts.c: 34: if (INTCONbits.GIEL == 1) {
  6349                           
  6350                           ;incstack = 0
  6351  00119A  ACF2               	btfss	intcon,6,c	;volatile
  6352  00119C  D005               	goto	i2l2610
  6353                           
  6354                           ;interrupts.c: 35: return (0);
  6355  00119E  0E00               	movlw	0
  6356  0011A0  6E19               	movwf	?i2_in_low_int+1,c
  6357  0011A2  0E00               	movlw	0
  6358  0011A4  6E18               	movwf	?i2_in_low_int,c
  6359  0011A6  0012               	return	
  6360  0011A8                     i2l2610:
  6361  0011A8  ECB0  F009         	call	i2_in_high_int	;wreg free
  6362  0011AC  5017               	movf	?i2_in_high_int+1,w,c
  6363  0011AE  1016               	iorwf	?i2_in_high_int,w,c
  6364  0011B0  B4D8               	btfsc	status,2,c
  6365  0011B2  D005               	goto	i2l2618
  6366                           
  6367                           ;interrupts.c: 37: return (0);
  6368  0011B4  0E00               	movlw	0
  6369  0011B6  6E19               	movwf	?i2_in_low_int+1,c
  6370  0011B8  0E00               	movlw	0
  6371  0011BA  6E18               	movwf	?i2_in_low_int,c
  6372  0011BC  0012               	return	
  6373  0011BE                     i2l2618:
  6374                           
  6375                           ;interrupts.c: 39: return (1);
  6376  0011BE  0E00               	movlw	0
  6377  0011C0  6E19               	movwf	?i2_in_low_int+1,c
  6378  0011C2  0E01               	movlw	1
  6379  0011C4  6E18               	movwf	?i2_in_low_int,c
  6380  0011C6  0012               	return	
  6381  0011C8                     __end_ofi2_in_low_int:
  6382                           	opt stack 0
  6383                           pclatu	equ	0xFFB
  6384                           pclath	equ	0xFFA
  6385                           tblptru	equ	0xFF8
  6386                           tblptrh	equ	0xFF7
  6387                           tblptrl	equ	0xFF6
  6388                           tablat	equ	0xFF5
  6389                           prodh	equ	0xFF4
  6390                           prodl	equ	0xFF3
  6391                           intcon	equ	0xFF2
  6392                           postinc0	equ	0xFEE
  6393                           fsr0h	equ	0xFEA
  6394                           fsr0l	equ	0xFE9
  6395                           wreg	equ	0xFE8
  6396                           indf1	equ	0xFE7
  6397                           postdec1	equ	0xFE5
  6398                           fsr1h	equ	0xFE2
  6399                           fsr1l	equ	0xFE1
  6400                           bsr	equ	0xFE0
  6401                           indf2	equ	0xFDF
  6402                           postinc2	equ	0xFDE
  6403                           postdec2	equ	0xFDD
  6404                           fsr2h	equ	0xFDA
  6405                           fsr2l	equ	0xFD9
  6406                           status	equ	0xFD8
  6407                           
  6408 ;; *************** function i2_in_high_int *****************
  6409 ;; Defined at:
  6410 ;;		line 23 in file "../src/interrupts.c"
  6411 ;; Parameters:    Size  Location     Type
  6412 ;;		None
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;		None
  6415 ;; Return value:  Size  Location     Type
  6416 ;;                  2   21[COMRAM] int 
  6417 ;; Registers used:
  6418 ;;		wreg, status,2
  6419 ;; Tracked objects:
  6420 ;;		On entry : 0/0
  6421 ;;		On exit  : 0/0
  6422 ;;		Unchanged: 0/0
  6423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6424 ;;      Params:         2       0       0       0       0
  6425 ;;      Locals:         0       0       0       0       0
  6426 ;;      Temps:          0       0       0       0       0
  6427 ;;      Totals:         2       0       0       0       0
  6428 ;;Total ram usage:        2 bytes
  6429 ;; Hardware stack levels used:    1
  6430 ;; This function calls:
  6431 ;;		Nothing
  6432 ;; This function is called by:
  6433 ;;		_SleepIfOkay
  6434 ;;		i2_in_low_int
  6435 ;; This function uses a non-reentrant model
  6436 ;;
  6437                           
  6438                           	psect	text42
  6439  001360                     __ptext42:
  6440                           	opt stack 0
  6441  001360                     i2_in_high_int:
  6442                           	opt stack 19
  6443                           
  6444                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  6445                           
  6446                           ;incstack = 0
  6447  001360  0E00               	movlw	0
  6448  001362  AEF2               	btfss	intcon,7,c	;volatile
  6449  001364  0E01               	movlw	1
  6450  001366  6E16               	movwf	?i2_in_high_int,c
  6451  001368  6A17               	clrf	?i2_in_high_int+1,c
  6452  00136A  0012               	return	
  6453  00136C                     __end_ofi2_in_high_int:
  6454                           	opt stack 0
  6455                           pclatu	equ	0xFFB
  6456                           pclath	equ	0xFFA
  6457                           tblptru	equ	0xFF8
  6458                           tblptrh	equ	0xFF7
  6459                           tblptrl	equ	0xFF6
  6460                           tablat	equ	0xFF5
  6461                           prodh	equ	0xFF4
  6462                           prodl	equ	0xFF3
  6463                           intcon	equ	0xFF2
  6464                           postinc0	equ	0xFEE
  6465                           fsr0h	equ	0xFEA
  6466                           fsr0l	equ	0xFE9
  6467                           wreg	equ	0xFE8
  6468                           indf1	equ	0xFE7
  6469                           postdec1	equ	0xFE5
  6470                           fsr1h	equ	0xFE2
  6471                           fsr1l	equ	0xFE1
  6472                           bsr	equ	0xFE0
  6473                           indf2	equ	0xFDF
  6474                           postinc2	equ	0xFDE
  6475                           postdec2	equ	0xFDD
  6476                           fsr2h	equ	0xFDA
  6477                           fsr2l	equ	0xFD9
  6478                           status	equ	0xFD8
  6479                           
  6480 ;; *************** function i2_check_msg *****************
  6481 ;; Defined at:
  6482 ;;		line 222 in file "../src/messages.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;  qptr            2   21[COMRAM] PTR struct __msg_queue
  6485 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;		None
  6488 ;; Return value:  Size  Location     Type
  6489 ;;                  1    wreg      unsigned char 
  6490 ;; Registers used:
  6491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6492 ;; Tracked objects:
  6493 ;;		On entry : 0/0
  6494 ;;		On exit  : 0/0
  6495 ;;		Unchanged: 0/0
  6496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6497 ;;      Params:         2       0       0       0       0
  6498 ;;      Locals:         0       0       0       0       0
  6499 ;;      Temps:          1       0       0       0       0
  6500 ;;      Totals:         3       0       0       0       0
  6501 ;;Total ram usage:        3 bytes
  6502 ;; Hardware stack levels used:    1
  6503 ;; This function calls:
  6504 ;;		Nothing
  6505 ;; This function is called by:
  6506 ;;		_SleepIfOkay
  6507 ;; This function uses a non-reentrant model
  6508 ;;
  6509                           
  6510                           	psect	text43
  6511  001268                     __ptext43:
  6512                           	opt stack 0
  6513  001268                     i2_check_msg:
  6514                           	opt stack 20
  6515                           
  6516                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  6517                           
  6518                           ;incstack = 0
  6519  001268  EE20 F035          	lfsr	2,53
  6520  00126C  5016               	movf	i2check_msg@qptr,w,c
  6521  00126E  26D9               	addwf	fsr2l,f,c
  6522  001270  5017               	movf	i2check_msg@qptr+1,w,c
  6523  001272  22DA               	addwfc	fsr2h,f,c
  6524  001274  50DF               	movf	indf2,w,c
  6525  001276  6E18               	movwf	??i2_check_msg& (0+255),c
  6526  001278  5018               	movf	??i2_check_msg,w,c
  6527  00127A  0D0D               	mullw	13
  6528  00127C  50F3               	movf	prodl,w,c
  6529  00127E  2416               	addwf	i2check_msg@qptr,w,c
  6530  001280  6ED9               	movwf	fsr2l,c
  6531  001282  50F4               	movf	prodh,w,c
  6532  001284  2017               	addwfc	i2check_msg@qptr+1,w,c
  6533  001286  6EDA               	movwf	fsr2h,c
  6534  001288  50DF               	movf	indf2,w,c
  6535  00128A  0012               	return	
  6536  00128C                     __end_ofi2_check_msg:
  6537                           	opt stack 0
  6538                           pclatu	equ	0xFFB
  6539                           pclath	equ	0xFFA
  6540                           tblptru	equ	0xFF8
  6541                           tblptrh	equ	0xFF7
  6542                           tblptrl	equ	0xFF6
  6543                           tablat	equ	0xFF5
  6544                           prodh	equ	0xFF4
  6545                           prodl	equ	0xFF3
  6546                           intcon	equ	0xFF2
  6547                           postinc0	equ	0xFEE
  6548                           fsr0h	equ	0xFEA
  6549                           fsr0l	equ	0xFE9
  6550                           wreg	equ	0xFE8
  6551                           indf1	equ	0xFE7
  6552                           postdec1	equ	0xFE5
  6553                           fsr1h	equ	0xFE2
  6554                           fsr1l	equ	0xFE1
  6555                           bsr	equ	0xFE0
  6556                           indf2	equ	0xFDF
  6557                           postinc2	equ	0xFDE
  6558                           postdec2	equ	0xFDD
  6559                           fsr2h	equ	0xFDA
  6560                           fsr2l	equ	0xFD9
  6561                           status	equ	0xFD8
  6562                           
  6563 ;; *************** function _enter_sleep_mode *****************
  6564 ;; Defined at:
  6565 ;;		line 202 in file "../src/messages.c"
  6566 ;; Parameters:    Size  Location     Type
  6567 ;;		None
  6568 ;; Auto vars:     Size  Location     Type
  6569 ;;		None
  6570 ;; Return value:  Size  Location     Type
  6571 ;;		None               void
  6572 ;; Registers used:
  6573 ;;		None
  6574 ;; Tracked objects:
  6575 ;;		On entry : 0/0
  6576 ;;		On exit  : 0/0
  6577 ;;		Unchanged: 0/0
  6578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6579 ;;      Params:         0       0       0       0       0
  6580 ;;      Locals:         0       0       0       0       0
  6581 ;;      Temps:          0       0       0       0       0
  6582 ;;      Totals:         0       0       0       0       0
  6583 ;;Total ram usage:        0 bytes
  6584 ;; Hardware stack levels used:    1
  6585 ;; This function calls:
  6586 ;;		Nothing
  6587 ;; This function is called by:
  6588 ;;		_SleepIfOkay
  6589 ;; This function uses a non-reentrant model
  6590 ;;
  6591                           
  6592                           	psect	text44
  6593  001374                     __ptext44:
  6594                           	opt stack 0
  6595  001374                     _enter_sleep_mode:
  6596                           	opt stack 20
  6597                           
  6598                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  6599                           
  6600                           ;incstack = 0
  6601  001374  8ED3               	bsf	4051,7,c	;volatile
  6602  001376  0003               	sleep		;# 
  6603  001378  0012               	return	
  6604  00137A                     __end_of_enter_sleep_mode:
  6605                           	opt stack 0
  6606  0000                     pclatu	equ	0xFFB
  6607                           pclath	equ	0xFFA
  6608                           tblptru	equ	0xFF8
  6609                           tblptrh	equ	0xFF7
  6610                           tblptrl	equ	0xFF6
  6611                           tablat	equ	0xFF5
  6612                           prodh	equ	0xFF4
  6613                           prodl	equ	0xFF3
  6614                           intcon	equ	0xFF2
  6615                           postinc0	equ	0xFEE
  6616                           fsr0h	equ	0xFEA
  6617                           fsr0l	equ	0xFE9
  6618                           wreg	equ	0xFE8
  6619                           indf1	equ	0xFE7
  6620                           postdec1	equ	0xFE5
  6621                           fsr1h	equ	0xFE2
  6622                           fsr1l	equ	0xFE1
  6623                           bsr	equ	0xFE0
  6624                           indf2	equ	0xFDF
  6625                           postinc2	equ	0xFDE
  6626                           postdec2	equ	0xFDD
  6627                           fsr2h	equ	0xFDA
  6628                           fsr2l	equ	0xFD9
  6629                           status	equ	0xFD8
  6630                           pclatu	equ	0xFFB
  6631                           pclath	equ	0xFFA
  6632                           tblptru	equ	0xFF8
  6633                           tblptrh	equ	0xFF7
  6634                           tblptrl	equ	0xFF6
  6635                           tablat	equ	0xFF5
  6636                           prodh	equ	0xFF4
  6637                           prodl	equ	0xFF3
  6638                           intcon	equ	0xFF2
  6639                           postinc0	equ	0xFEE
  6640                           fsr0h	equ	0xFEA
  6641                           fsr0l	equ	0xFE9
  6642                           wreg	equ	0xFE8
  6643                           indf1	equ	0xFE7
  6644                           postdec1	equ	0xFE5
  6645                           fsr1h	equ	0xFE2
  6646                           fsr1l	equ	0xFE1
  6647                           bsr	equ	0xFE0
  6648                           indf2	equ	0xFDF
  6649                           postinc2	equ	0xFDE
  6650                           postdec2	equ	0xFDD
  6651                           fsr2h	equ	0xFDA
  6652                           fsr2l	equ	0xFD9
  6653                           status	equ	0xFD8
  6654                           
  6655                           	psect	rparam
  6656  0000                     pclatu	equ	0xFFB
  6657                           pclath	equ	0xFFA
  6658                           tblptru	equ	0xFF8
  6659                           tblptrh	equ	0xFF7
  6660                           tblptrl	equ	0xFF6
  6661                           tablat	equ	0xFF5
  6662                           prodh	equ	0xFF4
  6663                           prodl	equ	0xFF3
  6664                           intcon	equ	0xFF2
  6665                           postinc0	equ	0xFEE
  6666                           fsr0h	equ	0xFEA
  6667                           fsr0l	equ	0xFE9
  6668                           wreg	equ	0xFE8
  6669                           indf1	equ	0xFE7
  6670                           postdec1	equ	0xFE5
  6671                           fsr1h	equ	0xFE2
  6672                           fsr1l	equ	0xFE1
  6673                           bsr	equ	0xFE0
  6674                           indf2	equ	0xFDF
  6675                           postinc2	equ	0xFDE
  6676                           postdec2	equ	0xFDD
  6677                           fsr2h	equ	0xFDA
  6678                           fsr2l	equ	0xFD9
  6679                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        13
    BSS         264
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     58      99
    BANK0           128     44      68
    BANK1           256      0     216
    BANK2           256     62      62
    BANK3           244      0       0

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK2[2]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK2[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK2[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK2[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(COMRAM[3]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@ic(BANK2[28]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(COMRAM[3]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@ic(BANK2[28]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    uart_retrieve_buffer@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 12
		 -> main@uc(BANK2[12]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 12
		 -> NULL(NULL[0]), main@uc(BANK2[12]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK2[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 5
		 -> motorEncoderBuffer(COMRAM[5]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK2[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(COMRAM[3]), main@ic(BANK2[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK2[11]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(COMRAM[3]), main@ic(BANK2[28]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->_WriteTimer0
    _i2c_int_handler->_ToMainHigh_sendmsg
    _readMessages->_start_i2c_slave_reply
    _ToMainHigh_sendmsg->_send_msg
    _send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _uart_send_int_handler->_WriteUSART
    _timer1_int_handler->i1_WriteTimer1

Critical Paths under _main in BANK0

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _uart_lthread->_uart_retrieve_buffer
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    None.

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                66    66      0    8290
                                             43 BANK0      1     1      0
                                              0 BANK2     62    62      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                        _WriteTimer1
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     700
                                             18 BANK0      8     0      8
               _uart_retrieve_buffer
 ---------------------------------------------------------------------------------
 (2) _uart_retrieve_buffer                                 4     0      4     285
                                             14 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     294
                                             14 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      96
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     452
                                             18 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     452
                                             14 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     283
                                             20 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             18 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             16 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     252
                                             14 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _WriteTimer1                                          4     2      2     199
                                             14 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2227
                                             38 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2227
                                             38 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2004
                                             24 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     459
                                             14 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     375
                                             14 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0     297
                                              4 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_send_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_send_int_handler                                1     1      0      31
                                              1 COMRAM     1     1      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (7) _WriteUSART                                           1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   0     0      0     266
                      i1_WriteTimer1
 ---------------------------------------------------------------------------------
 (7) i1_WriteTimer1                                        4     2      2     266
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _InterruptHandlerHigh                                14    14      0    3602
                                              0 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (9) _timer0_int_handler                                   0     0      0      88
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (10) _WriteTimer0                                         4     2      2      88
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _i2c_int_handler                                     11    11      0    3278
                                             47 COMRAM    11    11      0
                 _ToMainHigh_sendmsg
                       _handle_start
                       _readMessages
 ---------------------------------------------------------------------------------
 (10) _readMessages                                        1     1      0     158
                                             26 COMRAM     1     1      0
              _start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (11) _start_i2c_slave_reply                               5     3      2     158
                                             21 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (10) _handle_start                                        1     1      0      31
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _ToMainHigh_sendmsg                                  4     1      3    2513
                                             43 COMRAM     4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (11) _send_msg                                           12     6      6    2160
                                             31 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) i2_memcpy                                           10     4      6     646
                                             21 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (9) _SleepIfOkay                                          0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (10) i2_in_low_int                                        2     0      2       0
                                             23 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (11) i2_in_high_int                                       2     0      2       0
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) i2_check_msg                                         3     1      2     236
                                             21 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (10) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _WriteTimer1
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _uart_lthread
     _uart_retrieve_buffer

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     i1_WriteTimer1
   _uart_send_int_handler
     _WriteUSART

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       _send_msg
         i2_memcpy
     _handle_start
     _readMessages
       _start_i2c_slave_reply
   _timer0_int_handler
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F3      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     3E      3E       8       24.2%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      D8       6       84.4%
BITBANK3            F4      0       0       9        0.0%
BANK3               F4      0       0      10        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     2C      44       4       53.1%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3A      63       1       78.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1BD      11        0.0%
DATA                 0      0     1BD      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Apr 07 12:56:39 2014

              main@uthread_data 020E        _MQ_Main_Willing_to_block 004B                     _SSPSTATbits 000FC7  
     __end_of_ToMainLow_recvmsg 1070                              bsr 000FE0                    __CFG_CP0$OFF 000000  
                           l522 1146                             l524 115E                             l525 1160  
                           l561 0B58                             l562 0B5A                             l563 0B68  
                           l564 0B6A                             l557 0B38                             l498 11EC  
                           l499 11EE                             l788 12AA            __size_of_WriteTimer0 0012  
          __size_of_WriteTimer1 0012                  _FromMainLow_MQ 0136                             wreg 000FE8  
                  __CFG_IESO$ON 000000                    ?_in_high_int 008E                ??_init_uart_recv 0090  
                   main@config1 020B                     main@config2 020C                            l3022 0B3A  
                          l3014 0B24                            l3106 0D6C                            l3060 0CC4  
                          l3144 0E52                            l3072 0D1C                            l3138 0E2E  
                          l3066 0CF0                            l3158 075A                            l3174 0820  
                          l3270 08BE                            l2704 101E                            l2910 05C0  
                          l2920 0654                            l2690 0FDA                            l2682 0FB8  
                          l2924 06A6                            l2918 0602                            l2926 06B8  
                          l2972 1148                            u2377 12AC                            i1l53 0070  
               _FromMainHigh_MQ 0100                   __CFG_FCMEN$ON 000000            _uart_retrieve_buffer 0824  
                          _buff 003B          ?_block_on_To_msgqueues 0001                            _main 04E2  
                          fsr0h 000FEA                            fsr1h 000FE2                            fsr0l 000FE9  
                          fsr2h 000FDA                            indf1 000FE7                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                     main@msgtype 0215  
                          pclat 000FFA                     i2_check_msg 1268                            prodh 000FF4  
                          prodl 000FF3           handle_start@data_read 0016                            start 00B6  
           i1WriteTimer1@timer1 0001                   __CFG_FOSC2$ON 000000       ToMainHigh_recvmsg@msgtype 00A6  
                send_msg@length 0022     __size_of_timer0_int_handler 0016                     _Delay1KTCYx 12A6  
                         ?_main 0001                   i1_WriteTimer1 132E                           _T0CON 000FD5  
                         _T1CON 000FCD                           i2l302 0160                           i2l330 03C0  
                         i2l324 0352                           i2l316 027C                           i2l286 0ACA  
                         i2l296 03B6                           i2l298 0134                   _t0thread_data 0045  
                         _RCSTA 000FAB                           _TMR0H 000FD7                           _TMR1H 000FCF  
                         _TMR0L 000FD6                           _TMR1L 000FCE                           _SPBRG 000FAF  
                         _PORTB 000F81                           _TXREG 000FAD                           _TXSTA 000FAC  
                    i2memcpy@d1 0016                      i2memcpy@s1 0018                    ?_init_queues 0001  
     __size_of_enter_sleep_mode 0006                 __end_of_in_main 102E      ToMainLow_recvmsg@maxlength 00AA  
       timer0_lthread@msgbuffer 0094         i2c_configure_slave@addr 008E                           tablat 000FF5  
         ?_uart_retrieve_buffer 008E                           status 000FD8                __end_ofi2_memcpy 10F2  
                WriteUSART@data 0001                 __initialization 0EBA                    __end_of_main 06EE  
   __size_of_timer1_int_handler 001A      __size_of_ToMainLow_recvmsg 0042           __size_ofi2_in_low_int 002E  
                ?i1_WriteTimer1 0001                          ??_main 00AB                 send_msg@msgtype 0023  
                 __activetblptr 000002                 send_msg@tlength 0027            __end_of_handle_start 0B04  
                 ?_readMessages 0001                          i1l3300 0BDA                          i1l3310 0066  
                        i1l3256 12E0                          i2l3124 09FA                          i2l3212 091C  
                        i2l2158 0F5C                          i2l3232 0AE0                          i2l3216 0976  
                    _OpenTimer0 11C8                          i2l2610 11A8                          i2l3234 0AF2  
                    _OpenTimer1 112C                  __CFG_WDTEN$OFF 000000                          i2l2720 0C68  
                        i2l2618 11BE                          i2l2802 02CC                          i2l2714 0C5E  
                        i2l3292 10E0                          i2l2804 02FC                          i2l3286 10C4  
                        i2l2830 0390                          i2l2742 012E                          i2l2808 0306  
                        i2l2760 0186                          i2l2736 011E                          i2l2842 0408  
                        i2l2762 01A6                          i2l2860 04D6                          i2l2852 046E  
                        i2l2836 03C4                          i2l2780 0212                          i2l2772 01D2  
                        i2l2778 01E4     __end_of_i2c_configure_slave 1242                   ??_SleepIfOkay 001A  
                        _OSCCON 000FD3                          _SPBRGH 000FB0                          _SSPADD 000FC8  
                        _SSPBUF 000FC9  __size_of_start_i2c_slave_reply 00BC   __end_of_start_i2c_slave_reply 09C2  
            timer0_lthread@tptr 008E                    i2_in_low_int 119A                  __CFG_XINST$OFF 000000  
            __size_of_OpenUSART 0092                 _i2c_int_handler 00BA                OpenTimer0@config 008E  
                        _ic_ptr 0062                   main@msgbuffer 0200                __end_of_init_i2c 0F56  
              OpenTimer1@config 008E                          _length 004E                          _memcpy 0E0C  
                        clear_0 0EC0                          clear_1 0ECC                          clear_2 0ED8  
                        _uc_ptr 00C2                          main@ic 0222                          _status 004F  
                        main@uc 0216                __end_of_recv_msg 0824     start_i2c_slave_reply@length 001A  
                     ??_in_main 0094                __end_of_send_msg 0A6C                    __pdataCOMRAM 0055  
                ??_readMessages 001B         i2c_int_handler@i2c_data 0038                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                     init_queue@i 0091  
      ToMainLow_recvmsg@msgtype 00A6            __size_of_in_high_int 0012          ??_uart_retrieve_buffer 0092  
               __CFG_FOSC$HSPLL 000000                      __accesstop 0080         __end_of__initialization 0EFE  
    __end_of_ToMainHigh_recvmsg 10B2      __end_of_ToMainHigh_sendmsg 1268  __size_of_uart_send_int_handler 008E  
 __end_of_uart_send_int_handler 0C24     __end_of_init_timer1_lthread 130A             __end_of_SleepIfOkay 0FA4  
                    _WriteUSART 12D2                  __pcstackCOMRAM 0001          __size_ofi2_in_high_int 000C  
               ??i1_WriteTimer1 0003              __size_of_check_msg 0036   __size_of_InterruptHandlerHigh 0C9E  
   __end_of_InterruptHandlerLow 00B6                       ?i2_memcpy 0016                   _ToMainHigh_MQ 016C  
              _enter_sleep_mode 1374              _motorEncoderBuffer 0050               __end_of_OpenUSART 0B96  
                 check_msg@qptr 008E         ??_block_on_To_msgqueues 0094            __size_of_init_queues 006E  
                    __pbssBANK0 00AC                      __pbssBANK1 0100                     ?_OpenTimer0 0001  
                   ?_OpenTimer1 0001                      __pnvCOMRAM 0062         __end_of_i2c_int_handler 04E2  
                  ?i2_check_msg 0016               recv_msg@maxlength 009A                 recv_msg@msgtype 009B  
               recv_msg@tlength 00A2           __size_of_handle_start 0098                    ?_Delay1KTCYx 0001  
              WriteTimer0@timer 0018                         ?_memcpy 008E                WriteTimer1@timer 0090  
                 ??_WriteTimer0 0018                   ??_WriteTimer1 0090         __size_of_timer0_lthread 0012  
                    _bufferFlag 00C0                      ??i2_memcpy 001C                   i2_in_high_int 1360  
                       _SSPCON1 000FC6                         _SSPCON2 000FC5                         _SSPSTAT 000FC7  
             __end_of_check_msg 119A                       ?_init_i2c 008E                     _SleepIfOkay 0F56  
                    _maxTickOne 0059                       ?_recv_msg 0098                      _in_low_int 0FA4  
                  _handle_start 0A6C                         __Hparam 0000                       ?_send_msg 0020  
                    _left_state 0057            __end_of_readMessages 112C                         __Lparam 0000  
    __end_of_timer0_int_handler 12D2                     ?_WriteUSART 0001                init_uart_recv@uc 008E  
               __CFG_STVREN$OFF 000000                         __pcinit 0EBA                 __size_of_memcpy 005E  
                    _init_queue 0D24                         __ramtop 0400             __size_of_OpenTimer0 002A  
           __size_of_OpenTimer1 0038                         __ptext0 04E2                         __ptext1 0E6A  
                       __ptext2 0824                         __ptext3 12E6                         __ptext4 11F2  
                       __ptext5 12F8                         __ptext6 0D9E                         __ptext7 0D24  
                       __ptext8 0F08                         __ptext9 121A                       _T0CONbits 000FD5  
                       _in_main 0FEA                       _T1CONbits 000FCD             __end_of_WriteTimer0 1352  
           __end_of_WriteTimer1 132E                  ?i2_in_high_int 0016   uart_retrieve_buffer@msgbuffer 0090  
                __pintcode_body 0C24            end_of_initialization 0EFE                         memcpy@d 0094  
                       memcpy@n 0092                         memcpy@s 0096                      ??_init_i2c 0090  
   i2c_int_handler@data_written 0035                   __Lmediumconst 0000                         int_func 0C24  
                 ?_uart_lthread 0092         __size_of_init_uart_recv 0028                ?_i2c_int_handler 0001  
                    ??_recv_msg 009F                      ??_send_msg 0026                  main@portconfig 020D  
    __end_of_timer1_int_handler 12A6                       _RCSTAbits 000FAB                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc2 000FDE  
     ToMainHigh_sendmsg@msgtype 002C                  _last_reg_recvd 004D                       _TRISCbits 000F94  
           __size_of_WriteUSART 0014                  ??_uart_lthread 009A                       _TXSTAbits 000FAC  
                    main@length 0214                     ?_in_low_int 0090              i1WriteTimer1@timer 0003  
         timer0_lthread@msgtype 0090           _start_i2c_slave_reply 0906    __size_of_i2c_configure_slave 0028  
          __size_ofi2_check_msg 0024        __end_of_enter_sleep_mode 137A              _ToMainHigh_recvmsg 1070  
            _ToMainHigh_sendmsg 1242                     _BAUDCONbits 000FB8                   __pidataCOMRAM 1352  
                _timer0_lthread 12E6                     ?_init_queue 008E                       i2memcpy@d 001C  
                   _WriteTimer0 1340                     _WriteTimer1 131C                       i2memcpy@n 001A  
                     i2memcpy@s 001E                  __end_of_memcpy 0E6A               _enable_interrupts 136C  
          __size_of_Delay1KTCYx 0016             ?_ToMainHigh_recvmsg 00A6                 ??i2_in_high_int 0018  
      i2c_int_handler@data_read 003A             ?_ToMainHigh_sendmsg 002C              ?_enable_interrupts 0001  
           start_initialization 0EBA                   ??_in_high_int 0090               __size_ofi2_memcpy 0040  
           ??_enable_interrupts 008E                    ??_OpenTimer0 008E                    ??_OpenTimer1 008E  
__size_of_block_on_To_msgqueues 007E   __end_of_block_on_To_msgqueues 0D24   __size_of_uart_retrieve_buffer 00E2  
                     _OpenUSART 0B04           __size_of_readMessages 003A    __end_of_InterruptHandlerHigh 0CA6  
                    init_i2c@ic 008E            ??_ToMainHigh_recvmsg 00AA            ??_ToMainHigh_sendmsg 002F  
         _uart_send_int_handler 0B96          __end_of_timer0_lthread 12F8        i2c_int_handler@error_buf 0032  
     __end_of_enable_interrupts 1374                        ??_memcpy 0094           __end_ofi1_WriteTimer1 1340  
  __size_of_init_timer1_lthread 0012              __end_of_OpenTimer0 11F2              __end_of_OpenTimer1 1164  
      i2c_int_handler@msg_ready 0039                     __pbssCOMRAM 003B                   ??_init_queues 0092  
                 __pcstackBANK0 0080                   __pcstackBANK2 0200             __size_of_in_low_int 0046  
                  _readMessages 10F2        start_i2c_slave_reply@msg 0016             __CFG_CCP2MX$DEFAULT 000000  
               Delay1KTCYx@unit 008E    __size_of_InterruptHandlerLow 009E             __end_of_in_high_int 131C  
                    ?_OpenUSART 008E                    ?_SleepIfOkay 0001           ToMainLow_recvmsg@data 00A8  
                  _ToMainLow_MQ 01A2             __size_of_init_queue 007A                  _init_uart_recv 11F2  
                     _check_msg 1164                       __pnvBANK0 00C2          ?_start_i2c_slave_reply 0016  
             __size_of_init_i2c 004E                    recv_msg@data 009D                    ??_WriteUSART 0001  
                  recv_msg@qmsg 00A4                    recv_msg@slot 00A1                    recv_msg@qptr 0098  
             __size_of_recv_msg 0136                       __pintcode 0008               __size_of_send_msg 00AA  
               ?_timer0_lthread 008E                     __pintcodelo 0018          ToMainHigh_recvmsg@data 00A8  
          __end_of_uart_lthread 0EBA      i2c_int_handler@msg_to_send 0037                        ?_in_main 0092  
             WriteTimer0@timer0 0016              _timer0_int_handler 12BC               WriteTimer1@timer1 008E  
           uart_lthread@msgtype 0094                       _fwd_state 0055      uart_retrieve_buffer@length 008E  
           ?_timer0_int_handler 0001              __end_of_WriteUSART 12E6                uart_lthread@uptr 0092  
        __end_of_init_uart_recv 121A             __end_of_init_queues 0E0C                        _LATCbits 000F8B  
               i2check_msg@qptr 0016                      ?_check_msg 008E                        _IPR1bits 000F9F  
                      _PIE1bits 000F9D                       _msgbuffer 00AC                   ?i2_in_low_int 0018  
                      _PIR1bits 000F9E          ?_uart_send_int_handler 0001          ToMainHigh_sendmsg@data 002D  
                     _rev_state 005D                        _RCONbits 000FD0                __CFG_WDTPS$32768 000000  
          ??_timer0_int_handler 001A      __size_of_enable_interrupts 0008                   _timer0Counter 0047  
                 _timer1Counter 0049            timer0_lthread@length 0092              _timer1_int_handler 128C  
          _InterruptHandlerHigh 0008                        i2_memcpy 10B2            timer0_lthread@msgval 0096  
                   _in_high_int 130A                    send_msg@data 0024             _i2c_configure_slave 121A  
                  send_msg@qmsg 002A                    send_msg@slot 0029                    send_msg@qptr 0020  
         uart_lthread@msgbuffer 0098                       copy_data0 0EF2             ?_timer1_int_handler 0001  
               ?_init_uart_recv 008E                     ??_OpenUSART 0090                     _maxTickZero 005B  
               OpenUSART@config 0093                  ??i2_in_low_int 001A                    ??_in_low_int 0092  
                      __Hrparam 0000            ?_i2c_configure_slave 0001                        __Lrparam 0000  
             ?_enter_sleep_mode 0001            ??_timer1_int_handler 0005        __size_of_i2c_int_handler 0428  
            ??_enter_sleep_mode 0016                    ??_init_queue 0090                    ?_WriteTimer0 0016  
                  ?_WriteTimer1 008E               main@t0thread_data 0210           ?_InterruptHandlerHigh 0001  
              __size_of_in_main 0044     ToMainHigh_recvmsg@maxlength 00AA         init_timer1_lthread@tptr 008E  
                   _init_queues 0D9E              __end_of_in_low_int 0FEA                        __ptext10 136C  
                      __ptext11 0CA6                        __ptext20 06EE                        __ptext12 0FEA  
                      __ptext21 0E0C                        __ptext13 0FA4                        __ptext22 0B04  
                      __ptext14 130A                        __ptext31 12BC                        __ptext23 112C  
                      __ptext15 1164                        __ptext40 0F56                        __ptext32 1340  
                      __ptext24 11C8                        __ptext16 12A6                        __ptext41 119A  
                      __ptext33 00BA                        __ptext17 131C                        __ptext42 1360  
                      __ptext34 10F2                        __ptext26 0B96                        __ptext18 102E  
                      __ptext43 1268                        __ptext35 0906                        __ptext27 12D2  
                      __ptext19 1070                        __ptext44 1374                        __ptext36 0A6C  
                      __ptext28 128C                        __ptext37 1242                        __ptext29 132E  
                      __ptext38 09C2                        __ptext39 10B2              uart_lthread@length 0096  
                      _init_i2c 0F08             _init_timer1_lthread 12F8                   __size_of_main 020C  
                 ??i2_check_msg 0018               main@t1thread_data 0212                     ??_check_msg 0090  
            __end_of_init_queue 0D9E            __size_of_SleepIfOkay 004E                        _recv_msg 06EE  
         ??_i2c_configure_slave 008E                        _send_msg 09C2                  init_queue@qptr 008E  
         __size_of_uart_lthread 0050                   ??_Delay1KTCYx 008E    __end_of_uart_retrieve_buffer 0906  
           _InterruptHandlerLow 0018            ?_init_timer1_lthread 008E                     _OSCTUNEbits 000F9B  
                    _INTCONbits 000FF2                  OpenUSART@spbrg 008E                        memcpy@d1 008E  
                      memcpy@s1 0090           __end_ofi2_in_high_int 136C    i2c_int_handler@overrun_error 0036  
                      intlevel1 0000                        intlevel2 0000            ?_InterruptHandlerLow 0001  
                  _msgtype_moto 0061         ??_start_i2c_slave_reply 0018                     _right_state 005F  
                  _uart_lthread 0E6A           _block_on_To_msgqueues 0CA6                   ?_handle_start 0001  
              ??_timer0_lthread 0096     __size_of_ToMainHigh_recvmsg 0042     __size_of_ToMainHigh_sendmsg 0026  
                    _OSCCONbits 000FD3        ToMainHigh_sendmsg@length 002F             __end_ofi2_check_msg 128C  
         ??_init_timer1_lthread 0090          ??_InterruptHandlerHigh 0080               _ToMainLow_recvmsg 102E  
          __end_ofi2_in_low_int 11C8              ?_ToMainLow_recvmsg 00A6             __end_of_Delay1KTCYx 12BC  
             ??_i2c_int_handler 0030                     _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5  
         ??_InterruptHandlerLow 0005             ??_ToMainLow_recvmsg 00AA          __size_ofi1_WriteTimer1 0012  
       ??_uart_send_int_handler 0002                  ??_handle_start 0016                    _USART_Status 004C  
