

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Sat Mar 15 23:16:17 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    71                           	psect	param0,global,class=BANK0,space=1,delta=1
    72  0000                     _INTCONbits	set	4082
    73  0000                     _IPR1bits	set	3999
    74  0000                     _LATB	set	3978
    75  0000                     _LATBbits	set	3978
    76  0000                     _OSCCON	set	4051
    77  0000                     _OSCCONbits	set	4051
    78  0000                     _OSCTUNEbits	set	3995
    79  0000                     _PIE1bits	set	3997
    80  0000                     _PIR1bits	set	3998
    81  0000                     _RCONbits	set	4048
    82  0000                     _RCSTA	set	4011
    83  0000                     _RCSTAbits	set	4011
    84  0000                     _SPBRG	set	4015
    85  0000                     _SPBRGH	set	4016
    86  0000                     _SSPADD	set	4040
    87  0000                     _SSPBUF	set	4041
    88  0000                     _SSPCON1	set	4038
    89  0000                     _SSPCON1bits	set	4038
    90  0000                     _SSPCON2	set	4037
    91  0000                     _SSPCON2bits	set	4037
    92  0000                     _SSPSTAT	set	4039
    93  0000                     _SSPSTATbits	set	4039
    94  0000                     _T0CON	set	4053
    95  0000                     _T0CONbits	set	4053
    96  0000                     _T1CON	set	4045
    97  0000                     _T1CONbits	set	4045
    98  0000                     _TMR0H	set	4055
    99  0000                     _TMR0L	set	4054
   100  0000                     _TMR1H	set	4047
   101  0000                     _TMR1L	set	4046
   102  0000                     _TRISB	set	3987
   103  0000                     _TRISCbits	set	3988
   104  0000                     _TXREG	set	4013
   105  0000                     _TXSTA	set	4012
   106  0000                     _TXSTAbits	set	4012
   107                           
   108                           	psect	nvCOMRAM
   109  000053                     __pnvCOMRAM:
   110                           	opt stack 0
   111  000053                     _ic_ptr:
   112                           	opt stack 0
   113  000053                     	ds	2
   114                           
   115                           	psect	nvBANK0
   116  0000E9                     __pnvBANK0:
   117                           	opt stack 0
   118  0000E9                     _uc_ptr:
   119                           	opt stack 0
   120  0000E9                     	ds	2
   121                           
   122                           ; #config settings
   123  0000                     
   124                           	psect	cinit
   125  001972                     __pcinit:
   126                           	opt stack 0
   127  001972                     start_initialization:
   128                           	opt stack 0
   129  001972                     __initialization:
   130                           	opt stack 0
   131                           
   132                           ; Clear objects allocated to BANK1 (164 bytes)
   133  001972  EE01  F000         	lfsr	0,__pbssBANK1
   134  001976  0EA4               	movlw	164
   135  001978                     clear_0:
   136  001978  6AEE               	clrf	postinc0,c
   137  00197A  06E8               	decf	wreg,f,c
   138  00197C  E1FD               	bnz	clear_0
   139                           
   140                           ; Clear objects allocated to BANK0 (54 bytes)
   141  00197E  EE00  F080         	lfsr	0,__pbssBANK0
   142  001982  0E36               	movlw	54
   143  001984                     clear_1:
   144  001984  6AEE               	clrf	postinc0,c
   145  001986  06E8               	decf	wreg,f,c
   146  001988  E1FD               	bnz	clear_1
   147                           
   148                           ; Clear objects allocated to COMRAM (36 bytes)
   149  00198A  EE00  F02F         	lfsr	0,__pbssCOMRAM
   150  00198E  0E24               	movlw	36
   151  001990                     clear_2:
   152  001990  6AEE               	clrf	postinc0,c
   153  001992  06E8               	decf	wreg,f,c
   154  001994  E1FD               	bnz	clear_2
   155  001996                     end_of_initialization:
   156                           	opt stack 0
   157  001996                     __end_of__initialization:
   158                           	opt stack 0
   159  001996  0E00               	movlw	low (__Lmediumconst shr (0+16))
   160  001998  6EF8               	movwf	tblptru,c
   161  00199A  0100               	movlb	0
   162  00199C  EFE3  F002         	goto	_main	;jump to C main() function
   163                           tblptru	equ	0xFF8
   164                           postinc0	equ	0xFEE
   165                           wreg	equ	0xFE8
   166                           
   167                           	psect	bssCOMRAM
   168  00002F                     __pbssCOMRAM:
   169                           	opt stack 0
   170  00002F                     _msgbuffer:
   171                           	opt stack 0
   172  00002F                     	ds	20
   173  000043                     _buff:
   174                           	opt stack 0
   175  000043                     	ds	10
   176  00004D                     _MQ_Main_Willing_to_block:
   177                           	opt stack 0
   178  00004D                     	ds	1
   179  00004E                     _USART_Status:
   180                           	opt stack 0
   181  00004E                     	ds	1
   182  00004F                     _last_reg_recvd:
   183                           	opt stack 0
   184  00004F                     	ds	1
   185  000050                     _length:
   186                           	opt stack 0
   187  000050                     	ds	1
   188  000051                     _msgtype:
   189                           	opt stack 0
   190  000051                     	ds	1
   191  000052                     _status:
   192                           	opt stack 0
   193  000052                     	ds	1
   194                           tblptru	equ	0xFF8
   195                           postinc0	equ	0xFEE
   196                           wreg	equ	0xFE8
   197                           
   198                           	psect	bssBANK0
   199  000080                     __pbssBANK0:
   200                           	opt stack 0
   201  000080                     _ToMainLow_MQ:
   202                           	opt stack 0
   203  000080                     	ds	54
   204                           tblptru	equ	0xFF8
   205                           postinc0	equ	0xFEE
   206                           wreg	equ	0xFE8
   207                           
   208                           	psect	bssBANK1
   209  000100                     __pbssBANK1:
   210                           	opt stack 0
   211  000100                     _bufferFlag:
   212                           	opt stack 0
   213  000100                     	ds	2
   214  000102                     _FromMainHigh_MQ:
   215                           	opt stack 0
   216  000102                     	ds	54
   217  000138                     _FromMainLow_MQ:
   218                           	opt stack 0
   219  000138                     	ds	54
   220  00016E                     _ToMainHigh_MQ:
   221                           	opt stack 0
   222  00016E                     	ds	54
   223                           tblptru	equ	0xFF8
   224                           postinc0	equ	0xFEE
   225                           wreg	equ	0xFE8
   226                           
   227                           	psect	cstackBANK2
   228  000200                     __pcstackBANK2:
   229                           	opt stack 0
   230  000200                     main@msgbuffer:
   231                           	opt stack 0
   232                           
   233                           ; 11 bytes @ 0x0
   234  000200                     	ds	11
   235  00020B                     main@config1:
   236                           	opt stack 0
   237                           
   238                           ; 1 bytes @ 0xB
   239  00020B                     	ds	1
   240  00020C                     main@config2:
   241                           	opt stack 0
   242                           
   243                           ; 1 bytes @ 0xC
   244  00020C                     	ds	1
   245  00020D                     main@portconfig:
   246                           	opt stack 0
   247                           
   248                           ; 1 bytes @ 0xD
   249  00020D                     	ds	1
   250  00020E                     main@uthread_data:
   251                           	opt stack 0
   252                           
   253                           ; 2 bytes @ 0xE
   254  00020E                     	ds	2
   255  000210                     main@t0thread_data:
   256                           	opt stack 0
   257                           
   258                           ; 2 bytes @ 0x10
   259  000210                     	ds	2
   260  000212                     main@t1thread_data:
   261                           	opt stack 0
   262                           
   263                           ; 2 bytes @ 0x12
   264  000212                     	ds	2
   265  000214                     main@uc:
   266                           	opt stack 0
   267                           
   268                           ; 6 bytes @ 0x14
   269  000214                     	ds	6
   270  00021A                     main@length:
   271                           	opt stack 0
   272                           
   273                           ; 1 bytes @ 0x1A
   274  00021A                     	ds	1
   275  00021B                     main@msgtype:
   276                           	opt stack 0
   277                           
   278                           ; 1 bytes @ 0x1B
   279  00021B                     	ds	1
   280  00021C                     main@ic:
   281                           	opt stack 0
   282                           
   283                           ; 28 bytes @ 0x1C
   284  00021C                     	ds	28
   285                           tblptru	equ	0xFF8
   286                           postinc0	equ	0xFEE
   287                           wreg	equ	0xFE8
   288                           
   289                           	psect	cstackBANK1
   290  0001A4                     __pcstackBANK1:
   291                           	opt stack 0
   292  0001A4                     ?_in_high_int:
   293                           	opt stack 0
   294  0001A4                     ?___lwmod:
   295                           	opt stack 0
   296  0001A4                     i2c_configure_slave@addr:
   297                           	opt stack 0
   298  0001A4                     OpenTimer0@config:
   299                           	opt stack 0
   300  0001A4                     OpenTimer1@config:
   301                           	opt stack 0
   302  0001A4                     Delay1KTCYx@unit:
   303                           	opt stack 0
   304  0001A4                     init_queue@qptr:
   305                           	opt stack 0
   306  0001A4                     check_msg@qptr:
   307                           	opt stack 0
   308  0001A4                     init_i2c@ic:
   309                           	opt stack 0
   310  0001A4                     init_uart_recv@uc:
   311                           	opt stack 0
   312  0001A4                     uart_retrieve_buffer@length:
   313                           	opt stack 0
   314  0001A4                     timer0_lthread@tptr:
   315                           	opt stack 0
   316  0001A4                     init_timer1_lthread@tptr:
   317                           	opt stack 0
   318  0001A4                     OpenUSART@spbrg:
   319                           	opt stack 0
   320  0001A4                     ___lwmod@dividend:
   321                           	opt stack 0
   322  0001A4                     memcpy@d1:
   323                           	opt stack 0
   324                           
   325                           ; 2 bytes @ 0x0
   326  0001A4                     	ds	2
   327  0001A6                     ??_OpenUSART:
   328  0001A6                     ??_init_queue:
   329  0001A6                     ??_check_msg:
   330  0001A6                     ?_in_low_int:
   331                           	opt stack 0
   332  0001A6                     uart_retrieve_buffer@msgbuffer:
   333                           	opt stack 0
   334  0001A6                     timer0_lthread@msgtype:
   335                           	opt stack 0
   336  0001A6                     ___lwmod@divisor:
   337                           	opt stack 0
   338  0001A6                     memcpy@s1:
   339                           	opt stack 0
   340                           
   341                           ; 2 bytes @ 0x2
   342  0001A6                     	ds	1
   343  0001A7                     init_queue@i:
   344                           	opt stack 0
   345                           
   346                           ; 1 bytes @ 0x3
   347  0001A7                     	ds	1
   348  0001A8                     ??_init_queues:
   349  0001A8                     ??_uart_retrieve_buffer:
   350  0001A8                     ??___lwmod:
   351  0001A8                     ?_in_main:
   352                           	opt stack 0
   353  0001A8                     timer0_lthread@length:
   354                           	opt stack 0
   355  0001A8                     memcpy@n:
   356                           	opt stack 0
   357                           
   358                           ; 2 bytes @ 0x4
   359  0001A8                     	ds	1
   360  0001A9                     OpenUSART@config:
   361                           	opt stack 0
   362  0001A9                     ___lwmod@counter:
   363                           	opt stack 0
   364                           
   365                           ; 1 bytes @ 0x5
   366  0001A9                     	ds	1
   367  0001AA                     ??_block_on_To_msgqueues:
   368  0001AA                     timer0_lthread@msgbuffer:
   369                           	opt stack 0
   370  0001AA                     memcpy@d:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x6
   374  0001AA                     	ds	1
   375  0001AB                     uart_retrieve_buffer@i:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0x7
   379  0001AB                     	ds	1
   380  0001AC                     timer0_lthread@msgval:
   381                           	opt stack 0
   382  0001AC                     memcpy@s:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0x8
   386  0001AC                     	ds	1
   387  0001AD                     uart_lthread@uptr:
   388                           	opt stack 0
   389                           
   390                           ; 2 bytes @ 0x9
   391  0001AD                     	ds	1
   392  0001AE                     send_msg@qptr:
   393                           	opt stack 0
   394  0001AE                     recv_msg@qptr:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0xA
   398  0001AE                     	ds	1
   399  0001AF                     uart_lthread@msgtype:
   400                           	opt stack 0
   401                           
   402                           ; 2 bytes @ 0xB
   403  0001AF                     	ds	1
   404  0001B0                     send_msg@length:
   405                           	opt stack 0
   406  0001B0                     recv_msg@maxlength:
   407                           	opt stack 0
   408                           
   409                           ; 1 bytes @ 0xC
   410  0001B0                     	ds	1
   411  0001B1                     send_msg@msgtype:
   412                           	opt stack 0
   413  0001B1                     recv_msg@msgtype:
   414                           	opt stack 0
   415  0001B1                     uart_lthread@length:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0xD
   419  0001B1                     	ds	1
   420  0001B2                     send_msg@data:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0xE
   424  0001B2                     	ds	1
   425  0001B3                     recv_msg@data:
   426                           	opt stack 0
   427  0001B3                     uart_lthread@msgbuffer:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0xF
   431  0001B3                     	ds	1
   432  0001B4                     ??_send_msg:
   433                           
   434                           ; 0 bytes @ 0x10
   435  0001B4                     	ds	1
   436  0001B5                     ??_recv_msg:
   437  0001B5                     send_msg@tlength:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x11
   441  0001B5                     	ds	2
   442  0001B7                     send_msg@slot:
   443                           	opt stack 0
   444  0001B7                     recv_msg@slot:
   445                           	opt stack 0
   446                           
   447                           ; 1 bytes @ 0x13
   448  0001B7                     	ds	1
   449  0001B8                     send_msg@qmsg:
   450                           	opt stack 0
   451  0001B8                     recv_msg@tlength:
   452                           	opt stack 0
   453                           
   454                           ; 2 bytes @ 0x14
   455  0001B8                     	ds	2
   456  0001BA                     FromMainHigh_sendmsg@msgtype:
   457                           	opt stack 0
   458  0001BA                     recv_msg@qmsg:
   459                           	opt stack 0
   460                           
   461                           ; 2 bytes @ 0x16
   462  0001BA                     	ds	1
   463  0001BB                     FromMainHigh_sendmsg@data:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x17
   467  0001BB                     	ds	1
   468  0001BC                     ToMainLow_recvmsg@msgtype:
   469                           	opt stack 0
   470  0001BC                     ToMainHigh_recvmsg@msgtype:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x18
   474  0001BC                     	ds	1
   475  0001BD                     FromMainHigh_sendmsg@length:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0x19
   479  0001BD                     	ds	1
   480  0001BE                     ToMainLow_recvmsg@data:
   481                           	opt stack 0
   482  0001BE                     ToMainHigh_recvmsg@data:
   483                           	opt stack 0
   484  0001BE                     timer1_lthread@tptr:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x1A
   488  0001BE                     	ds	2
   489  0001C0                     ToMainLow_recvmsg@maxlength:
   490                           	opt stack 0
   491  0001C0                     ToMainHigh_recvmsg@maxlength:
   492                           	opt stack 0
   493  0001C0                     timer1_lthread@msgtype:
   494                           	opt stack 0
   495                           
   496                           ; 2 bytes @ 0x1C
   497  0001C0                     	ds	2
   498  0001C2                     timer1_lthread@length:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0x1E
   502  0001C2                     	ds	2
   503  0001C4                     timer1_lthread@msgbuffer:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x20
   507  0001C4                     	ds	2
   508  0001C6                     ??_timer1_lthread:
   509                           
   510                           ; 0 bytes @ 0x22
   511  0001C6                     	ds	1
   512  0001C7                     timer1_lthread@retval:
   513                           	opt stack 0
   514                           
   515                           ; 1 bytes @ 0x23
   516  0001C7                     	ds	1
   517  0001C8                     ??_main:
   518                           
   519                           ; 0 bytes @ 0x24
   520  0001C8                     	ds	1
   521                           tblptru	equ	0xFF8
   522                           postinc0	equ	0xFEE
   523                           wreg	equ	0xFE8
   524                           
   525                           	psect	cstackBANK0
   526  0000B6                     __pcstackBANK0:
   527                           	opt stack 0
   528  0000B6                     ?i2_in_high_int:
   529                           	opt stack 0
   530  0000B6                     handle_start@data_read:
   531                           	opt stack 0
   532  0000B6                     start_i2c_slave_reply@msg:
   533                           	opt stack 0
   534  0000B6                     WriteTimer0@timer0:
   535                           	opt stack 0
   536  0000B6                     i2check_msg@qptr:
   537                           	opt stack 0
   538  0000B6                     i2memcpy@d1:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x0
   542  0000B6                     	ds	2
   543  0000B8                     ??_start_i2c_slave_reply:
   544  0000B8                     ??i2_check_msg:
   545  0000B8                     ?i2_in_low_int:
   546                           	opt stack 0
   547  0000B8                     WriteTimer0@timer:
   548                           	opt stack 0
   549  0000B8                     i2memcpy@s1:
   550                           	opt stack 0
   551                           
   552                           ; 2 bytes @ 0x2
   553  0000B8                     	ds	2
   554  0000BA                     start_i2c_slave_reply@length:
   555                           	opt stack 0
   556  0000BA                     i2memcpy@n:
   557                           	opt stack 0
   558                           
   559                           ; 2 bytes @ 0x4
   560  0000BA                     	ds	1
   561  0000BB                     ??_readMessages:
   562                           
   563                           ; 0 bytes @ 0x5
   564  0000BB                     	ds	1
   565  0000BC                     i2memcpy@d:
   566                           	opt stack 0
   567  0000BC                     readMessages@buf:
   568                           	opt stack 0
   569                           
   570                           ; 5 bytes @ 0x6
   571  0000BC                     	ds	2
   572  0000BE                     i2memcpy@s:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0x8
   576  0000BE                     	ds	2
   577  0000C0                     i2send_msg@qptr:
   578                           	opt stack 0
   579  0000C0                     i2recv_msg@qptr:
   580                           	opt stack 0
   581                           
   582                           ; 2 bytes @ 0xA
   583  0000C0                     	ds	2
   584  0000C2                     i2send_msg@length:
   585                           	opt stack 0
   586  0000C2                     i2recv_msg@maxlength:
   587                           	opt stack 0
   588                           
   589                           ; 1 bytes @ 0xC
   590  0000C2                     	ds	1
   591  0000C3                     i2send_msg@msgtype:
   592                           	opt stack 0
   593  0000C3                     i2recv_msg@msgtype:
   594                           	opt stack 0
   595                           
   596                           ; 2 bytes @ 0xD
   597  0000C3                     	ds	1
   598  0000C4                     i2send_msg@data:
   599                           	opt stack 0
   600                           
   601                           ; 2 bytes @ 0xE
   602  0000C4                     	ds	1
   603  0000C5                     i2recv_msg@data:
   604                           	opt stack 0
   605                           
   606                           ; 2 bytes @ 0xF
   607  0000C5                     	ds	1
   608  0000C6                     ??i2_send_msg:
   609                           
   610                           ; 0 bytes @ 0x10
   611  0000C6                     	ds	1
   612  0000C7                     ??i2_recv_msg:
   613  0000C7                     i2send_msg@tlength:
   614                           	opt stack 0
   615                           
   616                           ; 2 bytes @ 0x11
   617  0000C7                     	ds	2
   618  0000C9                     i2send_msg@slot:
   619                           	opt stack 0
   620  0000C9                     i2recv_msg@slot:
   621                           	opt stack 0
   622                           
   623                           ; 1 bytes @ 0x13
   624  0000C9                     	ds	1
   625  0000CA                     i2send_msg@qmsg:
   626                           	opt stack 0
   627  0000CA                     i2recv_msg@tlength:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x14
   631  0000CA                     	ds	2
   632  0000CC                     ToMainHigh_sendmsg@msgtype:
   633                           	opt stack 0
   634  0000CC                     i2recv_msg@qmsg:
   635                           	opt stack 0
   636                           
   637                           ; 2 bytes @ 0x16
   638  0000CC                     	ds	1
   639  0000CD                     ToMainHigh_sendmsg@data:
   640                           	opt stack 0
   641                           
   642                           ; 2 bytes @ 0x17
   643  0000CD                     	ds	1
   644  0000CE                     FromMainHigh_recvmsg@msgtype:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0x18
   648  0000CE                     	ds	1
   649  0000CF                     ToMainHigh_sendmsg@length:
   650                           	opt stack 0
   651                           
   652                           ; 1 bytes @ 0x19
   653  0000CF                     	ds	1
   654  0000D0                     ??_i2c_int_handler:
   655  0000D0                     FromMainHigh_recvmsg@data:
   656                           	opt stack 0
   657                           
   658                           ; 2 bytes @ 0x1A
   659  0000D0                     	ds	2
   660  0000D2                     FromMainHigh_recvmsg@maxlength:
   661                           	opt stack 0
   662  0000D2                     i2c_int_handler@error_buf:
   663                           	opt stack 0
   664                           
   665                           ; 3 bytes @ 0x1C
   666  0000D2                     	ds	1
   667  0000D3                     ??_timer0_int_handler:
   668                           
   669                           ; 0 bytes @ 0x1D
   670  0000D3                     	ds	1
   671  0000D4                     timer0_int_handler@length:
   672                           	opt stack 0
   673                           
   674                           ; 2 bytes @ 0x1E
   675  0000D4                     	ds	1
   676  0000D5                     i2c_int_handler@data_written:
   677                           	opt stack 0
   678                           
   679                           ; 1 bytes @ 0x1F
   680  0000D5                     	ds	1
   681  0000D6                     i2c_int_handler@overrun_error:
   682                           	opt stack 0
   683  0000D6                     timer0_int_handler@msgtype:
   684                           	opt stack 0
   685                           
   686                           ; 2 bytes @ 0x20
   687  0000D6                     	ds	1
   688  0000D7                     i2c_int_handler@msg_to_send:
   689                           	opt stack 0
   690                           
   691                           ; 1 bytes @ 0x21
   692  0000D7                     	ds	1
   693  0000D8                     i2c_int_handler@i2c_data:
   694                           	opt stack 0
   695  0000D8                     timer0_int_handler@val:
   696                           	opt stack 0
   697                           
   698                           ; 2 bytes @ 0x22
   699  0000D8                     	ds	1
   700  0000D9                     i2c_int_handler@msg_ready:
   701                           	opt stack 0
   702                           
   703                           ; 1 bytes @ 0x23
   704  0000D9                     	ds	1
   705  0000DA                     i2c_int_handler@data_read:
   706                           	opt stack 0
   707                           
   708                           ; 1 bytes @ 0x24
   709  0000DA                     	ds	1
   710  0000DB                     ??_InterruptHandlerHigh:
   711                           
   712                           ; 0 bytes @ 0x25
   713  0000DB                     	ds	14
   714                           tblptru	equ	0xFF8
   715                           postinc0	equ	0xFEE
   716                           wreg	equ	0xFE8
   717                           
   718                           	psect	cstackCOMRAM
   719  000001                     __pcstackCOMRAM:
   720                           	opt stack 0
   721  000001                     ?_ReadTimer1:
   722                           	opt stack 0
   723  000001                     WriteUSART@data:
   724                           	opt stack 0
   725  000001                     WriteTimer1@timer1:
   726                           	opt stack 0
   727  000001                     i1memcpy@d1:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0x0
   731  000001                     	ds	1
   732  000002                     ??_uart_send_int_handler:
   733                           
   734                           ; 0 bytes @ 0x1
   735  000002                     	ds	1
   736  000003                     ReadTimer1@timer:
   737                           	opt stack 0
   738  000003                     WriteTimer1@timer:
   739                           	opt stack 0
   740  000003                     i1memcpy@s1:
   741                           	opt stack 0
   742                           
   743                           ; 2 bytes @ 0x2
   744  000003                     	ds	2
   745  000005                     i1memcpy@n:
   746                           	opt stack 0
   747                           
   748                           ; 2 bytes @ 0x4
   749  000005                     	ds	2
   750  000007                     i1memcpy@d:
   751                           	opt stack 0
   752                           
   753                           ; 2 bytes @ 0x6
   754  000007                     	ds	2
   755  000009                     i1memcpy@s:
   756                           	opt stack 0
   757                           
   758                           ; 2 bytes @ 0x8
   759  000009                     	ds	2
   760  00000B                     i1send_msg@qptr:
   761                           	opt stack 0
   762                           
   763                           ; 2 bytes @ 0xA
   764  00000B                     	ds	2
   765  00000D                     i1send_msg@length:
   766                           	opt stack 0
   767                           
   768                           ; 1 bytes @ 0xC
   769  00000D                     	ds	1
   770  00000E                     i1send_msg@msgtype:
   771                           	opt stack 0
   772                           
   773                           ; 1 bytes @ 0xD
   774  00000E                     	ds	1
   775  00000F                     i1send_msg@data:
   776                           	opt stack 0
   777                           
   778                           ; 2 bytes @ 0xE
   779  00000F                     	ds	2
   780  000011                     ??i1_send_msg:
   781                           
   782                           ; 0 bytes @ 0x10
   783  000011                     	ds	1
   784  000012                     i1send_msg@tlength:
   785                           	opt stack 0
   786                           
   787                           ; 2 bytes @ 0x11
   788  000012                     	ds	2
   789  000014                     i1send_msg@slot:
   790                           	opt stack 0
   791                           
   792                           ; 1 bytes @ 0x13
   793  000014                     	ds	1
   794  000015                     i1send_msg@qmsg:
   795                           	opt stack 0
   796                           
   797                           ; 2 bytes @ 0x14
   798  000015                     	ds	2
   799  000017                     ToMainLow_sendmsg@msgtype:
   800                           	opt stack 0
   801                           
   802                           ; 1 bytes @ 0x16
   803  000017                     	ds	1
   804  000018                     ToMainLow_sendmsg@data:
   805                           	opt stack 0
   806                           
   807                           ; 2 bytes @ 0x17
   808  000018                     	ds	2
   809  00001A                     ToMainLow_sendmsg@length:
   810                           	opt stack 0
   811                           
   812                           ; 1 bytes @ 0x19
   813  00001A                     	ds	1
   814  00001B                     ??_timer1_int_handler:
   815                           
   816                           ; 0 bytes @ 0x1A
   817  00001B                     	ds	1
   818  00001C                     timer1_int_handler@result:
   819                           	opt stack 0
   820                           
   821                           ; 2 bytes @ 0x1B
   822  00001C                     	ds	2
   823  00001E                     ??_InterruptHandlerLow:
   824                           
   825                           ; 0 bytes @ 0x1D
   826  00001E                     	ds	17
   827                           tblptru	equ	0xFF8
   828                           postinc0	equ	0xFEE
   829                           wreg	equ	0xFE8
   830                           
   831 ;;
   832 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   833 ;;
   834 ;; *************** function _main *****************
   835 ;; Defined at:
   836 ;;		line 188 in file "../src/main.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;		None
   839 ;; Auto vars:     Size  Location     Type
   840 ;;  ic             28   28[BANK2 ] struct __i2c_comm
   841 ;;  msgbuffer      11    0[BANK2 ] unsigned char [11]
   842 ;;  uc              6   20[BANK2 ] struct __uart_comm
   843 ;;  t1thread_dat    2   18[BANK2 ] struct __timer1_thread_s
   844 ;;  t0thread_dat    2   16[BANK2 ] struct __timer0_thread_s
   845 ;;  uthread_data    2   14[BANK2 ] struct __uart_thread_str
   846 ;;  msgtype         1   27[BANK2 ] unsigned char 
   847 ;;  length          1   26[BANK2 ] char 
   848 ;;  portconfig      1   13[BANK2 ] unsigned char 
   849 ;;  config2         1   12[BANK2 ] unsigned char 
   850 ;;  config1         1   11[BANK2 ] unsigned char 
   851 ;;  i               1    0        unsigned char 
   852 ;;  last_reg_rec    1    0        unsigned char 
   853 ;;  c               1    0        unsigned char 
   854 ;; Return value:  Size  Location     Type
   855 ;;		None               void
   856 ;; Registers used:
   857 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   863 ;;      Params:         0       0       0       0       0
   864 ;;      Locals:         0       0       0      56       0
   865 ;;      Temps:          0       0       1       0       0
   866 ;;      Totals:         0       0       1      56       0
   867 ;;Total ram usage:       57 bytes
   868 ;; Hardware stack levels required when called:   14
   869 ;; This function calls:
   870 ;;		_OpenTimer0
   871 ;;		_OpenTimer1
   872 ;;		_OpenUSART
   873 ;;		_ToMainHigh_recvmsg
   874 ;;		_ToMainLow_recvmsg
   875 ;;		_block_on_To_msgqueues
   876 ;;		_enable_interrupts
   877 ;;		_i2c_configure_slave
   878 ;;		_init_i2c
   879 ;;		_init_queues
   880 ;;		_init_timer1_lthread
   881 ;;		_init_uart_recv
   882 ;;		_timer0_lthread
   883 ;;		_timer1_lthread
   884 ;;		_uart_lthread
   885 ;; This function is called by:
   886 ;;		Startup code after reset
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           	psect	text0
   891  0005C6                     __ptext0:
   892                           	opt stack 0
   893  0005C6                     _main:
   894                           	opt stack 17
   895                           
   896                           ;main.c: 189: char c;
   897                           ;main.c: 190: signed char length;
   898                           ;main.c: 191: unsigned char msgtype;
   899                           ;main.c: 192: unsigned char last_reg_recvd;
   900                           ;main.c: 193: uart_comm uc;
   901                           ;main.c: 194: i2c_comm ic;
   902                           ;main.c: 195: unsigned char msgbuffer[10 + 1];
   903                           ;main.c: 196: unsigned char i;
   904                           ;main.c: 197: uart_thread_struct uthread_data;
   905                           ;main.c: 198: timer1_thread_struct t1thread_data;
   906                           ;main.c: 199: timer0_thread_struct t0thread_data;
   907                           ;main.c: 201: unsigned char config1 = 0x00, config2 = 0x00, portconfig = 0x00;
   908                           
   909                           ;incstack = 0
   910  0005C6  0101               	movlb	1	; () banked
   911  0005C8  6FC8               	movwf	??_main& (0+255),b
   912  0005CA  0E00               	movlw	0
   913  0005CC  0102               	movlb	2	; () banked
   914  0005CE  0102               	movlb	2	; () banked
   915  0005D0  6F0B               	movwf	main@config1& (0+255),b
   916  0005D2  0101               	movlb	1	; () banked
   917  0005D4  51C8               	movf	??_main& (0+255),w,b
   918  0005D6  0101               	movlb	1	; () banked
   919  0005D8  6FC8               	movwf	??_main& (0+255),b
   920  0005DA  0E00               	movlw	0
   921  0005DC  0102               	movlb	2	; () banked
   922  0005DE  0102               	movlb	2	; () banked
   923  0005E0  6F0C               	movwf	main@config2& (0+255),b
   924  0005E2  0101               	movlb	1	; () banked
   925  0005E4  51C8               	movf	??_main& (0+255),w,b
   926  0005E6  0101               	movlb	1	; () banked
   927  0005E8  6FC8               	movwf	??_main& (0+255),b
   928  0005EA  0E00               	movlw	0
   929  0005EC  0102               	movlb	2	; () banked
   930  0005EE  0102               	movlb	2	; () banked
   931  0005F0  6F0D               	movwf	main@portconfig& (0+255),b
   932  0005F2  0101               	movlb	1	; () banked
   933  0005F4  51C8               	movf	??_main& (0+255),w,b
   934                           
   935                           ; BSR set to: 1
   936                           ;main.c: 209: OSCCON = 0x82;
   937  0005F6  0E82               	movlw	130
   938  0005F8  6ED3               	movwf	4051,c	;volatile
   939                           
   940                           ; BSR set to: 1
   941                           ;main.c: 210: OSCTUNEbits.PLLEN = 1;
   942  0005FA  8C9B               	bsf	3995,6,c	;volatile
   943                           
   944                           ; BSR set to: 1
   945                           ;main.c: 229: init_uart_recv(&uc);
   946  0005FC  0102               	movlb	2	; () banked
   947  0005FE  0E02               	movlw	high main@uc
   948  000600  0101               	movlb	1	; () banked
   949  000602  0101               	movlb	1	; () banked
   950  000604  6FA5               	movwf	(init_uart_recv@uc+1)& (0+255),b
   951  000606  0102               	movlb	2	; () banked
   952  000608  0E14               	movlw	low main@uc
   953  00060A  0101               	movlb	1	; () banked
   954  00060C  0101               	movlb	1	; () banked
   955  00060E  6FA4               	movwf	init_uart_recv@uc& (0+255),b
   956  000610  ECE5  F00C         	call	_init_uart_recv	;wreg free
   957                           
   958                           ;main.c: 232: init_i2c(&ic);
   959  000614  0102               	movlb	2	; () banked
   960  000616  0E02               	movlw	high main@ic
   961  000618  0101               	movlb	1	; () banked
   962  00061A  0101               	movlb	1	; () banked
   963  00061C  6FA5               	movwf	(init_i2c@ic+1)& (0+255),b
   964  00061E  0102               	movlb	2	; () banked
   965  000620  0E1C               	movlw	low main@ic
   966  000622  0101               	movlb	1	; () banked
   967  000624  0101               	movlb	1	; () banked
   968  000626  6FA4               	movwf	init_i2c@ic& (0+255),b
   969  000628  ECE9  F00A         	call	_init_i2c	;wreg free
   970                           
   971                           ;main.c: 235: init_timer1_lthread(&t1thread_data);
   972  00062C  0102               	movlb	2	; () banked
   973  00062E  0E02               	movlw	high main@t1thread_data
   974  000630  0101               	movlb	1	; () banked
   975  000632  0101               	movlb	1	; () banked
   976  000634  6FA5               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   977  000636  0102               	movlb	2	; () banked
   978  000638  0E12               	movlw	low main@t1thread_data
   979  00063A  0101               	movlb	1	; () banked
   980  00063C  0101               	movlb	1	; () banked
   981  00063E  6FA4               	movwf	init_timer1_lthread@tptr& (0+255),b
   982  000640  EC3D  F00D         	call	_init_timer1_lthread	;wreg free
   983                           
   984                           ;main.c: 238: init_queues();
   985  000644  EC1F  F00A         	call	_init_queues	;wreg free
   986                           
   987                           ;main.c: 242: TRISB = 0x0;
   988  000648  0E00               	movlw	0
   989  00064A  6E93               	movwf	3987,c	;volatile
   990                           
   991                           ;main.c: 243: LATB = 0x0;
   992  00064C  0E00               	movlw	0
   993  00064E  6E8A               	movwf	3978,c	;volatile
   994                           
   995                           ;main.c: 256: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11110011);
   996  000650  0ED3               	movlw	211
   997  000652  ECD0  F00C         	call	_OpenTimer0
   998                           
   999                           ;main.c: 265: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1000  000656  0EF5               	movlw	245
  1001  000658  EC19  F00C         	call	_OpenTimer1
  1002                           
  1003                           ;main.c: 272: IPR1bits.TMR1IP = 0;
  1004  00065C  909F               	bcf	3999,0,c	;volatile
  1005                           
  1006                           ;main.c: 274: IPR1bits.RCIP = 0;
  1007  00065E  9A9F               	bcf	3999,5,c	;volatile
  1008                           
  1009                           ;main.c: 276: IPR1bits.SSPIP = 1;
  1010  000660  869F               	bsf	3999,3,c	;volatile
  1011                           
  1012                           ;main.c: 285: i2c_configure_slave(0x9E);
  1013  000662  0E9E               	movlw	158
  1014  000664  ECF9  F00C         	call	_i2c_configure_slave
  1015                           
  1016                           ;main.c: 300: PIE1bits.SSPIE = 1;
  1017  000668  869D               	bsf	3997,3,c	;volatile
  1018                           
  1019                           ;main.c: 301: PIE1bits.RCIE = 1;
  1020  00066A  8A9D               	bsf	3997,5,c	;volatile
  1021                           
  1022                           ;main.c: 312: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1023                           ;main.c: 313: 0b11111111 & 0b11101111, 0x19);
  1024  00066C  0E00               	movlw	0
  1025  00066E  0101               	movlb	1	; () banked
  1026  000670  0101               	movlb	1	; () banked
  1027  000672  6FA5               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1028  000674  0E19               	movlw	25
  1029  000676  0101               	movlb	1	; () banked
  1030  000678  6FA4               	movwf	OpenUSART@spbrg& (0+255),b
  1031  00067A  0E6C               	movlw	108
  1032  00067C  ECD9  F007         	call	_OpenUSART
  1033                           
  1034                           ;main.c: 318: bufferFlag = 0x0;
  1035  000680  0E00               	movlw	0
  1036  000682  0101               	movlb	1	; () banked
  1037  000684  0101               	movlb	1	; () banked
  1038  000686  6F01               	movwf	(_bufferFlag+1)& (0+255),b
  1039  000688  0E00               	movlw	0
  1040  00068A  0101               	movlb	1	; () banked
  1041  00068C  6F00               	movwf	_bufferFlag& (0+255),b
  1042                           
  1043                           ; BSR set to: 1
  1044                           ;main.c: 321: enable_interrupts();
  1045  00068E  EC73  F00D         	call	_enable_interrupts	;wreg free
  1046  000692                     l3104:
  1047                           
  1048                           ;main.c: 345: block_on_To_msgqueues();
  1049  000692  ECEF  F008         	call	_block_on_To_msgqueues	;wreg free
  1050                           
  1051                           ;main.c: 352: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1052  000696  0102               	movlb	2	; () banked
  1053  000698  0E02               	movlw	high main@msgtype
  1054  00069A  0101               	movlb	1	; () banked
  1055  00069C  0101               	movlb	1	; () banked
  1056  00069E  6FBD               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1057  0006A0  0102               	movlb	2	; () banked
  1058  0006A2  0E1B               	movlw	low main@msgtype
  1059  0006A4  0101               	movlb	1	; () banked
  1060  0006A6  0101               	movlb	1	; () banked
  1061  0006A8  6FBC               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1062  0006AA  0102               	movlb	2	; () banked
  1063  0006AC  0E02               	movlw	high main@msgbuffer
  1064  0006AE  0101               	movlb	1	; () banked
  1065  0006B0  0101               	movlb	1	; () banked
  1066  0006B2  6FBF               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1067  0006B4  0102               	movlb	2	; () banked
  1068  0006B6  0E00               	movlw	low main@msgbuffer
  1069  0006B8  0101               	movlb	1	; () banked
  1070  0006BA  0101               	movlb	1	; () banked
  1071  0006BC  6FBE               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1072  0006BE  0E0A               	movlw	10
  1073  0006C0  EC99  F00B         	call	_ToMainHigh_recvmsg
  1074  0006C4  0102               	movlb	2	; () banked
  1075  0006C6  0102               	movlb	2	; () banked
  1076  0006C8  6F1A               	movwf	main@length& (0+255),b
  1077                           
  1078                           ; BSR set to: 2
  1079                           ;main.c: 353: if (length < 0) {
  1080  0006CA  0102               	movlb	2	; () banked
  1081  0006CC  0102               	movlb	2	; () banked
  1082  0006CE  BF1A               	btfsc	main@length& (0+255),7,b
  1083  0006D0  D05C               	goto	l3120
  1084  0006D2  D052               	goto	l3118
  1085  0006D4                     l3112:
  1086                           
  1087                           ; BSR set to: 2
  1088                           ;main.c: 361: {
  1089                           ;main.c: 362: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1090  0006D4  0102               	movlb	2	; () banked
  1091  0006D6  0E02               	movlw	high main@t0thread_data
  1092  0006D8  0101               	movlb	1	; () banked
  1093  0006DA  0101               	movlb	1	; () banked
  1094  0006DC  6FA5               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1095  0006DE  0102               	movlb	2	; () banked
  1096  0006E0  0E10               	movlw	low main@t0thread_data
  1097  0006E2  0101               	movlb	1	; () banked
  1098  0006E4  0101               	movlb	1	; () banked
  1099  0006E6  6FA4               	movwf	timer0_lthread@tptr& (0+255),b
  1100  0006E8  0102               	movlb	2	; () banked
  1101  0006EA  0101               	movlb	1	; () banked
  1102  0006EC  C21B  F1A6         	movff	main@msgtype,timer0_lthread@msgtype
  1103  0006F0  0101               	movlb	1	; () banked
  1104  0006F2  0101               	movlb	1	; () banked
  1105  0006F4  6BA7               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1106  0006F6  0102               	movlb	2	; () banked
  1107  0006F8  0102               	movlb	2	; () banked
  1108  0006FA  511A               	movf	main@length& (0+255),w,b
  1109  0006FC  0101               	movlb	1	; () banked
  1110  0006FE  0101               	movlb	1	; () banked
  1111  000700  6FA8               	movwf	timer0_lthread@length& (0+255),b
  1112  000702  0101               	movlb	1	; () banked
  1113  000704  6BA9               	clrf	(timer0_lthread@length+1)& (0+255),b
  1114  000706  0101               	movlb	1	; () banked
  1115  000708  BFA8               	btfsc	timer0_lthread@length& (0+255),7,b
  1116  00070A  07A9               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1117  00070C  0102               	movlb	2	; () banked
  1118  00070E  0E02               	movlw	high main@msgbuffer
  1119  000710  0101               	movlb	1	; () banked
  1120  000712  0101               	movlb	1	; () banked
  1121  000714  6FAB               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1122  000716  0102               	movlb	2	; () banked
  1123  000718  0E00               	movlw	low main@msgbuffer
  1124  00071A  0101               	movlb	1	; () banked
  1125  00071C  0101               	movlb	1	; () banked
  1126  00071E  6FAA               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1127  000720  EC34  F00D         	call	_timer0_lthread	;wreg free
  1128                           
  1129                           ;main.c: 363: break;
  1130  000724  D032               	goto	l3120
  1131  000726                     l3114:
  1132                           
  1133                           ;main.c: 366: {
  1134                           ;main.c: 367: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1135  000726  0102               	movlb	2	; () banked
  1136  000728  0E02               	movlw	high main@uthread_data
  1137  00072A  0101               	movlb	1	; () banked
  1138  00072C  0101               	movlb	1	; () banked
  1139  00072E  6FAE               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1140  000730  0102               	movlb	2	; () banked
  1141  000732  0E0E               	movlw	low main@uthread_data
  1142  000734  0101               	movlb	1	; () banked
  1143  000736  0101               	movlb	1	; () banked
  1144  000738  6FAD               	movwf	uart_lthread@uptr& (0+255),b
  1145  00073A  0102               	movlb	2	; () banked
  1146  00073C  0101               	movlb	1	; () banked
  1147  00073E  C21B  F1AF         	movff	main@msgtype,uart_lthread@msgtype
  1148  000742  0101               	movlb	1	; () banked
  1149  000744  0101               	movlb	1	; () banked
  1150  000746  6BB0               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1151  000748  0102               	movlb	2	; () banked
  1152  00074A  0102               	movlb	2	; () banked
  1153  00074C  511A               	movf	main@length& (0+255),w,b
  1154  00074E  0101               	movlb	1	; () banked
  1155  000750  0101               	movlb	1	; () banked
  1156  000752  6FB1               	movwf	uart_lthread@length& (0+255),b
  1157  000754  0101               	movlb	1	; () banked
  1158  000756  6BB2               	clrf	(uart_lthread@length+1)& (0+255),b
  1159  000758  0101               	movlb	1	; () banked
  1160  00075A  BFB1               	btfsc	uart_lthread@length& (0+255),7,b
  1161  00075C  07B2               	decf	(uart_lthread@length+1)& (0+255),f,b
  1162  00075E  0102               	movlb	2	; () banked
  1163  000760  0E02               	movlw	high main@msgbuffer
  1164  000762  0101               	movlb	1	; () banked
  1165  000764  0101               	movlb	1	; () banked
  1166  000766  6FB4               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1167  000768  0102               	movlb	2	; () banked
  1168  00076A  0E00               	movlw	low main@msgbuffer
  1169  00076C  0101               	movlb	1	; () banked
  1170  00076E  0101               	movlb	1	; () banked
  1171  000770  6FB3               	movwf	uart_lthread@msgbuffer& (0+255),b
  1172  000772  ECFB  F00B         	call	_uart_lthread	;wreg free
  1173                           
  1174                           ;main.c: 368: break;
  1175  000776  D009               	goto	l3120
  1176  000778                     l3118:
  1177  000778  0102               	movlb	2	; () banked
  1178  00077A  0102               	movlb	2	; () banked
  1179  00077C  511B               	movf	main@msgtype& (0+255),w,b
  1180                           
  1181                           ; Switch size 1, requested type "space"
  1182                           ; Number of cases is 2, Range of values is 10 to 40
  1183                           ; switch strategies available:
  1184                           ; Name         Instructions Cycles
  1185                           ; simple_byte            7     4 (average)
  1186                           ;	Chosen strategy is simple_byte
  1187  00077E  0A0A               	xorlw	10	; case 10
  1188  000780  B4D8               	btfsc	status,2,c
  1189  000782  D7A8               	goto	l3112
  1190  000784  0A22               	xorlw	34	; case 40
  1191  000786  B4D8               	btfsc	status,2,c
  1192  000788  D7CE               	goto	l3114
  1193  00078A                     l3120:
  1194                           
  1195                           ;main.c: 376: }
  1196                           ;main.c: 379: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1197  00078A  0102               	movlb	2	; () banked
  1198  00078C  0E02               	movlw	high main@msgtype
  1199  00078E  0101               	movlb	1	; () banked
  1200  000790  0101               	movlb	1	; () banked
  1201  000792  6FBD               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1202  000794  0102               	movlb	2	; () banked
  1203  000796  0E1B               	movlw	low main@msgtype
  1204  000798  0101               	movlb	1	; () banked
  1205  00079A  0101               	movlb	1	; () banked
  1206  00079C  6FBC               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1207  00079E  0102               	movlb	2	; () banked
  1208  0007A0  0E02               	movlw	high main@msgbuffer
  1209  0007A2  0101               	movlb	1	; () banked
  1210  0007A4  0101               	movlb	1	; () banked
  1211  0007A6  6FBF               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1212  0007A8  0102               	movlb	2	; () banked
  1213  0007AA  0E00               	movlw	low main@msgbuffer
  1214  0007AC  0101               	movlb	1	; () banked
  1215  0007AE  0101               	movlb	1	; () banked
  1216  0007B0  6FBE               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1217  0007B2  0E0A               	movlw	10
  1218  0007B4  EC78  F00B         	call	_ToMainLow_recvmsg
  1219  0007B8  0102               	movlb	2	; () banked
  1220  0007BA  0102               	movlb	2	; () banked
  1221  0007BC  6F1A               	movwf	main@length& (0+255),b
  1222                           
  1223                           ; BSR set to: 2
  1224                           ;main.c: 380: if (length < 0) {
  1225  0007BE  0102               	movlb	2	; () banked
  1226  0007C0  0102               	movlb	2	; () banked
  1227  0007C2  BF1A               	btfsc	main@length& (0+255),7,b
  1228  0007C4  D766               	goto	l3104
  1229  0007C6  D029               	goto	l3130
  1230  0007C8                     l3126:
  1231                           
  1232                           ; BSR set to: 2
  1233                           ;main.c: 388: {
  1234                           ;main.c: 389: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1235  0007C8  0102               	movlb	2	; () banked
  1236  0007CA  0E02               	movlw	high main@t1thread_data
  1237  0007CC  0101               	movlb	1	; () banked
  1238  0007CE  0101               	movlb	1	; () banked
  1239  0007D0  6FBF               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1240  0007D2  0102               	movlb	2	; () banked
  1241  0007D4  0E12               	movlw	low main@t1thread_data
  1242  0007D6  0101               	movlb	1	; () banked
  1243  0007D8  0101               	movlb	1	; () banked
  1244  0007DA  6FBE               	movwf	timer1_lthread@tptr& (0+255),b
  1245  0007DC  0102               	movlb	2	; () banked
  1246  0007DE  0101               	movlb	1	; () banked
  1247  0007E0  C21B  F1C0         	movff	main@msgtype,timer1_lthread@msgtype
  1248  0007E4  0101               	movlb	1	; () banked
  1249  0007E6  0101               	movlb	1	; () banked
  1250  0007E8  6BC1               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1251  0007EA  0102               	movlb	2	; () banked
  1252  0007EC  0102               	movlb	2	; () banked
  1253  0007EE  511A               	movf	main@length& (0+255),w,b
  1254  0007F0  0101               	movlb	1	; () banked
  1255  0007F2  0101               	movlb	1	; () banked
  1256  0007F4  6FC2               	movwf	timer1_lthread@length& (0+255),b
  1257  0007F6  0101               	movlb	1	; () banked
  1258  0007F8  6BC3               	clrf	(timer1_lthread@length+1)& (0+255),b
  1259  0007FA  0101               	movlb	1	; () banked
  1260  0007FC  BFC2               	btfsc	timer1_lthread@length& (0+255),7,b
  1261  0007FE  07C3               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1262  000800  0102               	movlb	2	; () banked
  1263  000802  0E02               	movlw	high main@msgbuffer
  1264  000804  0101               	movlb	1	; () banked
  1265  000806  0101               	movlb	1	; () banked
  1266  000808  6FC5               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1267  00080A  0102               	movlb	2	; () banked
  1268  00080C  0E00               	movlw	low main@msgbuffer
  1269  00080E  0101               	movlb	1	; () banked
  1270  000810  0101               	movlb	1	; () banked
  1271  000812  6FC4               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1272  000814  ECE6  F009         	call	_timer1_lthread	;wreg free
  1273                           
  1274                           ;main.c: 390: break;
  1275  000818  D73C               	goto	l3104
  1276  00081A                     l3130:
  1277  00081A  0102               	movlb	2	; () banked
  1278  00081C  0102               	movlb	2	; () banked
  1279  00081E  511B               	movf	main@msgtype& (0+255),w,b
  1280                           
  1281                           ; Switch size 1, requested type "space"
  1282                           ; Number of cases is 2, Range of values is 11 to 30
  1283                           ; switch strategies available:
  1284                           ; Name         Instructions Cycles
  1285                           ; simple_byte            7     4 (average)
  1286                           ;	Chosen strategy is simple_byte
  1287  000820  0A0B               	xorlw	11	; case 11
  1288  000822  B4D8               	btfsc	status,2,c
  1289  000824  D7D1               	goto	l3126
  1290  000826  0A15               	xorlw	21	; case 30
  1291  000828  D734               	goto	l3104
  1292  00082A                     __end_of_main:
  1293                           	opt stack 0
  1294                           tblptru	equ	0xFF8
  1295                           postinc0	equ	0xFEE
  1296                           wreg	equ	0xFE8
  1297                           status	equ	0xFD8
  1298                           
  1299 ;; *************** function _uart_lthread *****************
  1300 ;; Defined at:
  1301 ;;		line 10 in file "../src/uart_thread.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;  uptr            2    9[BANK1 ] PTR struct __uart_thread
  1304 ;;		 -> main@uthread_data(2), 
  1305 ;;  msgtype         2   11[BANK1 ] int 
  1306 ;;  length          2   13[BANK1 ] int 
  1307 ;;  msgbuffer       2   15[BANK1 ] PTR unsigned char 
  1308 ;;		 -> main@msgbuffer(11), 
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;		None
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  2    9[BANK1 ] int 
  1313 ;; Registers used:
  1314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1320 ;;      Params:         0       0       8       0       0
  1321 ;;      Locals:         0       0       0       0       0
  1322 ;;      Temps:          0       0       0       0       0
  1323 ;;      Totals:         0       0       8       0       0
  1324 ;;Total ram usage:        8 bytes
  1325 ;; Hardware stack levels used:    1
  1326 ;; Hardware stack levels required when called:   11
  1327 ;; This function calls:
  1328 ;;		_uart_retrieve_buffer
  1329 ;; This function is called by:
  1330 ;;		_main
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334                           	psect	text1
  1335  0017F6                     __ptext1:
  1336                           	opt stack 0
  1337  0017F6                     _uart_lthread:
  1338                           	opt stack 19
  1339                           
  1340                           ;uart_thread.c: 11: if (msgtype == 30) {
  1341                           
  1342                           ; BSR set to: 2
  1343                           ;incstack = 0
  1344  0017F6  0101               	movlb	1	; () banked
  1345  0017F8  0101               	movlb	1	; () banked
  1346  0017FA  51AF               	movf	uart_lthread@msgtype& (0+255),w,b
  1347  0017FC  0A1E               	xorlw	30
  1348  0017FE  11B0               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1349  001800  B4D8               	btfsc	status,2,c
  1350  001802  0012               	return	
  1351                           
  1352                           ; BSR set to: 1
  1353                           
  1354                           ; BSR set to: 1
  1355                           
  1356                           ; BSR set to: 1
  1357                           ;uart_thread.c: 13: } else if (msgtype == 40) {
  1358  001804  0101               	movlb	1	; () banked
  1359  001806  0101               	movlb	1	; () banked
  1360  001808  51AF               	movf	uart_lthread@msgtype& (0+255),w,b
  1361  00180A  0A28               	xorlw	40
  1362  00180C  11B0               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1363  00180E  A4D8               	btfss	status,2,c
  1364  001810  0012               	return	
  1365                           
  1366                           ; BSR set to: 1
  1367                           ;uart_thread.c: 15: uart_retrieve_buffer(length, msgbuffer);
  1368  001812  C1B1  F1A4         	movff	uart_lthread@length,uart_retrieve_buffer@length
  1369  001816  C1B2  F1A5         	movff	uart_lthread@length+1,uart_retrieve_buffer@length+1
  1370  00181A  0101               	movlb	1	; () banked
  1371  00181C  0101               	movlb	1	; () banked
  1372  00181E  C1B4  F1A7         	movff	uart_lthread@msgbuffer+1,uart_retrieve_buffer@msgbuffer+1
  1373  001822  0101               	movlb	1	; () banked
  1374  001824  0101               	movlb	1	; () banked
  1375  001826  C1B3  F1A6         	movff	uart_lthread@msgbuffer,uart_retrieve_buffer@msgbuffer
  1376  00182A  EC4F  F006         	call	_uart_retrieve_buffer	;wreg free
  1377                           
  1378                           ;uart_thread.c: 17: PIE1bits.TX1IE = 0x1;
  1379  00182E  889D               	bsf	3997,4,c	;volatile
  1380  001830  0012               	return	
  1381  001832                     __end_of_uart_lthread:
  1382                           	opt stack 0
  1383                           tblptru	equ	0xFF8
  1384                           postinc0	equ	0xFEE
  1385                           wreg	equ	0xFE8
  1386                           status	equ	0xFD8
  1387                           
  1388 ;; *************** function _uart_retrieve_buffer *****************
  1389 ;; Defined at:
  1390 ;;		line 27 in file "../src/my_uart.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;  length          2    0[BANK1 ] int 
  1393 ;;  msgbuffer       2    2[BANK1 ] PTR unsigned char 
  1394 ;;		 -> main@msgbuffer(11), 
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;  i               2    7[BANK1 ] int 
  1397 ;; Return value:  Size  Location     Type
  1398 ;;		None               void
  1399 ;; Registers used:
  1400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1406 ;;      Params:         0       0       4       0       0
  1407 ;;      Locals:         0       0       2       0       0
  1408 ;;      Temps:          0       0       3       0       0
  1409 ;;      Totals:         0       0       9       0       0
  1410 ;;Total ram usage:        9 bytes
  1411 ;; Hardware stack levels used:    1
  1412 ;; Hardware stack levels required when called:   10
  1413 ;; This function calls:
  1414 ;;		Nothing
  1415 ;; This function is called by:
  1416 ;;		_uart_lthread
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           	psect	text2
  1421  000C9E                     __ptext2:
  1422                           	opt stack 0
  1423  000C9E                     _uart_retrieve_buffer:
  1424                           	opt stack 19
  1425                           
  1426                           ;my_uart.c: 30: uc_ptr->msg_length = msgbuffer[1];
  1427                           
  1428                           ;incstack = 0
  1429  000C9E  0101               	movlb	1	; () banked
  1430  000CA0  EE20 F001          	lfsr	2,1
  1431  000CA4  0101               	movlb	1	; () banked
  1432  000CA6  51A6               	movf	uart_retrieve_buffer@msgbuffer& (0+255),w,b
  1433  000CA8  26D9               	addwf	fsr2l,f,c
  1434  000CAA  0101               	movlb	1	; () banked
  1435  000CAC  51A7               	movf	(uart_retrieve_buffer@msgbuffer+1)& (0+255),w,b
  1436  000CAE  22DA               	addwfc	fsr2h,f,c
  1437  000CB0  0100               	movlb	0	; () banked
  1438  000CB2  EE10 F005          	lfsr	1,5
  1439  000CB6  0100               	movlb	0	; () banked
  1440  000CB8  51E9               	movf	_uc_ptr& (0+255),w,b
  1441  000CBA  26E1               	addwf	fsr1l,f,c
  1442  000CBC  0100               	movlb	0	; () banked
  1443  000CBE  51EA               	movf	(_uc_ptr+1)& (0+255),w,b
  1444  000CC0  22E2               	addwfc	fsr1h,f,c
  1445  000CC2  CFDF FFE7          	movff	indf2,indf1
  1446                           
  1447                           ; BSR set to: 0
  1448                           ;my_uart.c: 31: uc_ptr->Tx_buflen = 0;
  1449  000CC6  0100               	movlb	0	; () banked
  1450  000CC8  EE20 F004          	lfsr	2,4
  1451  000CCC  0100               	movlb	0	; () banked
  1452  000CCE  51E9               	movf	_uc_ptr& (0+255),w,b
  1453  000CD0  26D9               	addwf	fsr2l,f,c
  1454  000CD2  0100               	movlb	0	; () banked
  1455  000CD4  51EA               	movf	(_uc_ptr+1)& (0+255),w,b
  1456  000CD6  22DA               	addwfc	fsr2h,f,c
  1457  000CD8  0E00               	movlw	0
  1458  000CDA  6EDF               	movwf	indf2,c
  1459                           
  1460                           ; BSR set to: 0
  1461                           ;my_uart.c: 33: int i = 2;
  1462  000CDC  0E00               	movlw	0
  1463  000CDE  0101               	movlb	1	; () banked
  1464  000CE0  0101               	movlb	1	; () banked
  1465  000CE2  6FAC               	movwf	(uart_retrieve_buffer@i+1)& (0+255),b
  1466  000CE4  0E02               	movlw	2
  1467  000CE6  0101               	movlb	1	; () banked
  1468  000CE8  6FAB               	movwf	uart_retrieve_buffer@i& (0+255),b
  1469                           
  1470                           ;my_uart.c: 34: for (; i < length + 1; i++) {
  1471  000CEA  D037               	goto	l3464
  1472  000CEC                     l3458:
  1473                           
  1474                           ; BSR set to: 1
  1475                           ;my_uart.c: 35: uc_ptr->Tx_buffer[uc_ptr->Tx_buflen++] = msgbuffer[i];
  1476  000CEC  0101               	movlb	1	; () banked
  1477  000CEE  0101               	movlb	1	; () banked
  1478  000CF0  51AB               	movf	uart_retrieve_buffer@i& (0+255),w,b
  1479  000CF2  0101               	movlb	1	; () banked
  1480  000CF4  0101               	movlb	1	; () banked
  1481  000CF6  25A6               	addwf	uart_retrieve_buffer@msgbuffer& (0+255),w,b
  1482  000CF8  6ED9               	movwf	fsr2l,c
  1483  000CFA  0101               	movlb	1	; () banked
  1484  000CFC  0101               	movlb	1	; () banked
  1485  000CFE  51AC               	movf	(uart_retrieve_buffer@i+1)& (0+255),w,b
  1486  000D00  0101               	movlb	1	; () banked
  1487  000D02  0101               	movlb	1	; () banked
  1488  000D04  21A7               	addwfc	(uart_retrieve_buffer@msgbuffer+1)& (0+255),w,b
  1489  000D06  6EDA               	movwf	fsr2h,c
  1490  000D08  0100               	movlb	0	; () banked
  1491  000D0A  EE10 F004          	lfsr	1,4
  1492  000D0E  0100               	movlb	0	; () banked
  1493  000D10  51E9               	movf	_uc_ptr& (0+255),w,b
  1494  000D12  26E1               	addwf	fsr1l,f,c
  1495  000D14  0100               	movlb	0	; () banked
  1496  000D16  51EA               	movf	(_uc_ptr+1)& (0+255),w,b
  1497  000D18  22E2               	addwfc	fsr1h,f,c
  1498  000D1A  50E7               	movf	indf1,w,c
  1499  000D1C  0101               	movlb	1	; () banked
  1500  000D1E  6FA8               	movwf	??_uart_retrieve_buffer& (0+255),b
  1501  000D20  0101               	movlb	1	; () banked
  1502  000D22  51A8               	movf	??_uart_retrieve_buffer& (0+255),w,b
  1503  000D24  0D01               	mullw	1
  1504  000D26  50F3               	movf	prodl,w,c
  1505  000D28  0100               	movlb	0	; () banked
  1506  000D2A  0100               	movlb	0	; () banked
  1507  000D2C  25E9               	addwf	_uc_ptr& (0+255),w,b
  1508  000D2E  6EE1               	movwf	fsr1l,c
  1509  000D30  50F4               	movf	prodh,w,c
  1510  000D32  0100               	movlb	0	; () banked
  1511  000D34  0100               	movlb	0	; () banked
  1512  000D36  21EA               	addwfc	(_uc_ptr+1)& (0+255),w,b
  1513  000D38  6EE2               	movwf	fsr1h,c
  1514  000D3A  CFDF FFE7          	movff	indf2,indf1
  1515                           
  1516                           ; BSR set to: 0
  1517  000D3E  0100               	movlb	0	; () banked
  1518  000D40  EE20 F004          	lfsr	2,4
  1519  000D44  0100               	movlb	0	; () banked
  1520  000D46  51E9               	movf	_uc_ptr& (0+255),w,b
  1521  000D48  26D9               	addwf	fsr2l,f,c
  1522  000D4A  0100               	movlb	0	; () banked
  1523  000D4C  51EA               	movf	(_uc_ptr+1)& (0+255),w,b
  1524  000D4E  22DA               	addwfc	fsr2h,f,c
  1525  000D50  2ADF               	incf	indf2,f,c
  1526                           
  1527                           ; BSR set to: 0
  1528  000D52  0101               	movlb	1	; () banked
  1529  000D54  0101               	movlb	1	; () banked
  1530  000D56  4BAB               	infsnz	uart_retrieve_buffer@i& (0+255),f,b
  1531  000D58  2BAC               	incf	(uart_retrieve_buffer@i+1)& (0+255),f,b
  1532  000D5A                     l3464:
  1533                           
  1534                           ; BSR set to: 1
  1535  000D5A  0E01               	movlw	1
  1536  000D5C  0101               	movlb	1	; () banked
  1537  000D5E  0101               	movlb	1	; () banked
  1538  000D60  25A4               	addwf	uart_retrieve_buffer@length& (0+255),w,b
  1539  000D62  0101               	movlb	1	; () banked
  1540  000D64  6FA8               	movwf	??_uart_retrieve_buffer& (0+255),b
  1541  000D66  0E00               	movlw	0
  1542  000D68  0101               	movlb	1	; () banked
  1543  000D6A  0101               	movlb	1	; () banked
  1544  000D6C  21A5               	addwfc	(uart_retrieve_buffer@length+1)& (0+255),w,b
  1545  000D6E  0101               	movlb	1	; () banked
  1546  000D70  6FA9               	movwf	(??_uart_retrieve_buffer+1)& (0+255),b
  1547  000D72  0101               	movlb	1	; () banked
  1548  000D74  0101               	movlb	1	; () banked
  1549  000D76  51AC               	movf	(uart_retrieve_buffer@i+1)& (0+255),w,b
  1550  000D78  0A80               	xorlw	128
  1551  000D7A  0101               	movlb	1	; () banked
  1552  000D7C  6FAA               	movwf	(??_uart_retrieve_buffer+2)& (0+255),b
  1553  000D7E  51A8               	movf	??_uart_retrieve_buffer& (0+255),w,b
  1554  000D80  0101               	movlb	1	; () banked
  1555  000D82  0101               	movlb	1	; () banked
  1556  000D84  5DAB               	subwf	uart_retrieve_buffer@i& (0+255),w,b
  1557  000D86  0101               	movlb	1	; () banked
  1558  000D88  51A9               	movf	(??_uart_retrieve_buffer+1)& (0+255),w,b
  1559  000D8A  0A80               	xorlw	128
  1560  000D8C  0101               	movlb	1	; () banked
  1561  000D8E  59AA               	subwfb	(??_uart_retrieve_buffer+2)& (0+255),w,b
  1562  000D90  B0D8               	btfsc	status,0,c
  1563                           
  1564                           ; BSR set to: 1
  1565                           
  1566                           ; BSR set to: 1
  1567  000D92  0012               	return	
  1568  000D94  D7AB               	goto	l3458
  1569  000D96                     __end_of_uart_retrieve_buffer:
  1570                           	opt stack 0
  1571                           tblptru	equ	0xFF8
  1572                           prodh	equ	0xFF4
  1573                           prodl	equ	0xFF3
  1574                           postinc0	equ	0xFEE
  1575                           wreg	equ	0xFE8
  1576                           indf1	equ	0xFE7
  1577                           fsr1h	equ	0xFE2
  1578                           fsr1l	equ	0xFE1
  1579                           indf2	equ	0xFDF
  1580                           fsr2h	equ	0xFDA
  1581                           fsr2l	equ	0xFD9
  1582                           status	equ	0xFD8
  1583                           
  1584 ;; *************** function _timer1_lthread *****************
  1585 ;; Defined at:
  1586 ;;		line 14 in file "../src/timer1_thread.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;  tptr            2   26[BANK1 ] PTR struct __timer1_thre
  1589 ;;		 -> main@t1thread_data(2), 
  1590 ;;  msgtype         2   28[BANK1 ] int 
  1591 ;;  length          2   30[BANK1 ] int 
  1592 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  1593 ;;		 -> main@msgbuffer(11), 
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;  retval          1   35[BANK1 ] char 
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  2   26[BANK1 ] int 
  1598 ;; Registers used:
  1599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1605 ;;      Params:         0       0       8       0       0
  1606 ;;      Locals:         0       0       1       0       0
  1607 ;;      Temps:          0       0       1       0       0
  1608 ;;      Totals:         0       0      10       0       0
  1609 ;;Total ram usage:       10 bytes
  1610 ;; Hardware stack levels used:    1
  1611 ;; Hardware stack levels required when called:   13
  1612 ;; This function calls:
  1613 ;;		_FromMainHigh_sendmsg
  1614 ;;		___lwmod
  1615 ;; This function is called by:
  1616 ;;		_main
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           	psect	text3
  1621  0013CC                     __ptext3:
  1622                           	opt stack 0
  1623  0013CC                     _timer1_lthread:
  1624                           	opt stack 17
  1625                           
  1626                           ;timer1_thread.c: 15: signed char retval;
  1627                           ;timer1_thread.c: 17: tptr->msgcount++;
  1628                           
  1629                           ; BSR set to: 1
  1630                           ;incstack = 0
  1631  0013CC  C1BE  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1632  0013D0  C1BF  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1633  0013D4  2ADE               	incf	postinc2,f,c
  1634  0013D6  0E00               	movlw	0
  1635  0013D8  22DD               	addwfc	postdec2,f,c
  1636                           
  1637                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1638  0013DA  C1BE  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1639  0013DE  C1BF  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1640  0013E2  0101               	movlb	1	; () banked
  1641  0013E4  CFDE F1A4          	movff	postinc2,___lwmod@dividend
  1642  0013E8  0101               	movlb	1	; () banked
  1643  0013EA  CFDD F1A5          	movff	postdec2,___lwmod@dividend+1
  1644  0013EE  0E00               	movlw	0
  1645  0013F0  0101               	movlb	1	; () banked
  1646  0013F2  0101               	movlb	1	; () banked
  1647  0013F4  6FA7               	movwf	(___lwmod@divisor+1)& (0+255),b
  1648  0013F6  0E0A               	movlw	10
  1649  0013F8  0101               	movlb	1	; () banked
  1650  0013FA  6FA6               	movwf	___lwmod@divisor& (0+255),b
  1651  0013FC  EC69  F008         	call	___lwmod	;wreg free
  1652  001400  0101               	movlb	1	; () banked
  1653  001402  0101               	movlb	1	; () banked
  1654  001404  51A4               	movf	?___lwmod& (0+255),w,b
  1655  001406  0A09               	xorlw	9
  1656  001408  0101               	movlb	1	; () banked
  1657  00140A  11A5               	iorwf	(?___lwmod+1)& (0+255),w,b
  1658  00140C  A4D8               	btfss	status,2,c
  1659  00140E  0012               	return	
  1660                           
  1661                           ; BSR set to: 1
  1662                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1663  001410  0101               	movlb	1	; () banked
  1664  001412  6FC6               	movwf	??_timer1_lthread& (0+255),b
  1665  001414  0E14               	movlw	20
  1666  001416  0101               	movlb	1	; () banked
  1667  001418  0101               	movlb	1	; () banked
  1668  00141A  6FBA               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1669  00141C  0101               	movlb	1	; () banked
  1670  00141E  51C6               	movf	??_timer1_lthread& (0+255),w,b
  1671  001420  0101               	movlb	1	; () banked
  1672  001422  0101               	movlb	1	; () banked
  1673  001424  C1BF  F1BC         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1674  001428  0101               	movlb	1	; () banked
  1675  00142A  0101               	movlb	1	; () banked
  1676  00142C  C1BE  F1BB         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1677  001430  0E02               	movlw	2
  1678  001432  EC35  F00C         	call	_FromMainHigh_sendmsg
  1679  001436  0101               	movlb	1	; () banked
  1680  001438  0101               	movlb	1	; () banked
  1681  00143A  6FC7               	movwf	timer1_lthread@retval& (0+255),b
  1682  00143C  0012               	return	
  1683  00143E                     __end_of_timer1_lthread:
  1684                           	opt stack 0
  1685                           tblptru	equ	0xFF8
  1686                           prodh	equ	0xFF4
  1687                           prodl	equ	0xFF3
  1688                           postinc0	equ	0xFEE
  1689                           wreg	equ	0xFE8
  1690                           indf1	equ	0xFE7
  1691                           fsr1h	equ	0xFE2
  1692                           fsr1l	equ	0xFE1
  1693                           indf2	equ	0xFDF
  1694                           postinc2	equ	0xFDE
  1695                           postdec2	equ	0xFDD
  1696                           fsr2h	equ	0xFDA
  1697                           fsr2l	equ	0xFD9
  1698                           status	equ	0xFD8
  1699                           
  1700 ;; *************** function ___lwmod *****************
  1701 ;; Defined at:
  1702 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;  dividend        2    0[BANK1 ] unsigned int 
  1705 ;;  divisor         2    2[BANK1 ] unsigned int 
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;  counter         1    5[BANK1 ] unsigned char 
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  2    0[BANK1 ] unsigned int 
  1710 ;; Registers used:
  1711 ;;		wreg, status,2, status,0
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1717 ;;      Params:         0       0       4       0       0
  1718 ;;      Locals:         0       0       1       0       0
  1719 ;;      Temps:          0       0       1       0       0
  1720 ;;      Totals:         0       0       6       0       0
  1721 ;;Total ram usage:        6 bytes
  1722 ;; Hardware stack levels used:    1
  1723 ;; Hardware stack levels required when called:   10
  1724 ;; This function calls:
  1725 ;;		Nothing
  1726 ;; This function is called by:
  1727 ;;		_timer1_lthread
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text4
  1732  0010D2                     __ptext4:
  1733                           	opt stack 0
  1734  0010D2                     ___lwmod:
  1735                           	opt stack 19
  1736                           
  1737                           ; BSR set to: 1
  1738                           ;incstack = 0
  1739  0010D2  0101               	movlb	1	; () banked
  1740  0010D4  0101               	movlb	1	; () banked
  1741  0010D6  51A7               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1742  0010D8  11A6               	iorwf	___lwmod@divisor& (0+255),w,b
  1743  0010DA  B4D8               	btfsc	status,2,c
  1744  0010DC  D03A               	goto	l1010
  1745                           
  1746                           ; BSR set to: 1
  1747  0010DE  0101               	movlb	1	; () banked
  1748  0010E0  6FA8               	movwf	??___lwmod& (0+255),b
  1749  0010E2  0E01               	movlw	1
  1750  0010E4  0101               	movlb	1	; () banked
  1751  0010E6  0101               	movlb	1	; () banked
  1752  0010E8  6FA9               	movwf	___lwmod@counter& (0+255),b
  1753  0010EA  0101               	movlb	1	; () banked
  1754  0010EC  51A8               	movf	??___lwmod& (0+255),w,b
  1755  0010EE  D009               	goto	l3474
  1756  0010F0                     l3472:
  1757                           
  1758                           ; BSR set to: 1
  1759  0010F0  0101               	movlb	1	; () banked
  1760  0010F2  0101               	movlb	1	; () banked
  1761  0010F4  0101               	movlb	1	; () banked
  1762  0010F6  90D8               	bcf	status,0,c
  1763  0010F8  37A6               	rlcf	___lwmod@divisor& (0+255),f,b
  1764  0010FA  37A7               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1765  0010FC  0101               	movlb	1	; () banked
  1766  0010FE  0101               	movlb	1	; () banked
  1767  001100  2BA9               	incf	___lwmod@counter& (0+255),f,b
  1768  001102                     l3474:
  1769                           
  1770                           ; BSR set to: 1
  1771  001102  0101               	movlb	1	; () banked
  1772  001104  0101               	movlb	1	; () banked
  1773  001106  AFA7               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1774  001108  D7F3               	goto	l3472
  1775  00110A                     l3476:
  1776                           
  1777                           ; BSR set to: 1
  1778  00110A  0101               	movlb	1	; () banked
  1779  00110C  0101               	movlb	1	; () banked
  1780  00110E  51A6               	movf	___lwmod@divisor& (0+255),w,b
  1781  001110  0101               	movlb	1	; () banked
  1782  001112  0101               	movlb	1	; () banked
  1783  001114  5DA4               	subwf	___lwmod@dividend& (0+255),w,b
  1784  001116  0101               	movlb	1	; () banked
  1785  001118  0101               	movlb	1	; () banked
  1786  00111A  51A7               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1787  00111C  0101               	movlb	1	; () banked
  1788  00111E  0101               	movlb	1	; () banked
  1789  001120  59A5               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1790  001122  A0D8               	btfss	status,0,c
  1791  001124  D00C               	goto	l3480
  1792                           
  1793                           ; BSR set to: 1
  1794  001126  0101               	movlb	1	; () banked
  1795  001128  0101               	movlb	1	; () banked
  1796  00112A  51A6               	movf	___lwmod@divisor& (0+255),w,b
  1797  00112C  0101               	movlb	1	; () banked
  1798  00112E  0101               	movlb	1	; () banked
  1799  001130  5FA4               	subwf	___lwmod@dividend& (0+255),f,b
  1800  001132  0101               	movlb	1	; () banked
  1801  001134  0101               	movlb	1	; () banked
  1802  001136  51A7               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1803  001138  0101               	movlb	1	; () banked
  1804  00113A  0101               	movlb	1	; () banked
  1805  00113C  5BA5               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1806  00113E                     l3480:
  1807                           
  1808                           ; BSR set to: 1
  1809  00113E  0101               	movlb	1	; () banked
  1810  001140  0101               	movlb	1	; () banked
  1811  001142  0101               	movlb	1	; () banked
  1812  001144  90D8               	bcf	status,0,c
  1813  001146  33A7               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1814  001148  33A6               	rrcf	___lwmod@divisor& (0+255),f,b
  1815                           
  1816                           ; BSR set to: 1
  1817  00114A  0101               	movlb	1	; () banked
  1818  00114C  0101               	movlb	1	; () banked
  1819  00114E  2FA9               	decfsz	___lwmod@counter& (0+255),f,b
  1820  001150  D7DC               	goto	l3476
  1821  001152                     l1010:
  1822                           
  1823                           ; BSR set to: 1
  1824  001152  C1A4  F1A4         	movff	___lwmod@dividend,?___lwmod
  1825  001156  C1A5  F1A5         	movff	___lwmod@dividend+1,?___lwmod+1
  1826                           
  1827                           ; BSR set to: 1
  1828  00115A  0012               	return	
  1829  00115C                     __end_of___lwmod:
  1830                           	opt stack 0
  1831                           tblptru	equ	0xFF8
  1832                           prodh	equ	0xFF4
  1833                           prodl	equ	0xFF3
  1834                           postinc0	equ	0xFEE
  1835                           wreg	equ	0xFE8
  1836                           indf1	equ	0xFE7
  1837                           fsr1h	equ	0xFE2
  1838                           fsr1l	equ	0xFE1
  1839                           indf2	equ	0xFDF
  1840                           postinc2	equ	0xFDE
  1841                           postdec2	equ	0xFDD
  1842                           fsr2h	equ	0xFDA
  1843                           fsr2l	equ	0xFD9
  1844                           status	equ	0xFD8
  1845                           
  1846 ;; *************** function _FromMainHigh_sendmsg *****************
  1847 ;; Defined at:
  1848 ;;		line 174 in file "../src/messages.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;  length          1    wreg     unsigned char 
  1851 ;;  msgtype         1   22[BANK1 ] unsigned char 
  1852 ;;  data            2   23[BANK1 ] PTR void 
  1853 ;;		 -> main@t1thread_data(2), 
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;  length          1   25[BANK1 ] unsigned char 
  1856 ;; Return value:  Size  Location     Type
  1857 ;;                  1    wreg      char 
  1858 ;; Registers used:
  1859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1860 ;; Tracked objects:
  1861 ;;		On entry : 0/0
  1862 ;;		On exit  : 0/0
  1863 ;;		Unchanged: 0/0
  1864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1865 ;;      Params:         0       0       3       0       0
  1866 ;;      Locals:         0       0       1       0       0
  1867 ;;      Temps:          0       0       0       0       0
  1868 ;;      Totals:         0       0       4       0       0
  1869 ;;Total ram usage:        4 bytes
  1870 ;; Hardware stack levels used:    1
  1871 ;; Hardware stack levels required when called:   12
  1872 ;; This function calls:
  1873 ;;		_send_msg
  1874 ;; This function is called by:
  1875 ;;		_timer1_lthread
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879                           	psect	text5
  1880  00186A                     __ptext5:
  1881                           	opt stack 0
  1882  00186A                     _FromMainHigh_sendmsg:
  1883                           	opt stack 17
  1884                           
  1885                           ; BSR set to: 1
  1886                           ;incstack = 0
  1887                           ;FromMainHigh_sendmsg@length stored from wreg
  1888  00186A  CFE8 F1BD          	movff	wreg,FromMainHigh_sendmsg@length
  1889                           
  1890                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1891  00186E  0101               	movlb	1	; () banked
  1892  001870  0E01               	movlw	high _FromMainHigh_MQ
  1893  001872  0101               	movlb	1	; () banked
  1894  001874  0101               	movlb	1	; () banked
  1895  001876  6FAF               	movwf	(send_msg@qptr+1)& (0+255),b
  1896  001878  0101               	movlb	1	; () banked
  1897  00187A  0E02               	movlw	low _FromMainHigh_MQ
  1898  00187C  0101               	movlb	1	; () banked
  1899  00187E  0101               	movlb	1	; () banked
  1900  001880  6FAE               	movwf	send_msg@qptr& (0+255),b
  1901  001882  C1BD  F1B0         	movff	FromMainHigh_sendmsg@length,send_msg@length
  1902  001886  C1BA  F1B1         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  1903  00188A  0101               	movlb	1	; () banked
  1904  00188C  0101               	movlb	1	; () banked
  1905  00188E  C1BC  F1B3         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  1906  001892  0101               	movlb	1	; () banked
  1907  001894  0101               	movlb	1	; () banked
  1908  001896  C1BB  F1B2         	movff	FromMainHigh_sendmsg@data,send_msg@data
  1909  00189A  EC4B  F005         	call	_send_msg	;wreg free
  1910  00189E  0012               	return	
  1911  0018A0                     __end_of_FromMainHigh_sendmsg:
  1912                           	opt stack 0
  1913                           tblptru	equ	0xFF8
  1914                           prodh	equ	0xFF4
  1915                           prodl	equ	0xFF3
  1916                           postinc0	equ	0xFEE
  1917                           wreg	equ	0xFE8
  1918                           indf1	equ	0xFE7
  1919                           fsr1h	equ	0xFE2
  1920                           fsr1l	equ	0xFE1
  1921                           indf2	equ	0xFDF
  1922                           postinc2	equ	0xFDE
  1923                           postdec2	equ	0xFDD
  1924                           fsr2h	equ	0xFDA
  1925                           fsr2l	equ	0xFD9
  1926                           status	equ	0xFD8
  1927                           
  1928 ;; *************** function _send_msg *****************
  1929 ;; Defined at:
  1930 ;;		line 24 in file "../src/messages.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  1933 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1934 ;;  length          1   12[BANK1 ] unsigned char 
  1935 ;;  msgtype         1   13[BANK1 ] unsigned char 
  1936 ;;  data            2   14[BANK1 ] PTR void 
  1937 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), main@t1thread_data(2), 
  1938 ;;		 -> main@ic(28), 
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;  qmsg            2   20[BANK1 ] PTR struct __msg
  1941 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  1942 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1943 ;;  tlength         2   17[BANK1 ] unsigned int 
  1944 ;;  slot            1   19[BANK1 ] unsigned char 
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  1    wreg      char 
  1947 ;; Registers used:
  1948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1954 ;;      Params:         0       0       6       0       0
  1955 ;;      Locals:         0       0       5       0       0
  1956 ;;      Temps:          0       0       1       0       0
  1957 ;;      Totals:         0       0      12       0       0
  1958 ;;Total ram usage:       12 bytes
  1959 ;; Hardware stack levels used:    1
  1960 ;; Hardware stack levels required when called:   11
  1961 ;; This function calls:
  1962 ;;		_memcpy
  1963 ;; This function is called by:
  1964 ;;		_FromMainHigh_sendmsg
  1965 ;;		_FromMainLow_sendmsg
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text6
  1970  000A96                     __ptext6:
  1971                           	opt stack 0
  1972  000A96                     _send_msg:
  1973                           	opt stack 17
  1974                           
  1975                           ;messages.c: 25: unsigned char slot;
  1976                           ;messages.c: 27: msg *qmsg;
  1977                           ;messages.c: 28: size_t tlength = length;
  1978                           
  1979                           ;incstack = 0
  1980  000A96  0101               	movlb	1	; () banked
  1981  000A98  0101               	movlb	1	; () banked
  1982  000A9A  C1B0  F1B5         	movff	send_msg@length,send_msg@tlength
  1983  000A9E  0101               	movlb	1	; () banked
  1984  000AA0  0101               	movlb	1	; () banked
  1985  000AA2  6BB6               	clrf	(send_msg@tlength+1)& (0+255),b
  1986                           
  1987                           ; BSR set to: 1
  1988                           ;messages.c: 38: slot = qptr->cur_write_ind;
  1989  000AA4  0101               	movlb	1	; () banked
  1990  000AA6  EE20 F034          	lfsr	2,52
  1991  000AAA  0101               	movlb	1	; () banked
  1992  000AAC  51AE               	movf	send_msg@qptr& (0+255),w,b
  1993  000AAE  26D9               	addwf	fsr2l,f,c
  1994  000AB0  0101               	movlb	1	; () banked
  1995  000AB2  51AF               	movf	(send_msg@qptr+1)& (0+255),w,b
  1996  000AB4  22DA               	addwfc	fsr2h,f,c
  1997  000AB6  50DF               	movf	indf2,w,c
  1998  000AB8  0101               	movlb	1	; () banked
  1999  000ABA  0101               	movlb	1	; () banked
  2000  000ABC  6FB7               	movwf	send_msg@slot& (0+255),b
  2001                           
  2002                           ; BSR set to: 1
  2003                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2004  000ABE  0101               	movlb	1	; () banked
  2005  000AC0  0101               	movlb	1	; () banked
  2006  000AC2  51B7               	movf	send_msg@slot& (0+255),w,b
  2007  000AC4  0D0D               	mullw	13
  2008  000AC6  50F3               	movf	prodl,w,c
  2009  000AC8  0101               	movlb	1	; () banked
  2010  000ACA  0101               	movlb	1	; () banked
  2011  000ACC  25AE               	addwf	send_msg@qptr& (0+255),w,b
  2012  000ACE  0101               	movlb	1	; () banked
  2013  000AD0  0101               	movlb	1	; () banked
  2014  000AD2  6FB8               	movwf	send_msg@qmsg& (0+255),b
  2015  000AD4  50F4               	movf	prodh,w,c
  2016  000AD6  0101               	movlb	1	; () banked
  2017  000AD8  0101               	movlb	1	; () banked
  2018  000ADA  21AF               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2019  000ADC  0101               	movlb	1	; () banked
  2020  000ADE  6FB9               	movwf	(send_msg@qmsg+1)& (0+255),b
  2021                           
  2022                           ; BSR set to: 1
  2023                           ;messages.c: 41: if (qmsg->full != 0) {
  2024  000AE0  C1B8  FFD9         	movff	send_msg@qmsg,fsr2l
  2025  000AE4  C1B9  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2026  000AE8  50DF               	movf	indf2,w,c
  2027  000AEA  B4D8               	btfsc	status,2,c
  2028  000AEC  D002               	goto	l3330
  2029                           
  2030                           ; BSR set to: 1
  2031                           ;messages.c: 42: return (-1);
  2032  000AEE  0EFF               	movlw	255
  2033  000AF0  0012               	return	
  2034  000AF2                     l3330:
  2035                           
  2036                           ; BSR set to: 1
  2037                           ;messages.c: 43: }
  2038                           ;messages.c: 46: qmsg->length = length;
  2039  000AF2  0101               	movlb	1	; () banked
  2040  000AF4  EE20 F001          	lfsr	2,1
  2041  000AF8  0101               	movlb	1	; () banked
  2042  000AFA  51B8               	movf	send_msg@qmsg& (0+255),w,b
  2043  000AFC  26D9               	addwf	fsr2l,f,c
  2044  000AFE  0101               	movlb	1	; () banked
  2045  000B00  51B9               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2046  000B02  22DA               	addwfc	fsr2h,f,c
  2047  000B04  0101               	movlb	1	; () banked
  2048  000B06  C1B0  FFDF         	movff	send_msg@length,indf2
  2049                           
  2050                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2051  000B0A  0101               	movlb	1	; () banked
  2052  000B0C  EE20 F002          	lfsr	2,2
  2053  000B10  0101               	movlb	1	; () banked
  2054  000B12  51B8               	movf	send_msg@qmsg& (0+255),w,b
  2055  000B14  26D9               	addwf	fsr2l,f,c
  2056  000B16  0101               	movlb	1	; () banked
  2057  000B18  51B9               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2058  000B1A  22DA               	addwfc	fsr2h,f,c
  2059  000B1C  0101               	movlb	1	; () banked
  2060  000B1E  C1B1  FFDF         	movff	send_msg@msgtype,indf2
  2061                           
  2062                           ; BSR set to: 1
  2063                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2064  000B22  0E03               	movlw	3
  2065  000B24  0101               	movlb	1	; () banked
  2066  000B26  0101               	movlb	1	; () banked
  2067  000B28  25B8               	addwf	send_msg@qmsg& (0+255),w,b
  2068  000B2A  0101               	movlb	1	; () banked
  2069  000B2C  0101               	movlb	1	; () banked
  2070  000B2E  6FA4               	movwf	memcpy@d1& (0+255),b
  2071  000B30  0E00               	movlw	0
  2072  000B32  0101               	movlb	1	; () banked
  2073  000B34  0101               	movlb	1	; () banked
  2074  000B36  21B9               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2075  000B38  0101               	movlb	1	; () banked
  2076  000B3A  6FA5               	movwf	(memcpy@d1+1)& (0+255),b
  2077  000B3C  0101               	movlb	1	; () banked
  2078  000B3E  0101               	movlb	1	; () banked
  2079  000B40  C1B3  F1A7         	movff	send_msg@data+1,memcpy@s1+1
  2080  000B44  0101               	movlb	1	; () banked
  2081  000B46  0101               	movlb	1	; () banked
  2082  000B48  C1B2  F1A6         	movff	send_msg@data,memcpy@s1
  2083  000B4C  C1B5  F1A8         	movff	send_msg@tlength,memcpy@n
  2084  000B50  C1B6  F1A9         	movff	send_msg@tlength+1,memcpy@n+1
  2085  000B54  EC8B  F00A         	call	_memcpy	;wreg free
  2086                           
  2087                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2088  000B58  0101               	movlb	1	; () banked
  2089  000B5A  EE20 F034          	lfsr	2,52
  2090  000B5E  0101               	movlb	1	; () banked
  2091  000B60  51AE               	movf	send_msg@qptr& (0+255),w,b
  2092  000B62  26D9               	addwf	fsr2l,f,c
  2093  000B64  0101               	movlb	1	; () banked
  2094  000B66  51AF               	movf	(send_msg@qptr+1)& (0+255),w,b
  2095  000B68  22DA               	addwfc	fsr2h,f,c
  2096  000B6A  0101               	movlb	1	; () banked
  2097  000B6C  EE10 F034          	lfsr	1,52
  2098  000B70  0101               	movlb	1	; () banked
  2099  000B72  51AE               	movf	send_msg@qptr& (0+255),w,b
  2100  000B74  26E1               	addwf	fsr1l,f,c
  2101  000B76  0101               	movlb	1	; () banked
  2102  000B78  51AF               	movf	(send_msg@qptr+1)& (0+255),w,b
  2103  000B7A  22E2               	addwfc	fsr1h,f,c
  2104  000B7C  50E7               	movf	indf1,w,c
  2105  000B7E  0101               	movlb	1	; () banked
  2106  000B80  6FB4               	movwf	??_send_msg& (0+255),b
  2107  000B82  0101               	movlb	1	; () banked
  2108  000B84  29B4               	incf	??_send_msg& (0+255),w,b
  2109  000B86  0B03               	andlw	3
  2110  000B88  6EDF               	movwf	indf2,c
  2111                           
  2112                           ; BSR set to: 1
  2113                           ;messages.c: 59: qmsg->full = 1;
  2114  000B8A  C1B8  FFD9         	movff	send_msg@qmsg,fsr2l
  2115  000B8E  C1B9  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2116  000B92  0E01               	movlw	1
  2117  000B94  6EDF               	movwf	indf2,c
  2118                           
  2119                           ; BSR set to: 1
  2120                           ;messages.c: 60: return (1);
  2121  000B96  0E01               	movlw	1
  2122  000B98  0012               	return	
  2123  000B9A                     __end_of_send_msg:
  2124                           	opt stack 0
  2125                           tblptru	equ	0xFF8
  2126                           prodh	equ	0xFF4
  2127                           prodl	equ	0xFF3
  2128                           postinc0	equ	0xFEE
  2129                           wreg	equ	0xFE8
  2130                           indf1	equ	0xFE7
  2131                           fsr1h	equ	0xFE2
  2132                           fsr1l	equ	0xFE1
  2133                           indf2	equ	0xFDF
  2134                           postinc2	equ	0xFDE
  2135                           postdec2	equ	0xFDD
  2136                           fsr2h	equ	0xFDA
  2137                           fsr2l	equ	0xFD9
  2138                           status	equ	0xFD8
  2139                           
  2140 ;; *************** function _timer0_lthread *****************
  2141 ;; Defined at:
  2142 ;;		line 9 in file "../src/timer0_thread.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2145 ;;		 -> main@t0thread_data(2), 
  2146 ;;  msgtype         2    2[BANK1 ] int 
  2147 ;;  length          2    4[BANK1 ] int 
  2148 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2149 ;;		 -> main@msgbuffer(11), 
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;  msgval          2    8[BANK1 ] PTR unsigned int 
  2152 ;;		 -> main@msgbuffer(11), 
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  2    0[BANK1 ] int 
  2155 ;; Registers used:
  2156 ;;		wreg, status,2, status,0
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2162 ;;      Params:         0       0       8       0       0
  2163 ;;      Locals:         0       0       2       0       0
  2164 ;;      Temps:          0       0       0       0       0
  2165 ;;      Totals:         0       0      10       0       0
  2166 ;;Total ram usage:       10 bytes
  2167 ;; Hardware stack levels used:    1
  2168 ;; Hardware stack levels required when called:   10
  2169 ;; This function calls:
  2170 ;;		Nothing
  2171 ;; This function is called by:
  2172 ;;		_main
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           	psect	text7
  2177  001A68                     __ptext7:
  2178                           	opt stack 0
  2179  001A68                     _timer0_lthread:
  2180                           	opt stack 20
  2181                           
  2182                           ;timer0_thread.c: 10: unsigned int *msgval;
  2183                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2184                           
  2185                           ; BSR set to: 1
  2186                           ;incstack = 0
  2187  001A68  0101               	movlb	1	; () banked
  2188  001A6A  0101               	movlb	1	; () banked
  2189  001A6C  C1AB  F1AD         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2190  001A70  0101               	movlb	1	; () banked
  2191  001A72  0101               	movlb	1	; () banked
  2192  001A74  C1AA  F1AC         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2193                           
  2194                           ; BSR set to: 1
  2195  001A78  0012               	return	
  2196  001A7A                     __end_of_timer0_lthread:
  2197                           	opt stack 0
  2198                           tblptru	equ	0xFF8
  2199                           prodh	equ	0xFF4
  2200                           prodl	equ	0xFF3
  2201                           postinc0	equ	0xFEE
  2202                           wreg	equ	0xFE8
  2203                           indf1	equ	0xFE7
  2204                           fsr1h	equ	0xFE2
  2205                           fsr1l	equ	0xFE1
  2206                           indf2	equ	0xFDF
  2207                           postinc2	equ	0xFDE
  2208                           postdec2	equ	0xFDD
  2209                           fsr2h	equ	0xFDA
  2210                           fsr2l	equ	0xFD9
  2211                           status	equ	0xFD8
  2212                           
  2213 ;; *************** function _init_uart_recv *****************
  2214 ;; Defined at:
  2215 ;;		line 12 in file "../src/my_uart.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;  uc              2    0[BANK1 ] PTR struct __uart_comm
  2218 ;;		 -> main@uc(6), 
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;		None
  2221 ;; Return value:  Size  Location     Type
  2222 ;;		None               void
  2223 ;; Registers used:
  2224 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2230 ;;      Params:         0       0       2       0       0
  2231 ;;      Locals:         0       0       0       0       0
  2232 ;;      Temps:          0       0       0       0       0
  2233 ;;      Totals:         0       0       2       0       0
  2234 ;;Total ram usage:        2 bytes
  2235 ;; Hardware stack levels used:    1
  2236 ;; Hardware stack levels required when called:   10
  2237 ;; This function calls:
  2238 ;;		Nothing
  2239 ;; This function is called by:
  2240 ;;		_main
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           	psect	text8
  2245  0019CA                     __ptext8:
  2246                           	opt stack 0
  2247  0019CA                     _init_uart_recv:
  2248                           	opt stack 20
  2249                           
  2250                           ;my_uart.c: 13: uc_ptr = uc;
  2251                           
  2252                           ; BSR set to: 1
  2253                           ;incstack = 0
  2254  0019CA  0101               	movlb	1	; () banked
  2255  0019CC  0100               	movlb	0	; () banked
  2256  0019CE  C1A5  F0EA         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2257  0019D2  0101               	movlb	1	; () banked
  2258  0019D4  0100               	movlb	0	; () banked
  2259  0019D6  C1A4  F0E9         	movff	init_uart_recv@uc,_uc_ptr
  2260                           
  2261                           ; BSR set to: 0
  2262                           ;my_uart.c: 14: uc_ptr->Tx_buflen = 0;
  2263  0019DA  0100               	movlb	0	; () banked
  2264  0019DC  EE20 F004          	lfsr	2,4
  2265  0019E0  0100               	movlb	0	; () banked
  2266  0019E2  51E9               	movf	_uc_ptr& (0+255),w,b
  2267  0019E4  26D9               	addwf	fsr2l,f,c
  2268  0019E6  0100               	movlb	0	; () banked
  2269  0019E8  51EA               	movf	(_uc_ptr+1)& (0+255),w,b
  2270  0019EA  22DA               	addwfc	fsr2h,f,c
  2271  0019EC  0E00               	movlw	0
  2272  0019EE  6EDF               	movwf	indf2,c
  2273                           
  2274                           ; BSR set to: 0
  2275  0019F0  0012               	return	
  2276  0019F2                     __end_of_init_uart_recv:
  2277                           	opt stack 0
  2278                           tblptru	equ	0xFF8
  2279                           prodh	equ	0xFF4
  2280                           prodl	equ	0xFF3
  2281                           postinc0	equ	0xFEE
  2282                           wreg	equ	0xFE8
  2283                           indf1	equ	0xFE7
  2284                           fsr1h	equ	0xFE2
  2285                           fsr1l	equ	0xFE1
  2286                           indf2	equ	0xFDF
  2287                           postinc2	equ	0xFDE
  2288                           postdec2	equ	0xFDD
  2289                           fsr2h	equ	0xFDA
  2290                           fsr2l	equ	0xFD9
  2291                           status	equ	0xFD8
  2292                           
  2293 ;; *************** function _init_timer1_lthread *****************
  2294 ;; Defined at:
  2295 ;;		line 6 in file "../src/timer1_thread.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  2298 ;;		 -> main@t1thread_data(2), 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;		None
  2301 ;; Return value:  Size  Location     Type
  2302 ;;		None               void
  2303 ;; Registers used:
  2304 ;;		wreg, fsr2l, fsr2h
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2310 ;;      Params:         0       0       2       0       0
  2311 ;;      Locals:         0       0       0       0       0
  2312 ;;      Temps:          0       0       0       0       0
  2313 ;;      Totals:         0       0       2       0       0
  2314 ;;Total ram usage:        2 bytes
  2315 ;; Hardware stack levels used:    1
  2316 ;; Hardware stack levels required when called:   10
  2317 ;; This function calls:
  2318 ;;		Nothing
  2319 ;; This function is called by:
  2320 ;;		_main
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           	psect	text9
  2325  001A7A                     __ptext9:
  2326                           	opt stack 0
  2327  001A7A                     _init_timer1_lthread:
  2328                           	opt stack 20
  2329                           
  2330                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;incstack = 0
  2334  001A7A  C1A4  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2335  001A7E  C1A5  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2336  001A82  0E00               	movlw	0
  2337  001A84  6EDE               	movwf	postinc2,c
  2338  001A86  0E00               	movlw	0
  2339  001A88  6EDD               	movwf	postdec2,c
  2340  001A8A  0012               	return	
  2341  001A8C                     __end_of_init_timer1_lthread:
  2342                           	opt stack 0
  2343                           tblptru	equ	0xFF8
  2344                           prodh	equ	0xFF4
  2345                           prodl	equ	0xFF3
  2346                           postinc0	equ	0xFEE
  2347                           wreg	equ	0xFE8
  2348                           indf1	equ	0xFE7
  2349                           fsr1h	equ	0xFE2
  2350                           fsr1l	equ	0xFE1
  2351                           indf2	equ	0xFDF
  2352                           postinc2	equ	0xFDE
  2353                           postdec2	equ	0xFDD
  2354                           fsr2h	equ	0xFDA
  2355                           fsr2l	equ	0xFD9
  2356                           status	equ	0xFD8
  2357                           
  2358 ;; *************** function _init_queues *****************
  2359 ;; Defined at:
  2360 ;;		line 194 in file "../src/messages.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;		None               void
  2367 ;; Registers used:
  2368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2374 ;;      Params:         0       0       0       0       0
  2375 ;;      Locals:         0       0       0       0       0
  2376 ;;      Temps:          0       0       1       0       0
  2377 ;;      Totals:         0       0       1       0       0
  2378 ;;Total ram usage:        1 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:   11
  2381 ;; This function calls:
  2382 ;;		_init_queue
  2383 ;; This function is called by:
  2384 ;;		_main
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text10
  2389  00143E                     __ptext10:
  2390                           	opt stack 0
  2391  00143E                     _init_queues:
  2392                           	opt stack 19
  2393                           
  2394                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2395                           
  2396                           ;incstack = 0
  2397  00143E  0101               	movlb	1	; () banked
  2398  001440  6FA8               	movwf	??_init_queues& (0+255),b
  2399  001442  0E00               	movlw	0
  2400  001444  6E4D               	movwf	_MQ_Main_Willing_to_block,c
  2401  001446  0101               	movlb	1	; () banked
  2402  001448  51A8               	movf	??_init_queues& (0+255),w,b
  2403                           
  2404                           ; BSR set to: 1
  2405                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2406  00144A  0100               	movlb	0	; () banked
  2407  00144C  0E00               	movlw	high _ToMainLow_MQ
  2408  00144E  0101               	movlb	1	; () banked
  2409  001450  0101               	movlb	1	; () banked
  2410  001452  6FA5               	movwf	(init_queue@qptr+1)& (0+255),b
  2411  001454  0100               	movlb	0	; () banked
  2412  001456  0E80               	movlw	low _ToMainLow_MQ
  2413  001458  0101               	movlb	1	; () banked
  2414  00145A  0101               	movlb	1	; () banked
  2415  00145C  6FA4               	movwf	init_queue@qptr& (0+255),b
  2416  00145E  EC6D  F009         	call	_init_queue	;wreg free
  2417                           
  2418                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2419  001462  0101               	movlb	1	; () banked
  2420  001464  0E01               	movlw	high _ToMainHigh_MQ
  2421  001466  0101               	movlb	1	; () banked
  2422  001468  0101               	movlb	1	; () banked
  2423  00146A  6FA5               	movwf	(init_queue@qptr+1)& (0+255),b
  2424  00146C  0101               	movlb	1	; () banked
  2425  00146E  0E6E               	movlw	low _ToMainHigh_MQ
  2426  001470  0101               	movlb	1	; () banked
  2427  001472  0101               	movlb	1	; () banked
  2428  001474  6FA4               	movwf	init_queue@qptr& (0+255),b
  2429  001476  EC6D  F009         	call	_init_queue	;wreg free
  2430                           
  2431                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2432  00147A  0101               	movlb	1	; () banked
  2433  00147C  0E01               	movlw	high _FromMainLow_MQ
  2434  00147E  0101               	movlb	1	; () banked
  2435  001480  0101               	movlb	1	; () banked
  2436  001482  6FA5               	movwf	(init_queue@qptr+1)& (0+255),b
  2437  001484  0101               	movlb	1	; () banked
  2438  001486  0E38               	movlw	low _FromMainLow_MQ
  2439  001488  0101               	movlb	1	; () banked
  2440  00148A  0101               	movlb	1	; () banked
  2441  00148C  6FA4               	movwf	init_queue@qptr& (0+255),b
  2442  00148E  EC6D  F009         	call	_init_queue	;wreg free
  2443                           
  2444                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2445  001492  0101               	movlb	1	; () banked
  2446  001494  0E01               	movlw	high _FromMainHigh_MQ
  2447  001496  0101               	movlb	1	; () banked
  2448  001498  0101               	movlb	1	; () banked
  2449  00149A  6FA5               	movwf	(init_queue@qptr+1)& (0+255),b
  2450  00149C  0101               	movlb	1	; () banked
  2451  00149E  0E02               	movlw	low _FromMainHigh_MQ
  2452  0014A0  0101               	movlb	1	; () banked
  2453  0014A2  0101               	movlb	1	; () banked
  2454  0014A4  6FA4               	movwf	init_queue@qptr& (0+255),b
  2455  0014A6  EC6D  F009         	call	_init_queue	;wreg free
  2456  0014AA  0012               	return	
  2457  0014AC                     __end_of_init_queues:
  2458                           	opt stack 0
  2459                           tblptru	equ	0xFF8
  2460                           prodh	equ	0xFF4
  2461                           prodl	equ	0xFF3
  2462                           postinc0	equ	0xFEE
  2463                           wreg	equ	0xFE8
  2464                           indf1	equ	0xFE7
  2465                           fsr1h	equ	0xFE2
  2466                           fsr1l	equ	0xFE1
  2467                           indf2	equ	0xFDF
  2468                           postinc2	equ	0xFDE
  2469                           postdec2	equ	0xFDD
  2470                           fsr2h	equ	0xFDA
  2471                           fsr2l	equ	0xFD9
  2472                           status	equ	0xFD8
  2473                           
  2474 ;; *************** function _init_queue *****************
  2475 ;; Defined at:
  2476 ;;		line 14 in file "../src/messages.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2479 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;  i               1    3[BANK1 ] unsigned char 
  2482 ;; Return value:  Size  Location     Type
  2483 ;;		None               void
  2484 ;; Registers used:
  2485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2491 ;;      Params:         0       0       2       0       0
  2492 ;;      Locals:         0       0       1       0       0
  2493 ;;      Temps:          0       0       1       0       0
  2494 ;;      Totals:         0       0       4       0       0
  2495 ;;Total ram usage:        4 bytes
  2496 ;; Hardware stack levels used:    1
  2497 ;; Hardware stack levels required when called:   10
  2498 ;; This function calls:
  2499 ;;		Nothing
  2500 ;; This function is called by:
  2501 ;;		_init_queues
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           	psect	text11
  2506  0012DA                     __ptext11:
  2507                           	opt stack 0
  2508  0012DA                     _init_queue:
  2509                           	opt stack 19
  2510                           
  2511                           ;messages.c: 15: unsigned char i;
  2512                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2513                           
  2514                           ;incstack = 0
  2515  0012DA  0101               	movlb	1	; () banked
  2516  0012DC  EE20 F034          	lfsr	2,52
  2517  0012E0  0101               	movlb	1	; () banked
  2518  0012E2  51A4               	movf	init_queue@qptr& (0+255),w,b
  2519  0012E4  26D9               	addwf	fsr2l,f,c
  2520  0012E6  0101               	movlb	1	; () banked
  2521  0012E8  51A5               	movf	(init_queue@qptr+1)& (0+255),w,b
  2522  0012EA  22DA               	addwfc	fsr2h,f,c
  2523  0012EC  0E00               	movlw	0
  2524  0012EE  6EDF               	movwf	indf2,c
  2525                           
  2526                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2527  0012F0  0101               	movlb	1	; () banked
  2528  0012F2  EE20 F035          	lfsr	2,53
  2529  0012F6  0101               	movlb	1	; () banked
  2530  0012F8  51A4               	movf	init_queue@qptr& (0+255),w,b
  2531  0012FA  26D9               	addwf	fsr2l,f,c
  2532  0012FC  0101               	movlb	1	; () banked
  2533  0012FE  51A5               	movf	(init_queue@qptr+1)& (0+255),w,b
  2534  001300  22DA               	addwfc	fsr2h,f,c
  2535  001302  0E00               	movlw	0
  2536  001304  6EDF               	movwf	indf2,c
  2537                           
  2538                           ; BSR set to: 1
  2539                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2540  001306  0101               	movlb	1	; () banked
  2541  001308  6FA6               	movwf	??_init_queue& (0+255),b
  2542  00130A  0E00               	movlw	0
  2543  00130C  0101               	movlb	1	; () banked
  2544  00130E  0101               	movlb	1	; () banked
  2545  001310  6FA7               	movwf	init_queue@i& (0+255),b
  2546  001312  0101               	movlb	1	; () banked
  2547  001314  51A6               	movf	??_init_queue& (0+255),w,b
  2548                           
  2549                           ; BSR set to: 1
  2550  001316  0E03               	movlw	3
  2551  001318  0101               	movlb	1	; () banked
  2552  00131A  0101               	movlb	1	; () banked
  2553  00131C  65A7               	cpfsgt	init_queue@i& (0+255),b
  2554  00131E  D001               	goto	l3312
  2555  001320  0012               	return	
  2556  001322                     l3312:
  2557                           
  2558                           ; BSR set to: 1
  2559                           ;messages.c: 20: qptr->queue[i].full = 0;
  2560  001322  0101               	movlb	1	; () banked
  2561  001324  0101               	movlb	1	; () banked
  2562  001326  51A7               	movf	init_queue@i& (0+255),w,b
  2563  001328  0D0D               	mullw	13
  2564  00132A  50F3               	movf	prodl,w,c
  2565  00132C  0101               	movlb	1	; () banked
  2566  00132E  0101               	movlb	1	; () banked
  2567  001330  25A4               	addwf	init_queue@qptr& (0+255),w,b
  2568  001332  6ED9               	movwf	fsr2l,c
  2569  001334  50F4               	movf	prodh,w,c
  2570  001336  0101               	movlb	1	; () banked
  2571  001338  0101               	movlb	1	; () banked
  2572  00133A  21A5               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2573  00133C  6EDA               	movwf	fsr2h,c
  2574  00133E  0E00               	movlw	0
  2575  001340  6EDF               	movwf	indf2,c
  2576                           
  2577                           ; BSR set to: 1
  2578  001342  0101               	movlb	1	; () banked
  2579  001344  0101               	movlb	1	; () banked
  2580  001346  2BA7               	incf	init_queue@i& (0+255),f,b
  2581                           
  2582                           ; BSR set to: 1
  2583  001348  0E03               	movlw	3
  2584  00134A  0101               	movlb	1	; () banked
  2585  00134C  0101               	movlb	1	; () banked
  2586  00134E  65A7               	cpfsgt	init_queue@i& (0+255),b
  2587  001350  D7E8               	goto	l3312
  2588  001352  0012               	return	
  2589  001354                     __end_of_init_queue:
  2590                           	opt stack 0
  2591                           tblptru	equ	0xFF8
  2592                           prodh	equ	0xFF4
  2593                           prodl	equ	0xFF3
  2594                           postinc0	equ	0xFEE
  2595                           wreg	equ	0xFE8
  2596                           indf1	equ	0xFE7
  2597                           fsr1h	equ	0xFE2
  2598                           fsr1l	equ	0xFE1
  2599                           indf2	equ	0xFDF
  2600                           postinc2	equ	0xFDE
  2601                           postdec2	equ	0xFDD
  2602                           fsr2h	equ	0xFDA
  2603                           fsr2l	equ	0xFD9
  2604                           status	equ	0xFD8
  2605                           
  2606 ;; *************** function _init_i2c *****************
  2607 ;; Defined at:
  2608 ;;		line 245 in file "../src/my_i2c.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  2611 ;;		 -> main@ic(28), 
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;		None
  2614 ;; Return value:  Size  Location     Type
  2615 ;;		None               void
  2616 ;; Registers used:
  2617 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2623 ;;      Params:         0       0       2       0       0
  2624 ;;      Locals:         0       0       0       0       0
  2625 ;;      Temps:          0       0       0       0       0
  2626 ;;      Totals:         0       0       2       0       0
  2627 ;;Total ram usage:        2 bytes
  2628 ;; Hardware stack levels used:    1
  2629 ;; Hardware stack levels required when called:   10
  2630 ;; This function calls:
  2631 ;;		Nothing
  2632 ;; This function is called by:
  2633 ;;		_main
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           	psect	text12
  2638  0015D2                     __ptext12:
  2639                           	opt stack 0
  2640  0015D2                     _init_i2c:
  2641                           	opt stack 20
  2642                           
  2643                           ;my_i2c.c: 246: ic_ptr = ic;
  2644                           
  2645                           ; BSR set to: 1
  2646                           ;incstack = 0
  2647  0015D2  0101               	movlb	1	; () banked
  2648  0015D4  C1A5  F054         	movff	init_i2c@ic+1,_ic_ptr+1
  2649  0015D8  0101               	movlb	1	; () banked
  2650  0015DA  C1A4  F053         	movff	init_i2c@ic,_ic_ptr
  2651                           
  2652                           ; BSR set to: 1
  2653                           ;my_i2c.c: 247: ic_ptr->buflen = 0;
  2654  0015DE  EE20 F00A          	lfsr	2,10
  2655  0015E2  5053               	movf	_ic_ptr,w,c
  2656  0015E4  26D9               	addwf	fsr2l,f,c
  2657  0015E6  5054               	movf	_ic_ptr+1,w,c
  2658  0015E8  22DA               	addwfc	fsr2h,f,c
  2659  0015EA  0E00               	movlw	0
  2660  0015EC  6EDF               	movwf	indf2,c
  2661                           
  2662                           ; BSR set to: 1
  2663                           ;my_i2c.c: 248: ic_ptr->event_count = 0;
  2664  0015EE  EE20 F00B          	lfsr	2,11
  2665  0015F2  5053               	movf	_ic_ptr,w,c
  2666  0015F4  26D9               	addwf	fsr2l,f,c
  2667  0015F6  5054               	movf	_ic_ptr+1,w,c
  2668  0015F8  22DA               	addwfc	fsr2h,f,c
  2669  0015FA  0E00               	movlw	0
  2670  0015FC  6EDF               	movwf	indf2,c
  2671                           
  2672                           ; BSR set to: 1
  2673                           ;my_i2c.c: 249: ic_ptr->status = 0x5;
  2674  0015FE  EE20 F00C          	lfsr	2,12
  2675  001602  5053               	movf	_ic_ptr,w,c
  2676  001604  26D9               	addwf	fsr2l,f,c
  2677  001606  5054               	movf	_ic_ptr+1,w,c
  2678  001608  22DA               	addwfc	fsr2h,f,c
  2679  00160A  0E05               	movlw	5
  2680  00160C  6EDF               	movwf	indf2,c
  2681                           
  2682                           ; BSR set to: 1
  2683                           ;my_i2c.c: 250: ic_ptr->error_count = 0;
  2684  00160E  EE20 F00E          	lfsr	2,14
  2685  001612  5053               	movf	_ic_ptr,w,c
  2686  001614  26D9               	addwf	fsr2l,f,c
  2687  001616  5054               	movf	_ic_ptr+1,w,c
  2688  001618  22DA               	addwfc	fsr2h,f,c
  2689  00161A  0E00               	movlw	0
  2690  00161C  6EDF               	movwf	indf2,c
  2691                           
  2692                           ; BSR set to: 1
  2693  00161E  0012               	return	
  2694  001620                     __end_of_init_i2c:
  2695                           	opt stack 0
  2696                           tblptru	equ	0xFF8
  2697                           prodh	equ	0xFF4
  2698                           prodl	equ	0xFF3
  2699                           postinc0	equ	0xFEE
  2700                           wreg	equ	0xFE8
  2701                           indf1	equ	0xFE7
  2702                           fsr1h	equ	0xFE2
  2703                           fsr1l	equ	0xFE1
  2704                           indf2	equ	0xFDF
  2705                           postinc2	equ	0xFDE
  2706                           postdec2	equ	0xFDD
  2707                           fsr2h	equ	0xFDA
  2708                           fsr2l	equ	0xFD9
  2709                           status	equ	0xFD8
  2710                           
  2711 ;; *************** function _i2c_configure_slave *****************
  2712 ;; Defined at:
  2713 ;;		line 256 in file "../src/my_i2c.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;  addr            1    wreg     unsigned char 
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;  addr            1    0[BANK1 ] unsigned char 
  2718 ;; Return value:  Size  Location     Type
  2719 ;;		None               void
  2720 ;; Registers used:
  2721 ;;		wreg, status,2, status,0
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2727 ;;      Params:         0       0       0       0       0
  2728 ;;      Locals:         0       0       1       0       0
  2729 ;;      Temps:          0       0       0       0       0
  2730 ;;      Totals:         0       0       1       0       0
  2731 ;;Total ram usage:        1 bytes
  2732 ;; Hardware stack levels used:    1
  2733 ;; Hardware stack levels required when called:   10
  2734 ;; This function calls:
  2735 ;;		Nothing
  2736 ;; This function is called by:
  2737 ;;		_main
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           	psect	text13
  2742  0019F2                     __ptext13:
  2743                           	opt stack 0
  2744  0019F2                     _i2c_configure_slave:
  2745                           	opt stack 20
  2746                           
  2747                           ; BSR set to: 1
  2748                           ;incstack = 0
  2749                           ;i2c_configure_slave@addr stored from wreg
  2750  0019F2  CFE8 F1A4          	movff	wreg,i2c_configure_slave@addr
  2751                           
  2752                           ;my_i2c.c: 268: TRISCbits.TRISC3 = 1;
  2753  0019F6  8694               	bsf	3988,3,c	;volatile
  2754                           
  2755                           ;my_i2c.c: 269: TRISCbits.TRISC4 = 1;
  2756  0019F8  8894               	bsf	3988,4,c	;volatile
  2757                           
  2758                           ;my_i2c.c: 274: SSPADD = addr;
  2759  0019FA  C1A4  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  2760                           
  2761                           ;my_i2c.c: 276: SSPSTAT = 0x0;
  2762  0019FE  0E00               	movlw	0
  2763  001A00  6EC7               	movwf	4039,c	;volatile
  2764                           
  2765                           ;my_i2c.c: 277: SSPCON1 = 0x0;
  2766  001A02  0E00               	movlw	0
  2767  001A04  6EC6               	movwf	4038,c	;volatile
  2768                           
  2769                           ;my_i2c.c: 278: SSPCON2 = 0x0;
  2770  001A06  0E00               	movlw	0
  2771  001A08  6EC5               	movwf	4037,c	;volatile
  2772                           
  2773                           ;my_i2c.c: 279: SSPCON1 |= 0x0E;
  2774  001A0A  0E0E               	movlw	14
  2775  001A0C  12C6               	iorwf	4038,f,c	;volatile
  2776                           
  2777                           ;my_i2c.c: 280: SSPSTAT |= 0b10000000;
  2778  001A0E  8EC7               	bsf	4039,7,c	;volatile
  2779                           
  2780                           ;my_i2c.c: 283: TRISCbits.TRISC3 = 1;
  2781  001A10  8694               	bsf	3988,3,c	;volatile
  2782                           
  2783                           ;my_i2c.c: 284: TRISCbits.TRISC4 = 1;
  2784  001A12  8894               	bsf	3988,4,c	;volatile
  2785                           
  2786                           ;my_i2c.c: 305: SSPCON2bits.SEN = 1;
  2787  001A14  80C5               	bsf	4037,0,c	;volatile
  2788                           
  2789                           ;my_i2c.c: 306: SSPCON1 |= 0b00100000;
  2790  001A16  8AC6               	bsf	4038,5,c	;volatile
  2791  001A18  0012               	return	
  2792  001A1A                     __end_of_i2c_configure_slave:
  2793                           	opt stack 0
  2794                           tblptru	equ	0xFF8
  2795                           prodh	equ	0xFF4
  2796                           prodl	equ	0xFF3
  2797                           postinc0	equ	0xFEE
  2798                           wreg	equ	0xFE8
  2799                           indf1	equ	0xFE7
  2800                           fsr1h	equ	0xFE2
  2801                           fsr1l	equ	0xFE1
  2802                           indf2	equ	0xFDF
  2803                           postinc2	equ	0xFDE
  2804                           postdec2	equ	0xFDD
  2805                           fsr2h	equ	0xFDA
  2806                           fsr2l	equ	0xFD9
  2807                           status	equ	0xFD8
  2808                           
  2809 ;; *************** function _enable_interrupts *****************
  2810 ;; Defined at:
  2811 ;;		line 15 in file "../src/interrupts.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;		None
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;		None
  2816 ;; Return value:  Size  Location     Type
  2817 ;;		None               void
  2818 ;; Registers used:
  2819 ;;		None
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2825 ;;      Params:         0       0       0       0       0
  2826 ;;      Locals:         0       0       0       0       0
  2827 ;;      Temps:          0       0       0       0       0
  2828 ;;      Totals:         0       0       0       0       0
  2829 ;;Total ram usage:        0 bytes
  2830 ;; Hardware stack levels used:    1
  2831 ;; Hardware stack levels required when called:   10
  2832 ;; This function calls:
  2833 ;;		Nothing
  2834 ;; This function is called by:
  2835 ;;		_main
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           	psect	text14
  2840  001AE6                     __ptext14:
  2841                           	opt stack 0
  2842  001AE6                     _enable_interrupts:
  2843                           	opt stack 20
  2844                           
  2845                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  2846                           
  2847                           ;incstack = 0
  2848  001AE6  8ED0               	bsf	4048,7,c	;volatile
  2849                           
  2850                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  2851  001AE8  8EF2               	bsf	intcon,7,c	;volatile
  2852                           
  2853                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  2854  001AEA  8CF2               	bsf	intcon,6,c	;volatile
  2855  001AEC  0012               	return	
  2856  001AEE                     __end_of_enable_interrupts:
  2857                           	opt stack 0
  2858                           tblptru	equ	0xFF8
  2859                           prodh	equ	0xFF4
  2860                           prodl	equ	0xFF3
  2861                           intcon	equ	0xFF2
  2862                           postinc0	equ	0xFEE
  2863                           wreg	equ	0xFE8
  2864                           indf1	equ	0xFE7
  2865                           fsr1h	equ	0xFE2
  2866                           fsr1l	equ	0xFE1
  2867                           indf2	equ	0xFDF
  2868                           postinc2	equ	0xFDE
  2869                           postdec2	equ	0xFDD
  2870                           fsr2h	equ	0xFDA
  2871                           fsr2l	equ	0xFD9
  2872                           status	equ	0xFD8
  2873                           
  2874 ;; *************** function _block_on_To_msgqueues *****************
  2875 ;; Defined at:
  2876 ;;		line 258 in file "../src/messages.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;		None
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;		None
  2881 ;; Return value:  Size  Location     Type
  2882 ;;		None               void
  2883 ;; Registers used:
  2884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2890 ;;      Params:         0       0       0       0       0
  2891 ;;      Locals:         0       0       0       0       0
  2892 ;;      Temps:          0       0       1       0       0
  2893 ;;      Totals:         0       0       1       0       0
  2894 ;;Total ram usage:        1 bytes
  2895 ;; Hardware stack levels used:    1
  2896 ;; Hardware stack levels required when called:   13
  2897 ;; This function calls:
  2898 ;;		_Delay1KTCYx
  2899 ;;		_check_msg
  2900 ;;		_in_main
  2901 ;; This function is called by:
  2902 ;;		_main
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           	psect	text15
  2907  0011DE                     __ptext15:
  2908                           	opt stack 0
  2909  0011DE                     _block_on_To_msgqueues:
  2910                           	opt stack 17
  2911                           
  2912                           ;messages.c: 259: if (!in_main()) {
  2913                           
  2914                           ;incstack = 0
  2915  0011DE  EC56  F00B         	call	_in_main	;wreg free
  2916  0011E2  0101               	movlb	1	; () banked
  2917  0011E4  0101               	movlb	1	; () banked
  2918  0011E6  51A9               	movf	(?_in_main+1)& (0+255),w,b
  2919  0011E8  0101               	movlb	1	; () banked
  2920  0011EA  11A8               	iorwf	?_in_main& (0+255),w,b
  2921  0011EC  B4D8               	btfsc	status,2,c
  2922  0011EE  0012               	return	
  2923                           
  2924                           ; BSR set to: 1
  2925                           ;messages.c: 261: }
  2926                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  2927                           
  2928                           ; BSR set to: 1
  2929                           
  2930                           ; BSR set to: 1
  2931                           ;messages.c: 260: return;
  2932  0011F0  0101               	movlb	1	; () banked
  2933  0011F2  6FAA               	movwf	??_block_on_To_msgqueues& (0+255),b
  2934  0011F4  0E01               	movlw	1
  2935  0011F6  6E4D               	movwf	_MQ_Main_Willing_to_block,c
  2936  0011F8  0101               	movlb	1	; () banked
  2937  0011FA  51AA               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2938  0011FC                     l3262:
  2939                           
  2940                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  2941  0011FC  0101               	movlb	1	; () banked
  2942  0011FE  0E01               	movlw	high _ToMainHigh_MQ
  2943  001200  0101               	movlb	1	; () banked
  2944  001202  0101               	movlb	1	; () banked
  2945  001204  6FA5               	movwf	(check_msg@qptr+1)& (0+255),b
  2946  001206  0101               	movlb	1	; () banked
  2947  001208  0E6E               	movlw	low _ToMainHigh_MQ
  2948  00120A  0101               	movlb	1	; () banked
  2949  00120C  0101               	movlb	1	; () banked
  2950  00120E  6FA4               	movwf	check_msg@qptr& (0+255),b
  2951  001210  EC50  F00C         	call	_check_msg	;wreg free
  2952  001214  0900               	iorlw	0
  2953  001216  B4D8               	btfsc	status,2,c
  2954  001218  D007               	goto	l3268
  2955                           
  2956                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  2957  00121A  0101               	movlb	1	; () banked
  2958  00121C  6FAA               	movwf	??_block_on_To_msgqueues& (0+255),b
  2959  00121E  0E00               	movlw	0
  2960  001220  6E4D               	movwf	_MQ_Main_Willing_to_block,c
  2961  001222  0101               	movlb	1	; () banked
  2962  001224  51AA               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2963  001226  0012               	return	
  2964  001228                     l3268:
  2965                           
  2966                           ;messages.c: 271: }
  2967                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  2968  001228  0100               	movlb	0	; () banked
  2969  00122A  0E00               	movlw	high _ToMainLow_MQ
  2970  00122C  0101               	movlb	1	; () banked
  2971  00122E  0101               	movlb	1	; () banked
  2972  001230  6FA5               	movwf	(check_msg@qptr+1)& (0+255),b
  2973  001232  0100               	movlb	0	; () banked
  2974  001234  0E80               	movlw	low _ToMainLow_MQ
  2975  001236  0101               	movlb	1	; () banked
  2976  001238  0101               	movlb	1	; () banked
  2977  00123A  6FA4               	movwf	check_msg@qptr& (0+255),b
  2978  00123C  EC50  F00C         	call	_check_msg	;wreg free
  2979  001240  0900               	iorlw	0
  2980  001242  B4D8               	btfsc	status,2,c
  2981  001244  D007               	goto	l3274
  2982                           
  2983                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  2984  001246  0101               	movlb	1	; () banked
  2985  001248  6FAA               	movwf	??_block_on_To_msgqueues& (0+255),b
  2986  00124A  0E00               	movlw	0
  2987  00124C  6E4D               	movwf	_MQ_Main_Willing_to_block,c
  2988  00124E  0101               	movlb	1	; () banked
  2989  001250  51AA               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2990  001252  0012               	return	
  2991  001254                     l3274:
  2992                           
  2993                           ;messages.c: 278: }
  2994                           ;messages.c: 279: Delay1KTCYx(10);
  2995  001254  0E0A               	movlw	10
  2996  001256  EC1F  F00D         	call	_Delay1KTCYx
  2997  00125A  D7D0               	goto	l3262
  2998  00125C                     __end_of_block_on_To_msgqueues:
  2999                           	opt stack 0
  3000                           tblptru	equ	0xFF8
  3001                           prodh	equ	0xFF4
  3002                           prodl	equ	0xFF3
  3003                           intcon	equ	0xFF2
  3004                           postinc0	equ	0xFEE
  3005                           wreg	equ	0xFE8
  3006                           indf1	equ	0xFE7
  3007                           fsr1h	equ	0xFE2
  3008                           fsr1l	equ	0xFE1
  3009                           indf2	equ	0xFDF
  3010                           postinc2	equ	0xFDE
  3011                           postdec2	equ	0xFDD
  3012                           fsr2h	equ	0xFDA
  3013                           fsr2l	equ	0xFD9
  3014                           status	equ	0xFD8
  3015                           
  3016 ;; *************** function _in_main *****************
  3017 ;; Defined at:
  3018 ;;		line 43 in file "../src/interrupts.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;		None
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;		None
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  2    4[BANK1 ] int 
  3025 ;; Registers used:
  3026 ;;		wreg, status,2, status,0, cstack
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3032 ;;      Params:         0       0       2       0       0
  3033 ;;      Locals:         0       0       0       0       0
  3034 ;;      Temps:          0       0       0       0       0
  3035 ;;      Totals:         0       0       2       0       0
  3036 ;;Total ram usage:        2 bytes
  3037 ;; Hardware stack levels used:    1
  3038 ;; Hardware stack levels required when called:   12
  3039 ;; This function calls:
  3040 ;;		_in_high_int
  3041 ;;		_in_low_int
  3042 ;; This function is called by:
  3043 ;;		_block_on_To_msgqueues
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text16
  3048  0016AC                     __ptext16:
  3049                           	opt stack 0
  3050  0016AC                     _in_main:
  3051                           	opt stack 17
  3052                           
  3053                           ;interrupts.c: 44: if ((!in_low_int()) && (!in_high_int())) {
  3054                           
  3055                           ;incstack = 0
  3056  0016AC  EC10  F00B         	call	_in_low_int	;wreg free
  3057  0016B0  0101               	movlb	1	; () banked
  3058  0016B2  0101               	movlb	1	; () banked
  3059  0016B4  51A7               	movf	(?_in_low_int+1)& (0+255),w,b
  3060  0016B6  0101               	movlb	1	; () banked
  3061  0016B8  11A6               	iorwf	?_in_low_int& (0+255),w,b
  3062  0016BA  A4D8               	btfss	status,2,c
  3063  0016BC  D011               	goto	l2874
  3064                           
  3065                           ; BSR set to: 1
  3066  0016BE  EC46  F00D         	call	_in_high_int	;wreg free
  3067  0016C2  0101               	movlb	1	; () banked
  3068  0016C4  0101               	movlb	1	; () banked
  3069  0016C6  51A5               	movf	(?_in_high_int+1)& (0+255),w,b
  3070  0016C8  0101               	movlb	1	; () banked
  3071  0016CA  11A4               	iorwf	?_in_high_int& (0+255),w,b
  3072  0016CC  A4D8               	btfss	status,2,c
  3073  0016CE  D008               	goto	l2874
  3074                           
  3075                           ; BSR set to: 1
  3076                           ;interrupts.c: 45: return (1);
  3077  0016D0  0E00               	movlw	0
  3078  0016D2  0101               	movlb	1	; () banked
  3079  0016D4  0101               	movlb	1	; () banked
  3080  0016D6  6FA9               	movwf	(?_in_main+1)& (0+255),b
  3081  0016D8  0E01               	movlw	1
  3082  0016DA  0101               	movlb	1	; () banked
  3083  0016DC  6FA8               	movwf	?_in_main& (0+255),b
  3084  0016DE  0012               	return	
  3085  0016E0                     l2874:
  3086                           
  3087                           ; BSR set to: 1
  3088                           ;interrupts.c: 47: return (0);
  3089  0016E0  0E00               	movlw	0
  3090  0016E2  0101               	movlb	1	; () banked
  3091  0016E4  0101               	movlb	1	; () banked
  3092  0016E6  6FA9               	movwf	(?_in_main+1)& (0+255),b
  3093  0016E8  0E00               	movlw	0
  3094  0016EA  0101               	movlb	1	; () banked
  3095  0016EC  6FA8               	movwf	?_in_main& (0+255),b
  3096  0016EE  0012               	return	
  3097  0016F0                     __end_of_in_main:
  3098                           	opt stack 0
  3099                           tblptru	equ	0xFF8
  3100                           prodh	equ	0xFF4
  3101                           prodl	equ	0xFF3
  3102                           intcon	equ	0xFF2
  3103                           postinc0	equ	0xFEE
  3104                           wreg	equ	0xFE8
  3105                           indf1	equ	0xFE7
  3106                           fsr1h	equ	0xFE2
  3107                           fsr1l	equ	0xFE1
  3108                           indf2	equ	0xFDF
  3109                           postinc2	equ	0xFDE
  3110                           postdec2	equ	0xFDD
  3111                           fsr2h	equ	0xFDA
  3112                           fsr2l	equ	0xFD9
  3113                           status	equ	0xFD8
  3114                           
  3115 ;; *************** function _in_low_int *****************
  3116 ;; Defined at:
  3117 ;;		line 32 in file "../src/interrupts.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;		None
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;		None
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  2    2[BANK1 ] int 
  3124 ;; Registers used:
  3125 ;;		wreg, status,2, status,0, cstack
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3131 ;;      Params:         0       0       2       0       0
  3132 ;;      Locals:         0       0       0       0       0
  3133 ;;      Temps:          0       0       0       0       0
  3134 ;;      Totals:         0       0       2       0       0
  3135 ;;Total ram usage:        2 bytes
  3136 ;; Hardware stack levels used:    1
  3137 ;; Hardware stack levels required when called:   11
  3138 ;; This function calls:
  3139 ;;		_in_high_int
  3140 ;; This function is called by:
  3141 ;;		_in_main
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           	psect	text17
  3146  001620                     __ptext17:
  3147                           	opt stack 0
  3148  001620                     _in_low_int:
  3149                           	opt stack 17
  3150                           
  3151                           ;interrupts.c: 34: if (INTCONbits.GIEL == 1) {
  3152                           
  3153                           ; BSR set to: 1
  3154                           ;incstack = 0
  3155  001620  ACF2               	btfss	intcon,6,c	;volatile
  3156  001622  D008               	goto	l2852
  3157                           
  3158                           ;interrupts.c: 35: return (0);
  3159  001624  0E00               	movlw	0
  3160  001626  0101               	movlb	1	; () banked
  3161  001628  0101               	movlb	1	; () banked
  3162  00162A  6FA7               	movwf	(?_in_low_int+1)& (0+255),b
  3163  00162C  0E00               	movlw	0
  3164  00162E  0101               	movlb	1	; () banked
  3165  001630  6FA6               	movwf	?_in_low_int& (0+255),b
  3166  001632  0012               	return	
  3167  001634                     l2852:
  3168  001634  EC46  F00D         	call	_in_high_int	;wreg free
  3169  001638  0101               	movlb	1	; () banked
  3170  00163A  0101               	movlb	1	; () banked
  3171  00163C  51A5               	movf	(?_in_high_int+1)& (0+255),w,b
  3172  00163E  0101               	movlb	1	; () banked
  3173  001640  11A4               	iorwf	?_in_high_int& (0+255),w,b
  3174  001642  B4D8               	btfsc	status,2,c
  3175  001644  D008               	goto	l2860
  3176                           
  3177                           ; BSR set to: 1
  3178                           ;interrupts.c: 37: return (0);
  3179  001646  0E00               	movlw	0
  3180  001648  0101               	movlb	1	; () banked
  3181  00164A  0101               	movlb	1	; () banked
  3182  00164C  6FA7               	movwf	(?_in_low_int+1)& (0+255),b
  3183  00164E  0E00               	movlw	0
  3184  001650  0101               	movlb	1	; () banked
  3185  001652  6FA6               	movwf	?_in_low_int& (0+255),b
  3186  001654  0012               	return	
  3187  001656                     l2860:
  3188                           
  3189                           ; BSR set to: 1
  3190                           ;interrupts.c: 39: return (1);
  3191  001656  0E00               	movlw	0
  3192  001658  0101               	movlb	1	; () banked
  3193  00165A  0101               	movlb	1	; () banked
  3194  00165C  6FA7               	movwf	(?_in_low_int+1)& (0+255),b
  3195  00165E  0E01               	movlw	1
  3196  001660  0101               	movlb	1	; () banked
  3197  001662  6FA6               	movwf	?_in_low_int& (0+255),b
  3198  001664  0012               	return	
  3199  001666                     __end_of_in_low_int:
  3200                           	opt stack 0
  3201                           tblptru	equ	0xFF8
  3202                           prodh	equ	0xFF4
  3203                           prodl	equ	0xFF3
  3204                           intcon	equ	0xFF2
  3205                           postinc0	equ	0xFEE
  3206                           wreg	equ	0xFE8
  3207                           indf1	equ	0xFE7
  3208                           fsr1h	equ	0xFE2
  3209                           fsr1l	equ	0xFE1
  3210                           indf2	equ	0xFDF
  3211                           postinc2	equ	0xFDE
  3212                           postdec2	equ	0xFDD
  3213                           fsr2h	equ	0xFDA
  3214                           fsr2l	equ	0xFD9
  3215                           status	equ	0xFD8
  3216                           
  3217 ;; *************** function _in_high_int *****************
  3218 ;; Defined at:
  3219 ;;		line 23 in file "../src/interrupts.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;		None
  3222 ;; Auto vars:     Size  Location     Type
  3223 ;;		None
  3224 ;; Return value:  Size  Location     Type
  3225 ;;                  2    0[BANK1 ] int 
  3226 ;; Registers used:
  3227 ;;		wreg, status,2
  3228 ;; Tracked objects:
  3229 ;;		On entry : 0/0
  3230 ;;		On exit  : 0/0
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3233 ;;      Params:         0       0       2       0       0
  3234 ;;      Locals:         0       0       0       0       0
  3235 ;;      Temps:          0       0       0       0       0
  3236 ;;      Totals:         0       0       2       0       0
  3237 ;;Total ram usage:        2 bytes
  3238 ;; Hardware stack levels used:    1
  3239 ;; Hardware stack levels required when called:   10
  3240 ;; This function calls:
  3241 ;;		Nothing
  3242 ;; This function is called by:
  3243 ;;		_in_low_int
  3244 ;;		_in_main
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           	psect	text18
  3249  001A8C                     __ptext18:
  3250                           	opt stack 0
  3251  001A8C                     _in_high_int:
  3252                           	opt stack 17
  3253                           
  3254                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  3255                           
  3256                           ; BSR set to: 1
  3257                           ;incstack = 0
  3258  001A8C  0E00               	movlw	0
  3259  001A8E  AEF2               	btfss	intcon,7,c	;volatile
  3260  001A90  0E01               	movlw	1
  3261  001A92  0101               	movlb	1	; () banked
  3262  001A94  0101               	movlb	1	; () banked
  3263  001A96  6FA4               	movwf	?_in_high_int& (0+255),b
  3264  001A98  0101               	movlb	1	; () banked
  3265  001A9A  6BA5               	clrf	(?_in_high_int+1)& (0+255),b
  3266  001A9C  0012               	return	
  3267  001A9E                     __end_of_in_high_int:
  3268                           	opt stack 0
  3269                           tblptru	equ	0xFF8
  3270                           prodh	equ	0xFF4
  3271                           prodl	equ	0xFF3
  3272                           intcon	equ	0xFF2
  3273                           postinc0	equ	0xFEE
  3274                           wreg	equ	0xFE8
  3275                           indf1	equ	0xFE7
  3276                           fsr1h	equ	0xFE2
  3277                           fsr1l	equ	0xFE1
  3278                           indf2	equ	0xFDF
  3279                           postinc2	equ	0xFDE
  3280                           postdec2	equ	0xFDD
  3281                           fsr2h	equ	0xFDA
  3282                           fsr2l	equ	0xFD9
  3283                           status	equ	0xFD8
  3284                           
  3285 ;; *************** function _check_msg *****************
  3286 ;; Defined at:
  3287 ;;		line 222 in file "../src/messages.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3290 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;		None
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  1    wreg      unsigned char 
  3295 ;; Registers used:
  3296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3302 ;;      Params:         0       0       2       0       0
  3303 ;;      Locals:         0       0       0       0       0
  3304 ;;      Temps:          0       0       1       0       0
  3305 ;;      Totals:         0       0       3       0       0
  3306 ;;Total ram usage:        3 bytes
  3307 ;; Hardware stack levels used:    1
  3308 ;; Hardware stack levels required when called:   10
  3309 ;; This function calls:
  3310 ;;		Nothing
  3311 ;; This function is called by:
  3312 ;;		_block_on_To_msgqueues
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           	psect	text19
  3317  0018A0                     __ptext19:
  3318                           	opt stack 0
  3319  0018A0                     _check_msg:
  3320                           	opt stack 19
  3321                           
  3322                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3323                           
  3324                           ; BSR set to: 1
  3325                           ;incstack = 0
  3326  0018A0  0101               	movlb	1	; () banked
  3327  0018A2  EE20 F035          	lfsr	2,53
  3328  0018A6  0101               	movlb	1	; () banked
  3329  0018A8  51A4               	movf	check_msg@qptr& (0+255),w,b
  3330  0018AA  26D9               	addwf	fsr2l,f,c
  3331  0018AC  0101               	movlb	1	; () banked
  3332  0018AE  51A5               	movf	(check_msg@qptr+1)& (0+255),w,b
  3333  0018B0  22DA               	addwfc	fsr2h,f,c
  3334  0018B2  50DF               	movf	indf2,w,c
  3335  0018B4  0101               	movlb	1	; () banked
  3336  0018B6  6FA6               	movwf	??_check_msg& (0+255),b
  3337  0018B8  0101               	movlb	1	; () banked
  3338  0018BA  51A6               	movf	??_check_msg& (0+255),w,b
  3339  0018BC  0D0D               	mullw	13
  3340  0018BE  50F3               	movf	prodl,w,c
  3341  0018C0  0101               	movlb	1	; () banked
  3342  0018C2  0101               	movlb	1	; () banked
  3343  0018C4  25A4               	addwf	check_msg@qptr& (0+255),w,b
  3344  0018C6  6ED9               	movwf	fsr2l,c
  3345  0018C8  50F4               	movf	prodh,w,c
  3346  0018CA  0101               	movlb	1	; () banked
  3347  0018CC  0101               	movlb	1	; () banked
  3348  0018CE  21A5               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3349  0018D0  6EDA               	movwf	fsr2h,c
  3350  0018D2  50DF               	movf	indf2,w,c
  3351  0018D4  0012               	return	
  3352  0018D6                     __end_of_check_msg:
  3353                           	opt stack 0
  3354                           tblptru	equ	0xFF8
  3355                           prodh	equ	0xFF4
  3356                           prodl	equ	0xFF3
  3357                           intcon	equ	0xFF2
  3358                           postinc0	equ	0xFEE
  3359                           wreg	equ	0xFE8
  3360                           indf1	equ	0xFE7
  3361                           fsr1h	equ	0xFE2
  3362                           fsr1l	equ	0xFE1
  3363                           indf2	equ	0xFDF
  3364                           postinc2	equ	0xFDE
  3365                           postdec2	equ	0xFDD
  3366                           fsr2h	equ	0xFDA
  3367                           fsr2l	equ	0xFD9
  3368                           status	equ	0xFD8
  3369                           
  3370 ;; *************** function _Delay1KTCYx *****************
  3371 ;; Defined at:
  3372 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;  unit            1    wreg     unsigned char 
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;  unit            1    0[BANK1 ] unsigned char 
  3377 ;; Return value:  Size  Location     Type
  3378 ;;		None               void
  3379 ;; Registers used:
  3380 ;;		wreg
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3386 ;;      Params:         0       0       0       0       0
  3387 ;;      Locals:         0       0       1       0       0
  3388 ;;      Temps:          0       0       0       0       0
  3389 ;;      Totals:         0       0       1       0       0
  3390 ;;Total ram usage:        1 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; Hardware stack levels required when called:   10
  3393 ;; This function calls:
  3394 ;;		Nothing
  3395 ;; This function is called by:
  3396 ;;		_block_on_To_msgqueues
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	text20
  3401  001A3E                     __ptext20:
  3402                           	opt stack 0
  3403  001A3E                     _Delay1KTCYx:
  3404                           	opt stack 19
  3405                           
  3406                           ; BSR set to: 1
  3407                           ;incstack = 0
  3408                           ;Delay1KTCYx@unit stored from wreg
  3409  001A3E  CFE8 F1A4          	movff	wreg,Delay1KTCYx@unit
  3410  001A42                     l698:
  3411  001A42  0EFA               	movlw	250
  3412  001A44                     u2707:
  3413  001A44  F000               	nop	
  3414  001A46  2EE8               	decfsz	wreg,f,c
  3415  001A48  D7FD               	goto	u2707
  3416  001A4A  0101               	movlb	1	; () banked
  3417  001A4C  0101               	movlb	1	; () banked
  3418  001A4E  2FA4               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3419  001A50  D7F8               	goto	l698
  3420  001A52  0012               	return	
  3421  001A54                     __end_of_Delay1KTCYx:
  3422                           	opt stack 0
  3423                           tblptru	equ	0xFF8
  3424                           prodh	equ	0xFF4
  3425                           prodl	equ	0xFF3
  3426                           intcon	equ	0xFF2
  3427                           postinc0	equ	0xFEE
  3428                           wreg	equ	0xFE8
  3429                           indf1	equ	0xFE7
  3430                           fsr1h	equ	0xFE2
  3431                           fsr1l	equ	0xFE1
  3432                           indf2	equ	0xFDF
  3433                           postinc2	equ	0xFDE
  3434                           postdec2	equ	0xFDD
  3435                           fsr2h	equ	0xFDA
  3436                           fsr2l	equ	0xFD9
  3437                           status	equ	0xFD8
  3438                           
  3439 ;; *************** function _ToMainLow_recvmsg *****************
  3440 ;; Defined at:
  3441 ;;		line 112 in file "../src/messages.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;  maxlength       1    wreg     unsigned char 
  3444 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  3445 ;;		 -> main@msgtype(1), 
  3446 ;;  data            2   26[BANK1 ] PTR void 
  3447 ;;		 -> main@msgbuffer(11), 
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;  maxlength       1   28[BANK1 ] unsigned char 
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  1    wreg      char 
  3452 ;; Registers used:
  3453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3459 ;;      Params:         0       0       4       0       0
  3460 ;;      Locals:         0       0       1       0       0
  3461 ;;      Temps:          0       0       0       0       0
  3462 ;;      Totals:         0       0       5       0       0
  3463 ;;Total ram usage:        5 bytes
  3464 ;; Hardware stack levels used:    1
  3465 ;; Hardware stack levels required when called:   12
  3466 ;; This function calls:
  3467 ;;		_recv_msg
  3468 ;; This function is called by:
  3469 ;;		_main
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           	psect	text21
  3474  0016F0                     __ptext21:
  3475                           	opt stack 0
  3476  0016F0                     _ToMainLow_recvmsg:
  3477                           	opt stack 18
  3478                           
  3479                           ; BSR set to: 1
  3480                           ;incstack = 0
  3481                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3482  0016F0  CFE8 F1C0          	movff	wreg,ToMainLow_recvmsg@maxlength
  3483                           
  3484                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3485  0016F4  0100               	movlb	0	; () banked
  3486  0016F6  0E00               	movlw	high _ToMainLow_MQ
  3487  0016F8  0101               	movlb	1	; () banked
  3488  0016FA  0101               	movlb	1	; () banked
  3489  0016FC  6FAF               	movwf	(recv_msg@qptr+1)& (0+255),b
  3490  0016FE  0100               	movlb	0	; () banked
  3491  001700  0E80               	movlw	low _ToMainLow_MQ
  3492  001702  0101               	movlb	1	; () banked
  3493  001704  0101               	movlb	1	; () banked
  3494  001706  6FAE               	movwf	recv_msg@qptr& (0+255),b
  3495  001708  C1C0  F1B0         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3496  00170C  0101               	movlb	1	; () banked
  3497  00170E  0101               	movlb	1	; () banked
  3498  001710  C1BD  F1B2         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3499  001714  0101               	movlb	1	; () banked
  3500  001716  0101               	movlb	1	; () banked
  3501  001718  C1BC  F1B1         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3502  00171C  0101               	movlb	1	; () banked
  3503  00171E  0101               	movlb	1	; () banked
  3504  001720  C1BF  F1B4         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3505  001724  0101               	movlb	1	; () banked
  3506  001726  0101               	movlb	1	; () banked
  3507  001728  C1BE  F1B3         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3508  00172C  EC15  F004         	call	_recv_msg	;wreg free
  3509  001730  0012               	return	
  3510  001732                     __end_of_ToMainLow_recvmsg:
  3511                           	opt stack 0
  3512                           tblptru	equ	0xFF8
  3513                           prodh	equ	0xFF4
  3514                           prodl	equ	0xFF3
  3515                           intcon	equ	0xFF2
  3516                           postinc0	equ	0xFEE
  3517                           wreg	equ	0xFE8
  3518                           indf1	equ	0xFE7
  3519                           fsr1h	equ	0xFE2
  3520                           fsr1l	equ	0xFE1
  3521                           indf2	equ	0xFDF
  3522                           postinc2	equ	0xFDE
  3523                           postdec2	equ	0xFDD
  3524                           fsr2h	equ	0xFDA
  3525                           fsr2l	equ	0xFD9
  3526                           status	equ	0xFD8
  3527                           
  3528 ;; *************** function _ToMainHigh_recvmsg *****************
  3529 ;; Defined at:
  3530 ;;		line 135 in file "../src/messages.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;  maxlength       1    wreg     unsigned char 
  3533 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  3534 ;;		 -> main@msgtype(1), 
  3535 ;;  data            2   26[BANK1 ] PTR void 
  3536 ;;		 -> main@msgbuffer(11), 
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;  maxlength       1   28[BANK1 ] unsigned char 
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  1    wreg      char 
  3541 ;; Registers used:
  3542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3548 ;;      Params:         0       0       4       0       0
  3549 ;;      Locals:         0       0       1       0       0
  3550 ;;      Temps:          0       0       0       0       0
  3551 ;;      Totals:         0       0       5       0       0
  3552 ;;Total ram usage:        5 bytes
  3553 ;; Hardware stack levels used:    1
  3554 ;; Hardware stack levels required when called:   12
  3555 ;; This function calls:
  3556 ;;		_recv_msg
  3557 ;; This function is called by:
  3558 ;;		_main
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           	psect	text22
  3563  001732                     __ptext22:
  3564                           	opt stack 0
  3565  001732                     _ToMainHigh_recvmsg:
  3566                           	opt stack 18
  3567                           
  3568                           ;incstack = 0
  3569                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3570  001732  CFE8 F1C0          	movff	wreg,ToMainHigh_recvmsg@maxlength
  3571                           
  3572                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3573  001736  0101               	movlb	1	; () banked
  3574  001738  0E01               	movlw	high _ToMainHigh_MQ
  3575  00173A  0101               	movlb	1	; () banked
  3576  00173C  0101               	movlb	1	; () banked
  3577  00173E  6FAF               	movwf	(recv_msg@qptr+1)& (0+255),b
  3578  001740  0101               	movlb	1	; () banked
  3579  001742  0E6E               	movlw	low _ToMainHigh_MQ
  3580  001744  0101               	movlb	1	; () banked
  3581  001746  0101               	movlb	1	; () banked
  3582  001748  6FAE               	movwf	recv_msg@qptr& (0+255),b
  3583  00174A  C1C0  F1B0         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3584  00174E  0101               	movlb	1	; () banked
  3585  001750  0101               	movlb	1	; () banked
  3586  001752  C1BD  F1B2         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3587  001756  0101               	movlb	1	; () banked
  3588  001758  0101               	movlb	1	; () banked
  3589  00175A  C1BC  F1B1         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3590  00175E  0101               	movlb	1	; () banked
  3591  001760  0101               	movlb	1	; () banked
  3592  001762  C1BF  F1B4         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3593  001766  0101               	movlb	1	; () banked
  3594  001768  0101               	movlb	1	; () banked
  3595  00176A  C1BE  F1B3         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3596  00176E  EC15  F004         	call	_recv_msg	;wreg free
  3597  001772  0012               	return	
  3598  001774                     __end_of_ToMainHigh_recvmsg:
  3599                           	opt stack 0
  3600                           tblptru	equ	0xFF8
  3601                           prodh	equ	0xFF4
  3602                           prodl	equ	0xFF3
  3603                           intcon	equ	0xFF2
  3604                           postinc0	equ	0xFEE
  3605                           wreg	equ	0xFE8
  3606                           indf1	equ	0xFE7
  3607                           fsr1h	equ	0xFE2
  3608                           fsr1l	equ	0xFE1
  3609                           indf2	equ	0xFDF
  3610                           postinc2	equ	0xFDE
  3611                           postdec2	equ	0xFDD
  3612                           fsr2h	equ	0xFDA
  3613                           fsr2l	equ	0xFD9
  3614                           status	equ	0xFD8
  3615                           
  3616 ;; *************** function _recv_msg *****************
  3617 ;; Defined at:
  3618 ;;		line 63 in file "../src/messages.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  3621 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3622 ;;  maxlength       1   12[BANK1 ] unsigned char 
  3623 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  3624 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  3625 ;;  data            2   15[BANK1 ] PTR void 
  3626 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  3629 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3630 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3631 ;;  tlength         2   20[BANK1 ] unsigned int 
  3632 ;;  slot            1   19[BANK1 ] unsigned char 
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      char 
  3635 ;; Registers used:
  3636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3642 ;;      Params:         0       0       7       0       0
  3643 ;;      Locals:         0       0       5       0       0
  3644 ;;      Temps:          0       0       2       0       0
  3645 ;;      Totals:         0       0      14       0       0
  3646 ;;Total ram usage:       14 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; Hardware stack levels required when called:   11
  3649 ;; This function calls:
  3650 ;;		_memcpy
  3651 ;; This function is called by:
  3652 ;;		_ToMainLow_recvmsg
  3653 ;;		_ToMainHigh_recvmsg
  3654 ;;		_FromMainLow_recvmsg
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658                           	psect	text23
  3659  00082A                     __ptext23:
  3660                           	opt stack 0
  3661  00082A                     _recv_msg:
  3662                           	opt stack 18
  3663                           
  3664                           ;messages.c: 64: unsigned char slot;
  3665                           ;messages.c: 68: msg *qmsg;
  3666                           ;messages.c: 69: size_t tlength;
  3667                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3668                           
  3669                           ;incstack = 0
  3670  00082A  0101               	movlb	1	; () banked
  3671  00082C  EE20 F035          	lfsr	2,53
  3672  000830  0101               	movlb	1	; () banked
  3673  000832  51AE               	movf	recv_msg@qptr& (0+255),w,b
  3674  000834  26D9               	addwf	fsr2l,f,c
  3675  000836  0101               	movlb	1	; () banked
  3676  000838  51AF               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3677  00083A  22DA               	addwfc	fsr2h,f,c
  3678  00083C  50DF               	movf	indf2,w,c
  3679  00083E  0101               	movlb	1	; () banked
  3680  000840  0101               	movlb	1	; () banked
  3681  000842  6FB7               	movwf	recv_msg@slot& (0+255),b
  3682                           
  3683                           ; BSR set to: 1
  3684                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3685  000844  0101               	movlb	1	; () banked
  3686  000846  0101               	movlb	1	; () banked
  3687  000848  51B7               	movf	recv_msg@slot& (0+255),w,b
  3688  00084A  0D0D               	mullw	13
  3689  00084C  50F3               	movf	prodl,w,c
  3690  00084E  0101               	movlb	1	; () banked
  3691  000850  0101               	movlb	1	; () banked
  3692  000852  25AE               	addwf	recv_msg@qptr& (0+255),w,b
  3693  000854  0101               	movlb	1	; () banked
  3694  000856  0101               	movlb	1	; () banked
  3695  000858  6FBA               	movwf	recv_msg@qmsg& (0+255),b
  3696  00085A  50F4               	movf	prodh,w,c
  3697  00085C  0101               	movlb	1	; () banked
  3698  00085E  0101               	movlb	1	; () banked
  3699  000860  21AF               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3700  000862  0101               	movlb	1	; () banked
  3701  000864  6FBB               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3702                           
  3703                           ; BSR set to: 1
  3704                           ;messages.c: 74: if (qmsg->full == 1) {
  3705  000866  0E01               	movlw	1
  3706  000868  C1BA  FFD9         	movff	recv_msg@qmsg,fsr2l
  3707  00086C  C1BB  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3708  000870  62DF               	cpfseq	indf2,c
  3709  000872  D074               	goto	l3380
  3710                           
  3711                           ; BSR set to: 1
  3712                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3713  000874  0101               	movlb	1	; () banked
  3714  000876  EE20 F001          	lfsr	2,1
  3715  00087A  0101               	movlb	1	; () banked
  3716  00087C  51BA               	movf	recv_msg@qmsg& (0+255),w,b
  3717  00087E  26D9               	addwf	fsr2l,f,c
  3718  000880  0101               	movlb	1	; () banked
  3719  000882  51BB               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3720  000884  22DA               	addwfc	fsr2h,f,c
  3721  000886  50DF               	movf	indf2,w,c
  3722  000888  0101               	movlb	1	; () banked
  3723  00088A  0101               	movlb	1	; () banked
  3724  00088C  5DB0               	subwf	recv_msg@maxlength& (0+255),w,b
  3725  00088E  B0D8               	btfsc	status,0,c
  3726  000890  D002               	goto	l3364
  3727                           
  3728                           ; BSR set to: 1
  3729                           ;messages.c: 77: return (-3);
  3730  000892  0EFD               	movlw	253
  3731  000894  0012               	return	
  3732  000896                     l3364:
  3733                           
  3734                           ; BSR set to: 1
  3735                           ;messages.c: 78: }
  3736                           ;messages.c: 80: tlength = qmsg->length;
  3737  000896  0101               	movlb	1	; () banked
  3738  000898  EE20 F001          	lfsr	2,1
  3739  00089C  0101               	movlb	1	; () banked
  3740  00089E  51BA               	movf	recv_msg@qmsg& (0+255),w,b
  3741  0008A0  26D9               	addwf	fsr2l,f,c
  3742  0008A2  0101               	movlb	1	; () banked
  3743  0008A4  51BB               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3744  0008A6  22DA               	addwfc	fsr2h,f,c
  3745  0008A8  50DF               	movf	indf2,w,c
  3746  0008AA  0101               	movlb	1	; () banked
  3747  0008AC  6FB5               	movwf	??_recv_msg& (0+255),b
  3748  0008AE  0101               	movlb	1	; () banked
  3749  0008B0  51B5               	movf	??_recv_msg& (0+255),w,b
  3750  0008B2  0101               	movlb	1	; () banked
  3751  0008B4  0101               	movlb	1	; () banked
  3752  0008B6  6FB8               	movwf	recv_msg@tlength& (0+255),b
  3753  0008B8  0101               	movlb	1	; () banked
  3754  0008BA  6BB9               	clrf	(recv_msg@tlength+1)& (0+255),b
  3755                           
  3756                           ; BSR set to: 1
  3757                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3758  0008BC  0101               	movlb	1	; () banked
  3759  0008BE  0101               	movlb	1	; () banked
  3760  0008C0  C1B4  F1A5         	movff	recv_msg@data+1,memcpy@d1+1
  3761  0008C4  0101               	movlb	1	; () banked
  3762  0008C6  0101               	movlb	1	; () banked
  3763  0008C8  C1B3  F1A4         	movff	recv_msg@data,memcpy@d1
  3764  0008CC  0E03               	movlw	3
  3765  0008CE  0101               	movlb	1	; () banked
  3766  0008D0  0101               	movlb	1	; () banked
  3767  0008D2  25BA               	addwf	recv_msg@qmsg& (0+255),w,b
  3768  0008D4  0101               	movlb	1	; () banked
  3769  0008D6  6FB5               	movwf	??_recv_msg& (0+255),b
  3770  0008D8  0E00               	movlw	0
  3771  0008DA  0101               	movlb	1	; () banked
  3772  0008DC  0101               	movlb	1	; () banked
  3773  0008DE  21BB               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3774  0008E0  0101               	movlb	1	; () banked
  3775  0008E2  6FB6               	movwf	(??_recv_msg+1)& (0+255),b
  3776  0008E4  C1B5  F1A6         	movff	??_recv_msg,memcpy@s1
  3777  0008E8  C1B6  F1A7         	movff	??_recv_msg+1,memcpy@s1+1
  3778  0008EC  C1B8  F1A8         	movff	recv_msg@tlength,memcpy@n
  3779  0008F0  C1B9  F1A9         	movff	recv_msg@tlength+1,memcpy@n+1
  3780  0008F4  EC8B  F00A         	call	_memcpy	;wreg free
  3781                           
  3782                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  3783  0008F8  0101               	movlb	1	; () banked
  3784  0008FA  EE20 F035          	lfsr	2,53
  3785  0008FE  0101               	movlb	1	; () banked
  3786  000900  51AE               	movf	recv_msg@qptr& (0+255),w,b
  3787  000902  26D9               	addwf	fsr2l,f,c
  3788  000904  0101               	movlb	1	; () banked
  3789  000906  51AF               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3790  000908  22DA               	addwfc	fsr2h,f,c
  3791  00090A  0101               	movlb	1	; () banked
  3792  00090C  EE10 F035          	lfsr	1,53
  3793  000910  0101               	movlb	1	; () banked
  3794  000912  51AE               	movf	recv_msg@qptr& (0+255),w,b
  3795  000914  26E1               	addwf	fsr1l,f,c
  3796  000916  0101               	movlb	1	; () banked
  3797  000918  51AF               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3798  00091A  22E2               	addwfc	fsr1h,f,c
  3799  00091C  50E7               	movf	indf1,w,c
  3800  00091E  0101               	movlb	1	; () banked
  3801  000920  6FB5               	movwf	??_recv_msg& (0+255),b
  3802  000922  0101               	movlb	1	; () banked
  3803  000924  29B5               	incf	??_recv_msg& (0+255),w,b
  3804  000926  0B03               	andlw	3
  3805  000928  6EDF               	movwf	indf2,c
  3806                           
  3807                           ; BSR set to: 1
  3808                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  3809  00092A  0101               	movlb	1	; () banked
  3810  00092C  EE20 F002          	lfsr	2,2
  3811  000930  0101               	movlb	1	; () banked
  3812  000932  51BA               	movf	recv_msg@qmsg& (0+255),w,b
  3813  000934  26D9               	addwf	fsr2l,f,c
  3814  000936  0101               	movlb	1	; () banked
  3815  000938  51BB               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3816  00093A  22DA               	addwfc	fsr2h,f,c
  3817  00093C  C1B1  FFE1         	movff	recv_msg@msgtype,fsr1l
  3818  000940  C1B2  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  3819  000944  CFDF FFE7          	movff	indf2,indf1
  3820                           
  3821                           ; BSR set to: 1
  3822                           ;messages.c: 91: qmsg->full = 0;
  3823  000948  C1BA  FFD9         	movff	recv_msg@qmsg,fsr2l
  3824  00094C  C1BB  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3825  000950  0E00               	movlw	0
  3826  000952  6EDF               	movwf	indf2,c
  3827                           
  3828                           ; BSR set to: 1
  3829                           ;messages.c: 92: return (tlength);
  3830  000954  0101               	movlb	1	; () banked
  3831  000956  0101               	movlb	1	; () banked
  3832  000958  51B8               	movf	recv_msg@tlength& (0+255),w,b
  3833  00095A  0012               	return	
  3834  00095C                     l3380:
  3835                           
  3836                           ; BSR set to: 1
  3837                           ;messages.c: 94: return (-4);
  3838  00095C  0EFC               	movlw	252
  3839  00095E  0012               	return	
  3840  000960                     __end_of_recv_msg:
  3841                           	opt stack 0
  3842                           tblptru	equ	0xFF8
  3843                           prodh	equ	0xFF4
  3844                           prodl	equ	0xFF3
  3845                           intcon	equ	0xFF2
  3846                           postinc0	equ	0xFEE
  3847                           wreg	equ	0xFE8
  3848                           indf1	equ	0xFE7
  3849                           fsr1h	equ	0xFE2
  3850                           fsr1l	equ	0xFE1
  3851                           indf2	equ	0xFDF
  3852                           postinc2	equ	0xFDE
  3853                           postdec2	equ	0xFDD
  3854                           fsr2h	equ	0xFDA
  3855                           fsr2l	equ	0xFD9
  3856                           status	equ	0xFD8
  3857                           
  3858 ;; *************** function _memcpy *****************
  3859 ;; Defined at:
  3860 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
  3861 ;; Parameters:    Size  Location     Type
  3862 ;;  d1              2    0[BANK1 ] PTR void 
  3863 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3864 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  3865 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  3866 ;;  s1              2    2[BANK1 ] PTR const void 
  3867 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3868 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3869 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  3870 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  3871 ;;		 -> main@ic(28), 
  3872 ;;  n               2    4[BANK1 ] unsigned int 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  3875 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3876 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3877 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  3878 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  3879 ;;		 -> main@ic(28), 
  3880 ;;  d               2    6[BANK1 ] PTR unsigned char 
  3881 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3882 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  3883 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  3884 ;; Return value:  Size  Location     Type
  3885 ;;                  2    0[BANK1 ] PTR void 
  3886 ;; Registers used:
  3887 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3893 ;;      Params:         0       0       6       0       0
  3894 ;;      Locals:         0       0       4       0       0
  3895 ;;      Temps:          0       0       0       0       0
  3896 ;;      Totals:         0       0      10       0       0
  3897 ;;Total ram usage:       10 bytes
  3898 ;; Hardware stack levels used:    1
  3899 ;; Hardware stack levels required when called:   10
  3900 ;; This function calls:
  3901 ;;		Nothing
  3902 ;; This function is called by:
  3903 ;;		_send_msg
  3904 ;;		_recv_msg
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           	psect	text24
  3909  001516                     __ptext24:
  3910                           	opt stack 0
  3911  001516                     _memcpy:
  3912                           	opt stack 17
  3913                           
  3914                           ; BSR set to: 1
  3915                           ;incstack = 0
  3916  001516  0101               	movlb	1	; () banked
  3917  001518  0101               	movlb	1	; () banked
  3918  00151A  C1A7  F1AD         	movff	memcpy@s1+1,memcpy@s+1
  3919  00151E  0101               	movlb	1	; () banked
  3920  001520  0101               	movlb	1	; () banked
  3921  001522  C1A6  F1AC         	movff	memcpy@s1,memcpy@s
  3922  001526  0101               	movlb	1	; () banked
  3923  001528  0101               	movlb	1	; () banked
  3924  00152A  C1A5  F1AB         	movff	memcpy@d1+1,memcpy@d+1
  3925  00152E  0101               	movlb	1	; () banked
  3926  001530  0101               	movlb	1	; () banked
  3927  001532  C1A4  F1AA         	movff	memcpy@d1,memcpy@d
  3928  001536  D012               	goto	l3350
  3929  001538                     l3344:
  3930                           
  3931                           ; BSR set to: 1
  3932  001538  C1AC  FFD9         	movff	memcpy@s,fsr2l
  3933  00153C  C1AD  FFDA         	movff	memcpy@s+1,fsr2h
  3934  001540  C1AA  FFE1         	movff	memcpy@d,fsr1l
  3935  001544  C1AB  FFE2         	movff	memcpy@d+1,fsr1h
  3936  001548  CFDF FFE7          	movff	indf2,indf1
  3937                           
  3938                           ; BSR set to: 1
  3939  00154C  0101               	movlb	1	; () banked
  3940  00154E  0101               	movlb	1	; () banked
  3941  001550  4BAC               	infsnz	memcpy@s& (0+255),f,b
  3942  001552  2BAD               	incf	(memcpy@s+1)& (0+255),f,b
  3943                           
  3944                           ; BSR set to: 1
  3945  001554  0101               	movlb	1	; () banked
  3946  001556  0101               	movlb	1	; () banked
  3947  001558  4BAA               	infsnz	memcpy@d& (0+255),f,b
  3948  00155A  2BAB               	incf	(memcpy@d+1)& (0+255),f,b
  3949  00155C                     l3350:
  3950                           
  3951                           ; BSR set to: 1
  3952  00155C  0101               	movlb	1	; () banked
  3953  00155E  0101               	movlb	1	; () banked
  3954  001560  07A8               	decf	memcpy@n& (0+255),f,b
  3955  001562  A0D8               	btfss	status,0,c
  3956  001564  07A9               	decf	(memcpy@n+1)& (0+255),f,b
  3957  001566  0101               	movlb	1	; () banked
  3958  001568  29A8               	incf	memcpy@n& (0+255),w,b
  3959  00156A  B4D8               	btfsc	status,2,c
  3960  00156C  29A9               	incf	(memcpy@n+1)& (0+255),w,b
  3961  00156E  B4D8               	btfsc	status,2,c
  3962                           
  3963                           ; BSR set to: 1
  3964                           
  3965                           ; BSR set to: 1
  3966                           ;	Return value of _memcpy is never used
  3967  001570  0012               	return	
  3968  001572  D7E2               	goto	l3344
  3969  001574                     __end_of_memcpy:
  3970                           	opt stack 0
  3971                           tblptru	equ	0xFF8
  3972                           prodh	equ	0xFF4
  3973                           prodl	equ	0xFF3
  3974                           intcon	equ	0xFF2
  3975                           postinc0	equ	0xFEE
  3976                           wreg	equ	0xFE8
  3977                           indf1	equ	0xFE7
  3978                           fsr1h	equ	0xFE2
  3979                           fsr1l	equ	0xFE1
  3980                           indf2	equ	0xFDF
  3981                           postinc2	equ	0xFDE
  3982                           postdec2	equ	0xFDD
  3983                           fsr2h	equ	0xFDA
  3984                           fsr2l	equ	0xFD9
  3985                           status	equ	0xFD8
  3986                           
  3987 ;; *************** function _OpenUSART *****************
  3988 ;; Defined at:
  3989 ;;		line 73 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;  config          1    wreg     unsigned char 
  3992 ;;  spbrg           2    0[BANK1 ] unsigned int 
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;  config          1    5[BANK1 ] unsigned char 
  3995 ;; Return value:  Size  Location     Type
  3996 ;;		None               void
  3997 ;; Registers used:
  3998 ;;		wreg, status,2
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 0/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4004 ;;      Params:         0       0       2       0       0
  4005 ;;      Locals:         0       0       1       0       0
  4006 ;;      Temps:          0       0       3       0       0
  4007 ;;      Totals:         0       0       6       0       0
  4008 ;;Total ram usage:        6 bytes
  4009 ;; Hardware stack levels used:    1
  4010 ;; Hardware stack levels required when called:   10
  4011 ;; This function calls:
  4012 ;;		Nothing
  4013 ;; This function is called by:
  4014 ;;		_main
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           	psect	text25
  4019  000FB2                     __ptext25:
  4020                           	opt stack 0
  4021  000FB2                     _OpenUSART:
  4022                           	opt stack 20
  4023                           
  4024                           ; BSR set to: 1
  4025                           ;incstack = 0
  4026                           ;OpenUSART@config stored from wreg
  4027  000FB2  CFE8 F1A9          	movff	wreg,OpenUSART@config
  4028  000FB6  0E00               	movlw	0
  4029  000FB8  6EAC               	movwf	4012,c	;volatile
  4030  000FBA  0E00               	movlw	0
  4031  000FBC  6EAB               	movwf	4011,c	;volatile
  4032  000FBE  0101               	movlb	1	; () banked
  4033  000FC0  0101               	movlb	1	; () banked
  4034  000FC2  B1A9               	btfsc	OpenUSART@config& (0+255),0,b
  4035                           
  4036                           ; BSR set to: 1
  4037  000FC4  88AC               	bsf	4012,4,c	;volatile
  4038                           
  4039                           ; BSR set to: 1
  4040                           
  4041                           ; BSR set to: 1
  4042  000FC6  0101               	movlb	1	; () banked
  4043  000FC8  0101               	movlb	1	; () banked
  4044  000FCA  A3A9               	btfss	OpenUSART@config& (0+255),1,b
  4045  000FCC  D002               	goto	l3216
  4046                           
  4047                           ; BSR set to: 1
  4048  000FCE  8CAC               	bsf	4012,6,c	;volatile
  4049  000FD0  8CAB               	bsf	4011,6,c	;volatile
  4050  000FD2                     l3216:
  4051                           
  4052                           ; BSR set to: 1
  4053  000FD2  0101               	movlb	1	; () banked
  4054  000FD4  0101               	movlb	1	; () banked
  4055  000FD6  B5A9               	btfsc	OpenUSART@config& (0+255),2,b
  4056                           
  4057                           ; BSR set to: 1
  4058  000FD8  8EAC               	bsf	4012,7,c	;volatile
  4059                           
  4060                           ; BSR set to: 1
  4061                           
  4062                           ; BSR set to: 1
  4063  000FDA  0101               	movlb	1	; () banked
  4064  000FDC  0101               	movlb	1	; () banked
  4065  000FDE  A7A9               	btfss	OpenUSART@config& (0+255),3,b
  4066  000FE0  D002               	goto	l467
  4067                           
  4068                           ; BSR set to: 1
  4069  000FE2  88AB               	bsf	4011,4,c	;volatile
  4070  000FE4  D001               	goto	l3224
  4071  000FE6                     l467:
  4072                           
  4073                           ; BSR set to: 1
  4074  000FE6  8AAB               	bsf	4011,5,c	;volatile
  4075  000FE8                     l3224:
  4076                           
  4077                           ; BSR set to: 1
  4078  000FE8  0101               	movlb	1	; () banked
  4079  000FEA  0101               	movlb	1	; () banked
  4080  000FEC  B9A9               	btfsc	OpenUSART@config& (0+255),4,b
  4081                           
  4082                           ; BSR set to: 1
  4083  000FEE  84AC               	bsf	4012,2,c	;volatile
  4084                           
  4085                           ; BSR set to: 1
  4086  000FF0  989E               	bcf	3998,4,c	;volatile
  4087                           
  4088                           ; BSR set to: 1
  4089  000FF2  0101               	movlb	1	; () banked
  4090  000FF4  0101               	movlb	1	; () banked
  4091  000FF6  BBA9               	btfsc	OpenUSART@config& (0+255),5,b
  4092                           
  4093                           ; BSR set to: 1
  4094  000FF8  86AB               	bsf	4011,3,c	;volatile
  4095                           
  4096                           ; BSR set to: 1
  4097                           
  4098                           ; BSR set to: 1
  4099  000FFA  0101               	movlb	1	; () banked
  4100  000FFC  0101               	movlb	1	; () banked
  4101  000FFE  ADA9               	btfss	OpenUSART@config& (0+255),6,b
  4102  001000  D002               	goto	l471
  4103                           
  4104                           ; BSR set to: 1
  4105  001002  8A9D               	bsf	3997,5,c	;volatile
  4106  001004  D001               	goto	l472
  4107  001006                     l471:
  4108                           
  4109                           ; BSR set to: 1
  4110  001006  9A9D               	bcf	3997,5,c	;volatile
  4111  001008                     l472:
  4112                           
  4113                           ; BSR set to: 1
  4114  001008  9A9E               	bcf	3998,5,c	;volatile
  4115                           
  4116                           ; BSR set to: 1
  4117  00100A  0101               	movlb	1	; () banked
  4118  00100C  0101               	movlb	1	; () banked
  4119  00100E  AFA9               	btfss	OpenUSART@config& (0+255),7,b
  4120  001010  D002               	goto	l473
  4121                           
  4122                           ; BSR set to: 1
  4123  001012  889D               	bsf	3997,4,c	;volatile
  4124  001014  D001               	goto	l474
  4125  001016                     l473:
  4126                           
  4127                           ; BSR set to: 1
  4128  001016  989D               	bcf	3997,4,c	;volatile
  4129  001018                     l474:
  4130                           
  4131                           ; BSR set to: 1
  4132  001018  C1A4  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4133                           
  4134                           ; BSR set to: 1
  4135  00101C  0101               	movlb	1	; () banked
  4136  00101E  C1A5  F1A6         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4137  001022  C1A6  F1A7         	movff	??_OpenUSART,??_OpenUSART+1
  4138  001026  0101               	movlb	1	; () banked
  4139  001028  6BA8               	clrf	(??_OpenUSART+2)& (0+255),b
  4140  00102A  0101               	movlb	1	; () banked
  4141  00102C  51A7               	movf	(??_OpenUSART+1)& (0+255),w,b
  4142  00102E  6EB0               	movwf	4016,c	;volatile
  4143                           
  4144                           ; BSR set to: 1
  4145  001030  8AAC               	bsf	4012,5,c	;volatile
  4146                           
  4147                           ; BSR set to: 1
  4148  001032  8EAB               	bsf	4011,7,c	;volatile
  4149                           
  4150                           ; BSR set to: 1
  4151  001034  9C94               	bcf	3988,6,c	;volatile
  4152                           
  4153                           ; BSR set to: 1
  4154  001036  8E94               	bsf	3988,7,c	;volatile
  4155                           
  4156                           ; BSR set to: 1
  4157  001038  A8AC               	btfss	4012,4,c	;volatile
  4158  00103A  0012               	return	
  4159                           
  4160                           ; BSR set to: 1
  4161  00103C  BEAC               	btfsc	4012,7,c	;volatile
  4162  00103E  0012               	return	
  4163                           
  4164                           ; BSR set to: 1
  4165  001040  8C94               	bsf	3988,6,c	;volatile
  4166  001042  0012               	return	
  4167  001044                     __end_of_OpenUSART:
  4168                           	opt stack 0
  4169                           tblptru	equ	0xFF8
  4170                           prodh	equ	0xFF4
  4171                           prodl	equ	0xFF3
  4172                           intcon	equ	0xFF2
  4173                           postinc0	equ	0xFEE
  4174                           wreg	equ	0xFE8
  4175                           indf1	equ	0xFE7
  4176                           fsr1h	equ	0xFE2
  4177                           fsr1l	equ	0xFE1
  4178                           indf2	equ	0xFDF
  4179                           postinc2	equ	0xFDE
  4180                           postdec2	equ	0xFDD
  4181                           fsr2h	equ	0xFDA
  4182                           fsr2l	equ	0xFD9
  4183                           status	equ	0xFD8
  4184                           
  4185 ;; *************** function _OpenTimer1 *****************
  4186 ;; Defined at:
  4187 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;  config          1    wreg     unsigned char 
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;  config          1    0[BANK1 ] unsigned char 
  4192 ;; Return value:  Size  Location     Type
  4193 ;;		None               void
  4194 ;; Registers used:
  4195 ;;		wreg, status,2, status,0
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4201 ;;      Params:         0       0       0       0       0
  4202 ;;      Locals:         0       0       1       0       0
  4203 ;;      Temps:          0       0       0       0       0
  4204 ;;      Totals:         0       0       1       0       0
  4205 ;;Total ram usage:        1 bytes
  4206 ;; Hardware stack levels used:    1
  4207 ;; Hardware stack levels required when called:   10
  4208 ;; This function calls:
  4209 ;;		Nothing
  4210 ;; This function is called by:
  4211 ;;		_main
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           	psect	text26
  4216  001832                     __ptext26:
  4217                           	opt stack 0
  4218  001832                     _OpenTimer1:
  4219                           	opt stack 20
  4220                           
  4221                           ; BSR set to: 1
  4222                           ;incstack = 0
  4223                           ;OpenTimer1@config stored from wreg
  4224  001832  CFE8 F1A4          	movff	wreg,OpenTimer1@config
  4225  001836  0101               	movlb	1	; () banked
  4226  001838  0101               	movlb	1	; () banked
  4227  00183A  51A4               	movf	OpenTimer1@config& (0+255),w,b
  4228  00183C  0B7E               	andlw	126
  4229  00183E  6ECD               	movwf	4045,c	;volatile
  4230                           
  4231                           ; BSR set to: 1
  4232  001840  0101               	movlb	1	; () banked
  4233  001842  0101               	movlb	1	; () banked
  4234  001844  ADA4               	btfss	OpenTimer1@config& (0+255),6,b
  4235  001846  D002               	goto	l425
  4236                           
  4237                           ; BSR set to: 1
  4238  001848  8ECD               	bsf	4045,7,c	;volatile
  4239  00184A  D001               	goto	l3176
  4240  00184C                     l425:
  4241                           
  4242                           ; BSR set to: 1
  4243  00184C  9ECD               	bcf	4045,7,c	;volatile
  4244  00184E                     l3176:
  4245                           
  4246                           ; BSR set to: 1
  4247  00184E  0E00               	movlw	0
  4248  001850  6ECF               	movwf	4047,c	;volatile
  4249  001852  0E00               	movlw	0
  4250  001854  6ECE               	movwf	4046,c	;volatile
  4251                           
  4252                           ; BSR set to: 1
  4253  001856  909E               	bcf	3998,0,c	;volatile
  4254                           
  4255                           ; BSR set to: 1
  4256  001858  0101               	movlb	1	; () banked
  4257  00185A  0101               	movlb	1	; () banked
  4258  00185C  AFA4               	btfss	OpenTimer1@config& (0+255),7,b
  4259  00185E  D002               	goto	l427
  4260                           
  4261                           ; BSR set to: 1
  4262  001860  809D               	bsf	3997,0,c	;volatile
  4263  001862  D001               	goto	l428
  4264  001864                     l427:
  4265                           
  4266                           ; BSR set to: 1
  4267  001864  909D               	bcf	3997,0,c	;volatile
  4268  001866                     l428:
  4269                           
  4270                           ; BSR set to: 1
  4271  001866  80CD               	bsf	4045,0,c	;volatile
  4272                           
  4273                           ; BSR set to: 1
  4274  001868  0012               	return	
  4275  00186A                     __end_of_OpenTimer1:
  4276                           	opt stack 0
  4277                           tblptru	equ	0xFF8
  4278                           prodh	equ	0xFF4
  4279                           prodl	equ	0xFF3
  4280                           intcon	equ	0xFF2
  4281                           postinc0	equ	0xFEE
  4282                           wreg	equ	0xFE8
  4283                           indf1	equ	0xFE7
  4284                           fsr1h	equ	0xFE2
  4285                           fsr1l	equ	0xFE1
  4286                           indf2	equ	0xFDF
  4287                           postinc2	equ	0xFDE
  4288                           postdec2	equ	0xFDD
  4289                           fsr2h	equ	0xFDA
  4290                           fsr2l	equ	0xFD9
  4291                           status	equ	0xFD8
  4292                           
  4293 ;; *************** function _OpenTimer0 *****************
  4294 ;; Defined at:
  4295 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;  config          1    wreg     unsigned char 
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;  config          1    0[BANK1 ] unsigned char 
  4300 ;; Return value:  Size  Location     Type
  4301 ;;		None               void
  4302 ;; Registers used:
  4303 ;;		wreg, status,2, status,0
  4304 ;; Tracked objects:
  4305 ;;		On entry : 0/0
  4306 ;;		On exit  : 0/0
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4309 ;;      Params:         0       0       0       0       0
  4310 ;;      Locals:         0       0       1       0       0
  4311 ;;      Temps:          0       0       0       0       0
  4312 ;;      Totals:         0       0       1       0       0
  4313 ;;Total ram usage:        1 bytes
  4314 ;; Hardware stack levels used:    1
  4315 ;; Hardware stack levels required when called:   10
  4316 ;; This function calls:
  4317 ;;		Nothing
  4318 ;; This function is called by:
  4319 ;;		_main
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           	psect	text27
  4324  0019A0                     __ptext27:
  4325                           	opt stack 0
  4326  0019A0                     _OpenTimer0:
  4327                           	opt stack 20
  4328                           
  4329                           ; BSR set to: 1
  4330                           ;incstack = 0
  4331                           ;OpenTimer0@config stored from wreg
  4332  0019A0  CFE8 F1A4          	movff	wreg,OpenTimer0@config
  4333  0019A4  0101               	movlb	1	; () banked
  4334  0019A6  0101               	movlb	1	; () banked
  4335  0019A8  51A4               	movf	OpenTimer0@config& (0+255),w,b
  4336  0019AA  0B7F               	andlw	127
  4337  0019AC  6ED5               	movwf	4053,c	;volatile
  4338                           
  4339                           ; BSR set to: 1
  4340  0019AE  0E00               	movlw	0
  4341  0019B0  6ED7               	movwf	4055,c	;volatile
  4342                           
  4343                           ; BSR set to: 1
  4344  0019B2  0E00               	movlw	0
  4345  0019B4  6ED6               	movwf	4054,c	;volatile
  4346                           
  4347                           ; BSR set to: 1
  4348  0019B6  94F2               	bcf	intcon,2,c	;volatile
  4349                           
  4350                           ; BSR set to: 1
  4351  0019B8  0101               	movlb	1	; () banked
  4352  0019BA  0101               	movlb	1	; () banked
  4353  0019BC  AFA4               	btfss	OpenTimer0@config& (0+255),7,b
  4354  0019BE  D002               	goto	l401
  4355                           
  4356                           ; BSR set to: 1
  4357  0019C0  8AF2               	bsf	intcon,5,c	;volatile
  4358  0019C2  D001               	goto	l402
  4359  0019C4                     l401:
  4360                           
  4361                           ; BSR set to: 1
  4362  0019C4  9AF2               	bcf	intcon,5,c	;volatile
  4363  0019C6                     l402:
  4364                           
  4365                           ; BSR set to: 1
  4366  0019C6  8ED5               	bsf	4053,7,c	;volatile
  4367                           
  4368                           ; BSR set to: 1
  4369  0019C8  0012               	return	
  4370  0019CA                     __end_of_OpenTimer0:
  4371                           	opt stack 0
  4372                           tblptru	equ	0xFF8
  4373                           prodh	equ	0xFF4
  4374                           prodl	equ	0xFF3
  4375                           intcon	equ	0xFF2
  4376                           postinc0	equ	0xFEE
  4377                           wreg	equ	0xFE8
  4378                           indf1	equ	0xFE7
  4379                           fsr1h	equ	0xFE2
  4380                           fsr1l	equ	0xFE1
  4381                           indf2	equ	0xFDF
  4382                           postinc2	equ	0xFDE
  4383                           postdec2	equ	0xFDD
  4384                           fsr2h	equ	0xFDA
  4385                           fsr2l	equ	0xFD9
  4386                           status	equ	0xFD8
  4387                           
  4388 ;; *************** function _InterruptHandlerLow *****************
  4389 ;; Defined at:
  4390 ;;		line 125 in file "../src/interrupts.c"
  4391 ;; Parameters:    Size  Location     Type
  4392 ;;		None
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;		None
  4395 ;; Return value:  Size  Location     Type
  4396 ;;		None               void
  4397 ;; Registers used:
  4398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4404 ;;      Params:         0       0       0       0       0
  4405 ;;      Locals:         0       0       0       0       0
  4406 ;;      Temps:         17       0       0       0       0
  4407 ;;      Totals:        17       0       0       0       0
  4408 ;;Total ram usage:       17 bytes
  4409 ;; Hardware stack levels used:    1
  4410 ;; Hardware stack levels required when called:    9
  4411 ;; This function calls:
  4412 ;;		_timer1_int_handler
  4413 ;;		_uart_send_int_handler
  4414 ;; This function is called by:
  4415 ;;		Interrupt level 1
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           	psect	intcodelo
  4420  000018                     __pintcodelo:
  4421                           	opt stack 0
  4422  000018                     _InterruptHandlerLow:
  4423                           	opt stack 17
  4424                           
  4425                           ; BSR set to: 1
  4426                           ;incstack = 0
  4427  000018  CFD8 F01E          	movff	status,??_InterruptHandlerLow
  4428  00001C  CFE8 F01F          	movff	wreg,??_InterruptHandlerLow+1
  4429  000020  CFE0 F020          	movff	bsr,??_InterruptHandlerLow+2
  4430  000024  CFFA F021          	movff	pclath,??_InterruptHandlerLow+3
  4431  000028  CFFB F022          	movff	pclatu,??_InterruptHandlerLow+4
  4432  00002C  CFE9 F023          	movff	fsr0l,??_InterruptHandlerLow+5
  4433  000030  CFEA F024          	movff	fsr0h,??_InterruptHandlerLow+6
  4434  000034  CFE1 F025          	movff	fsr1l,??_InterruptHandlerLow+7
  4435  000038  CFE2 F026          	movff	fsr1h,??_InterruptHandlerLow+8
  4436  00003C  CFD9 F027          	movff	fsr2l,??_InterruptHandlerLow+9
  4437  000040  CFDA F028          	movff	fsr2h,??_InterruptHandlerLow+10
  4438  000044  CFF3 F029          	movff	prodl,??_InterruptHandlerLow+11
  4439  000048  CFF4 F02A          	movff	prodh,??_InterruptHandlerLow+12
  4440  00004C  CFF6 F02B          	movff	tblptrl,??_InterruptHandlerLow+13
  4441  000050  CFF7 F02C          	movff	tblptrh,??_InterruptHandlerLow+14
  4442  000054  CFF8 F02D          	movff	tblptru,??_InterruptHandlerLow+15
  4443  000058  CFF5 F02E          	movff	tablat,??_InterruptHandlerLow+16
  4444                           
  4445                           ;interrupts.c: 128: if (PIR1bits.TMR1IF) {
  4446  00005C  A09E               	btfss	3998,0,c	;volatile
  4447  00005E  D003               	goto	i1l3636
  4448                           
  4449                           ;interrupts.c: 129: PIR1bits.TMR1IF = 0;
  4450  000060  909E               	bcf	3998,0,c	;volatile
  4451                           
  4452                           ;interrupts.c: 130: timer1_int_handler();
  4453  000062  ECA1  F00C         	call	_timer1_int_handler	;wreg free
  4454  000066                     i1l3636:
  4455                           
  4456                           ;interrupts.c: 131: }
  4457                           ;interrupts.c: 134: if (PIR1bits.TX1IF && PIE1bits.TX1IE) {
  4458  000066  B89E               	btfsc	3998,4,c	;volatile
  4459  000068  A89D               	btfss	3997,4,c	;volatile
  4460  00006A  D002               	goto	i1l53
  4461                           
  4462                           ;interrupts.c: 135: uart_send_int_handler();
  4463  00006C  EC2E  F009         	call	_uart_send_int_handler	;wreg free
  4464  000070                     i1l53:
  4465  000070  C02E  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4466  000074  C02D  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4467  000078  C02C  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4468  00007C  C02B  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4469  000080  C02A  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4470  000084  C029  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4471  000088  C028  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4472  00008C  C027  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4473  000090  C026  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4474  000094  C025  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4475  000098  C024  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4476  00009C  C023  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4477  0000A0  C022  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4478  0000A4  C021  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4479  0000A8  C020  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4480  0000AC  C01F  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4481  0000B0  C01E  FFD8         	movff	??_InterruptHandlerLow,status
  4482  0000B4  0010               	retfie	
  4483  0000B6                     __end_of_InterruptHandlerLow:
  4484                           	opt stack 0
  4485                           pclatu	equ	0xFFB
  4486                           pclath	equ	0xFFA
  4487                           tblptru	equ	0xFF8
  4488                           tblptrh	equ	0xFF7
  4489                           tblptrl	equ	0xFF6
  4490                           tablat	equ	0xFF5
  4491                           prodh	equ	0xFF4
  4492                           prodl	equ	0xFF3
  4493                           intcon	equ	0xFF2
  4494                           postinc0	equ	0xFEE
  4495                           fsr0h	equ	0xFEA
  4496                           fsr0l	equ	0xFE9
  4497                           wreg	equ	0xFE8
  4498                           indf1	equ	0xFE7
  4499                           fsr1h	equ	0xFE2
  4500                           fsr1l	equ	0xFE1
  4501                           bsr	equ	0xFE0
  4502                           indf2	equ	0xFDF
  4503                           postinc2	equ	0xFDE
  4504                           postdec2	equ	0xFDD
  4505                           fsr2h	equ	0xFDA
  4506                           fsr2l	equ	0xFD9
  4507                           status	equ	0xFD8
  4508                           
  4509 ;; *************** function _uart_send_int_handler *****************
  4510 ;; Defined at:
  4511 ;;		line 17 in file "../src/my_uart.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;		None
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;		None
  4516 ;; Return value:  Size  Location     Type
  4517 ;;		None               void
  4518 ;; Registers used:
  4519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4525 ;;      Params:         0       0       0       0       0
  4526 ;;      Locals:         0       0       0       0       0
  4527 ;;      Temps:          1       0       0       0       0
  4528 ;;      Totals:         1       0       0       0       0
  4529 ;;Total ram usage:        1 bytes
  4530 ;; Hardware stack levels used:    1
  4531 ;; Hardware stack levels required when called:    6
  4532 ;; This function calls:
  4533 ;;		_WriteUSART
  4534 ;; This function is called by:
  4535 ;;		_InterruptHandlerLow
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539                           	psect	text29
  4540  00125C                     __ptext29:
  4541                           	opt stack 0
  4542  00125C                     _uart_send_int_handler:
  4543                           	opt stack 19
  4544                           
  4545                           ;my_uart.c: 19: if (uc_ptr->Tx_buflen == uc_ptr->msg_length) {
  4546                           
  4547                           ;incstack = 0
  4548  00125C  0100               	movlb	0	; () banked
  4549  00125E  EE20 F004          	lfsr	2,4
  4550  001262  0100               	movlb	0	; () banked
  4551  001264  51E9               	movf	_uc_ptr& (0+255),w,b
  4552  001266  26D9               	addwf	fsr2l,f,c
  4553  001268  0100               	movlb	0	; () banked
  4554  00126A  51EA               	movf	(_uc_ptr+1)& (0+255),w,b
  4555  00126C  22DA               	addwfc	fsr2h,f,c
  4556  00126E  0100               	movlb	0	; () banked
  4557  001270  EE10 F005          	lfsr	1,5
  4558  001274  0100               	movlb	0	; () banked
  4559  001276  51E9               	movf	_uc_ptr& (0+255),w,b
  4560  001278  26E1               	addwf	fsr1l,f,c
  4561  00127A  0100               	movlb	0	; () banked
  4562  00127C  51EA               	movf	(_uc_ptr+1)& (0+255),w,b
  4563  00127E  22E2               	addwfc	fsr1h,f,c
  4564  001280  50E7               	movf	indf1,w,c
  4565  001282  62DF               	cpfseq	indf2,c
  4566  001284  D00D               	goto	i1l3594
  4567                           
  4568                           ; BSR set to: 0
  4569                           ;my_uart.c: 20: PIE1bits.TX1IE = 0;
  4570  001286  989D               	bcf	3997,4,c	;volatile
  4571                           
  4572                           ; BSR set to: 0
  4573                           ;my_uart.c: 21: uc_ptr->Tx_buflen = 0;
  4574  001288  0100               	movlb	0	; () banked
  4575  00128A  EE20 F004          	lfsr	2,4
  4576  00128E  0100               	movlb	0	; () banked
  4577  001290  51E9               	movf	_uc_ptr& (0+255),w,b
  4578  001292  26D9               	addwf	fsr2l,f,c
  4579  001294  0100               	movlb	0	; () banked
  4580  001296  51EA               	movf	(_uc_ptr+1)& (0+255),w,b
  4581  001298  22DA               	addwfc	fsr2h,f,c
  4582  00129A  0E00               	movlw	0
  4583  00129C  6EDF               	movwf	indf2,c
  4584                           
  4585                           ;my_uart.c: 22: } else {
  4586  00129E  0012               	return	
  4587  0012A0                     i1l3594:
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;my_uart.c: 23: WriteUSART(uc_ptr->Tx_buffer[uc_ptr->Tx_buflen++]);
  4591  0012A0  0100               	movlb	0	; () banked
  4592  0012A2  EE20 F004          	lfsr	2,4
  4593  0012A6  0100               	movlb	0	; () banked
  4594  0012A8  51E9               	movf	_uc_ptr& (0+255),w,b
  4595  0012AA  26D9               	addwf	fsr2l,f,c
  4596  0012AC  0100               	movlb	0	; () banked
  4597  0012AE  51EA               	movf	(_uc_ptr+1)& (0+255),w,b
  4598  0012B0  22DA               	addwfc	fsr2h,f,c
  4599  0012B2  CFDF F002          	movff	indf2,??_uart_send_int_handler
  4600  0012B6  0E01               	movlw	1
  4601  0012B8  26DF               	addwf	indf2,f,c
  4602  0012BA  5002               	movf	??_uart_send_int_handler,w,c
  4603  0012BC  0D01               	mullw	1
  4604  0012BE  50F3               	movf	prodl,w,c
  4605  0012C0  0100               	movlb	0	; () banked
  4606  0012C2  0100               	movlb	0	; () banked
  4607  0012C4  25E9               	addwf	_uc_ptr& (0+255),w,b
  4608  0012C6  6ED9               	movwf	fsr2l,c
  4609  0012C8  50F4               	movf	prodh,w,c
  4610  0012CA  0100               	movlb	0	; () banked
  4611  0012CC  0100               	movlb	0	; () banked
  4612  0012CE  21EA               	addwfc	(_uc_ptr+1)& (0+255),w,b
  4613  0012D0  6EDA               	movwf	fsr2h,c
  4614  0012D2  50DF               	movf	indf2,w,c
  4615  0012D4  EC2A  F00D         	call	_WriteUSART
  4616  0012D8  0012               	return	
  4617  0012DA                     __end_of_uart_send_int_handler:
  4618                           	opt stack 0
  4619                           pclatu	equ	0xFFB
  4620                           pclath	equ	0xFFA
  4621                           tblptru	equ	0xFF8
  4622                           tblptrh	equ	0xFF7
  4623                           tblptrl	equ	0xFF6
  4624                           tablat	equ	0xFF5
  4625                           prodh	equ	0xFF4
  4626                           prodl	equ	0xFF3
  4627                           intcon	equ	0xFF2
  4628                           postinc0	equ	0xFEE
  4629                           fsr0h	equ	0xFEA
  4630                           fsr0l	equ	0xFE9
  4631                           wreg	equ	0xFE8
  4632                           indf1	equ	0xFE7
  4633                           fsr1h	equ	0xFE2
  4634                           fsr1l	equ	0xFE1
  4635                           bsr	equ	0xFE0
  4636                           indf2	equ	0xFDF
  4637                           postinc2	equ	0xFDE
  4638                           postdec2	equ	0xFDD
  4639                           fsr2h	equ	0xFDA
  4640                           fsr2l	equ	0xFD9
  4641                           status	equ	0xFD8
  4642                           
  4643 ;; *************** function _WriteUSART *****************
  4644 ;; Defined at:
  4645 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\USART\uwrite.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;  data            1    wreg     unsigned char 
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;  data            1    0[COMRAM] unsigned char 
  4650 ;; Return value:  Size  Location     Type
  4651 ;;		None               void
  4652 ;; Registers used:
  4653 ;;		wreg
  4654 ;; Tracked objects:
  4655 ;;		On entry : 0/0
  4656 ;;		On exit  : 0/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4659 ;;      Params:         0       0       0       0       0
  4660 ;;      Locals:         1       0       0       0       0
  4661 ;;      Temps:          0       0       0       0       0
  4662 ;;      Totals:         1       0       0       0       0
  4663 ;;Total ram usage:        1 bytes
  4664 ;; Hardware stack levels used:    1
  4665 ;; Hardware stack levels required when called:    5
  4666 ;; This function calls:
  4667 ;;		Nothing
  4668 ;; This function is called by:
  4669 ;;		_uart_send_int_handler
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           	psect	text30
  4674  001A54                     __ptext30:
  4675                           	opt stack 0
  4676  001A54                     _WriteUSART:
  4677                           	opt stack 19
  4678                           
  4679                           ;incstack = 0
  4680                           ;WriteUSART@data stored from wreg
  4681  001A54  CFE8 F001          	movff	wreg,WriteUSART@data
  4682  001A58  ACAC               	btfss	4012,6,c	;volatile
  4683  001A5A  D003               	goto	i1l3450
  4684  001A5C  90AC               	bcf	4012,0,c	;volatile
  4685  001A5E  B24E               	btfsc	_USART_Status,1,c
  4686  001A60  80AC               	bsf	4012,0,c	;volatile
  4687  001A62                     i1l3450:
  4688  001A62  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
  4689  001A66  0012               	return	
  4690  001A68                     __end_of_WriteUSART:
  4691                           	opt stack 0
  4692                           pclatu	equ	0xFFB
  4693                           pclath	equ	0xFFA
  4694                           tblptru	equ	0xFF8
  4695                           tblptrh	equ	0xFF7
  4696                           tblptrl	equ	0xFF6
  4697                           tablat	equ	0xFF5
  4698                           prodh	equ	0xFF4
  4699                           prodl	equ	0xFF3
  4700                           intcon	equ	0xFF2
  4701                           postinc0	equ	0xFEE
  4702                           fsr0h	equ	0xFEA
  4703                           fsr0l	equ	0xFE9
  4704                           wreg	equ	0xFE8
  4705                           indf1	equ	0xFE7
  4706                           fsr1h	equ	0xFE2
  4707                           fsr1l	equ	0xFE1
  4708                           bsr	equ	0xFE0
  4709                           indf2	equ	0xFDF
  4710                           postinc2	equ	0xFDE
  4711                           postdec2	equ	0xFDD
  4712                           fsr2h	equ	0xFDA
  4713                           fsr2l	equ	0xFD9
  4714                           status	equ	0xFD8
  4715                           
  4716 ;; *************** function _timer1_int_handler *****************
  4717 ;; Defined at:
  4718 ;;		line 45 in file "../src/user_interrupts.c"
  4719 ;; Parameters:    Size  Location     Type
  4720 ;;		None
  4721 ;; Auto vars:     Size  Location     Type
  4722 ;;  result          2   27[COMRAM] unsigned int 
  4723 ;; Return value:  Size  Location     Type
  4724 ;;		None               void
  4725 ;; Registers used:
  4726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4727 ;; Tracked objects:
  4728 ;;		On entry : 0/0
  4729 ;;		On exit  : 0/0
  4730 ;;		Unchanged: 0/0
  4731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4732 ;;      Params:         0       0       0       0       0
  4733 ;;      Locals:         2       0       0       0       0
  4734 ;;      Temps:          1       0       0       0       0
  4735 ;;      Totals:         3       0       0       0       0
  4736 ;;Total ram usage:        3 bytes
  4737 ;; Hardware stack levels used:    1
  4738 ;; Hardware stack levels required when called:    8
  4739 ;; This function calls:
  4740 ;;		_ReadTimer1
  4741 ;;		_ToMainLow_sendmsg
  4742 ;;		_WriteTimer1
  4743 ;; This function is called by:
  4744 ;;		_InterruptHandlerLow
  4745 ;; This function uses a non-reentrant model
  4746 ;;
  4747                           
  4748                           	psect	text31
  4749  001942                     __ptext31:
  4750                           	opt stack 0
  4751  001942                     _timer1_int_handler:
  4752                           	opt stack 17
  4753                           
  4754                           ;user_interrupts.c: 46: unsigned int result;
  4755                           ;user_interrupts.c: 52: result = ReadTimer1();
  4756                           
  4757                           ;incstack = 0
  4758  001942  EC58  F00D         	call	_ReadTimer1	;wreg free
  4759  001946  C001  F01C         	movff	?_ReadTimer1,timer1_int_handler@result
  4760  00194A  C002  F01D         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  4761                           
  4762                           ;user_interrupts.c: 53: ToMainLow_sendmsg(0, 11, (void *) 0);
  4763  00194E  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  4764  001950  0E0B               	movlw	11
  4765  001952  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4766  001954  501B               	movf	??_timer1_int_handler& (0+255),w,c
  4767  001956  0E00               	movlw	0
  4768  001958  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  4769  00195A  0E00               	movlw	0
  4770  00195C  6E18               	movwf	ToMainLow_sendmsg@data,c
  4771  00195E  0E00               	movlw	0
  4772  001960  EC0D  F00D         	call	_ToMainLow_sendmsg
  4773                           
  4774                           ;user_interrupts.c: 56: WriteTimer1(0);
  4775  001964  0E00               	movlw	0
  4776  001966  6E02               	movwf	WriteTimer1@timer1+1,c
  4777  001968  0E00               	movlw	0
  4778  00196A  6E01               	movwf	WriteTimer1@timer1,c
  4779  00196C  EC4F  F00D         	call	_WriteTimer1	;wreg free
  4780  001970  0012               	return	
  4781  001972                     __end_of_timer1_int_handler:
  4782                           	opt stack 0
  4783                           pclatu	equ	0xFFB
  4784                           pclath	equ	0xFFA
  4785                           tblptru	equ	0xFF8
  4786                           tblptrh	equ	0xFF7
  4787                           tblptrl	equ	0xFF6
  4788                           tablat	equ	0xFF5
  4789                           prodh	equ	0xFF4
  4790                           prodl	equ	0xFF3
  4791                           intcon	equ	0xFF2
  4792                           postinc0	equ	0xFEE
  4793                           fsr0h	equ	0xFEA
  4794                           fsr0l	equ	0xFE9
  4795                           wreg	equ	0xFE8
  4796                           indf1	equ	0xFE7
  4797                           fsr1h	equ	0xFE2
  4798                           fsr1l	equ	0xFE1
  4799                           bsr	equ	0xFE0
  4800                           indf2	equ	0xFDF
  4801                           postinc2	equ	0xFDE
  4802                           postdec2	equ	0xFDD
  4803                           fsr2h	equ	0xFDA
  4804                           fsr2l	equ	0xFD9
  4805                           status	equ	0xFD8
  4806                           
  4807 ;; *************** function _WriteTimer1 *****************
  4808 ;; Defined at:
  4809 ;;		line 14 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;  timer1          2    0[COMRAM] unsigned int 
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;  timer           2    2[COMRAM] struct Timers
  4814 ;; Return value:  Size  Location     Type
  4815 ;;		None               void
  4816 ;; Registers used:
  4817 ;;		None
  4818 ;; Tracked objects:
  4819 ;;		On entry : 0/0
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4823 ;;      Params:         2       0       0       0       0
  4824 ;;      Locals:         2       0       0       0       0
  4825 ;;      Temps:          0       0       0       0       0
  4826 ;;      Totals:         4       0       0       0       0
  4827 ;;Total ram usage:        4 bytes
  4828 ;; Hardware stack levels used:    1
  4829 ;; Hardware stack levels required when called:    5
  4830 ;; This function calls:
  4831 ;;		Nothing
  4832 ;; This function is called by:
  4833 ;;		_timer1_int_handler
  4834 ;; This function uses a non-reentrant model
  4835 ;;
  4836                           
  4837                           	psect	text32
  4838  001A9E                     __ptext32:
  4839                           	opt stack 0
  4840  001A9E                     _WriteTimer1:
  4841                           	opt stack 19
  4842                           
  4843                           ;incstack = 0
  4844  001A9E  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  4845  001AA2  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  4846  001AA6  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  4847  001AAA  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  4848  001AAE  0012               	return	
  4849  001AB0                     __end_of_WriteTimer1:
  4850                           	opt stack 0
  4851                           pclatu	equ	0xFFB
  4852                           pclath	equ	0xFFA
  4853                           tblptru	equ	0xFF8
  4854                           tblptrh	equ	0xFF7
  4855                           tblptrl	equ	0xFF6
  4856                           tablat	equ	0xFF5
  4857                           prodh	equ	0xFF4
  4858                           prodl	equ	0xFF3
  4859                           intcon	equ	0xFF2
  4860                           postinc0	equ	0xFEE
  4861                           fsr0h	equ	0xFEA
  4862                           fsr0l	equ	0xFE9
  4863                           wreg	equ	0xFE8
  4864                           indf1	equ	0xFE7
  4865                           fsr1h	equ	0xFE2
  4866                           fsr1l	equ	0xFE1
  4867                           bsr	equ	0xFE0
  4868                           indf2	equ	0xFDF
  4869                           postinc2	equ	0xFDE
  4870                           postdec2	equ	0xFDD
  4871                           fsr2h	equ	0xFDA
  4872                           fsr2l	equ	0xFD9
  4873                           status	equ	0xFD8
  4874                           
  4875 ;; *************** function _ToMainLow_sendmsg *****************
  4876 ;; Defined at:
  4877 ;;		line 103 in file "../src/messages.c"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;  length          1    wreg     unsigned char 
  4880 ;;  msgtype         1   22[COMRAM] unsigned char 
  4881 ;;  data            2   23[COMRAM] PTR void 
  4882 ;;		 -> NULL(0), 
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;  length          1   25[COMRAM] unsigned char 
  4885 ;; Return value:  Size  Location     Type
  4886 ;;                  1    wreg      char 
  4887 ;; Registers used:
  4888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4889 ;; Tracked objects:
  4890 ;;		On entry : 0/0
  4891 ;;		On exit  : 0/0
  4892 ;;		Unchanged: 0/0
  4893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4894 ;;      Params:         3       0       0       0       0
  4895 ;;      Locals:         1       0       0       0       0
  4896 ;;      Temps:          0       0       0       0       0
  4897 ;;      Totals:         4       0       0       0       0
  4898 ;;Total ram usage:        4 bytes
  4899 ;; Hardware stack levels used:    1
  4900 ;; Hardware stack levels required when called:    7
  4901 ;; This function calls:
  4902 ;;		i1_send_msg
  4903 ;; This function is called by:
  4904 ;;		_timer1_int_handler
  4905 ;; This function uses a non-reentrant model
  4906 ;;
  4907                           
  4908                           	psect	text33
  4909  001A1A                     __ptext33:
  4910                           	opt stack 0
  4911  001A1A                     _ToMainLow_sendmsg:
  4912                           	opt stack 17
  4913                           
  4914                           ;incstack = 0
  4915                           ;ToMainLow_sendmsg@length stored from wreg
  4916  001A1A  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  4917                           
  4918                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  4919                           ;	Return value of _ToMainLow_sendmsg is never used
  4920  001A1E  0100               	movlb	0	; () banked
  4921  001A20  0E00               	movlw	high _ToMainLow_MQ
  4922  001A22  6E0C               	movwf	i1send_msg@qptr+1,c
  4923  001A24  0100               	movlb	0	; () banked
  4924  001A26  0E80               	movlw	low _ToMainLow_MQ
  4925  001A28  6E0B               	movwf	i1send_msg@qptr,c
  4926  001A2A  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  4927  001A2E  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  4928  001A32  6A10               	clrf	i1send_msg@data+1,c
  4929  001A34  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  4930  001A38  EC36  F007         	call	i1_send_msg	;wreg free
  4931  001A3C  0012               	return	
  4932  001A3E                     __end_of_ToMainLow_sendmsg:
  4933                           	opt stack 0
  4934                           pclatu	equ	0xFFB
  4935                           pclath	equ	0xFFA
  4936                           tblptru	equ	0xFF8
  4937                           tblptrh	equ	0xFF7
  4938                           tblptrl	equ	0xFF6
  4939                           tablat	equ	0xFF5
  4940                           prodh	equ	0xFF4
  4941                           prodl	equ	0xFF3
  4942                           intcon	equ	0xFF2
  4943                           postinc0	equ	0xFEE
  4944                           fsr0h	equ	0xFEA
  4945                           fsr0l	equ	0xFE9
  4946                           wreg	equ	0xFE8
  4947                           indf1	equ	0xFE7
  4948                           fsr1h	equ	0xFE2
  4949                           fsr1l	equ	0xFE1
  4950                           bsr	equ	0xFE0
  4951                           indf2	equ	0xFDF
  4952                           postinc2	equ	0xFDE
  4953                           postdec2	equ	0xFDD
  4954                           fsr2h	equ	0xFDA
  4955                           fsr2l	equ	0xFD9
  4956                           status	equ	0xFD8
  4957                           
  4958 ;; *************** function i1_send_msg *****************
  4959 ;; Defined at:
  4960 ;;		line 24 in file "../src/messages.c"
  4961 ;; Parameters:    Size  Location     Type
  4962 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  4963 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4964 ;;  length          1   12[COMRAM] unsigned char 
  4965 ;;  msgtype         1   13[COMRAM] unsigned char 
  4966 ;;  data            2   14[COMRAM] PTR void 
  4967 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), main@t1thread_data(2), 
  4968 ;;		 -> main@ic(28), 
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  4971 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4972 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4973 ;;  send_msg        2   17[COMRAM] unsigned int 
  4974 ;;  send_msg        1   19[COMRAM] unsigned char 
  4975 ;; Return value:  Size  Location     Type
  4976 ;;                  1    wreg      char 
  4977 ;; Registers used:
  4978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4984 ;;      Params:         6       0       0       0       0
  4985 ;;      Locals:         5       0       0       0       0
  4986 ;;      Temps:          1       0       0       0       0
  4987 ;;      Totals:        12       0       0       0       0
  4988 ;;Total ram usage:       12 bytes
  4989 ;; Hardware stack levels used:    1
  4990 ;; Hardware stack levels required when called:    6
  4991 ;; This function calls:
  4992 ;;		i1_memcpy
  4993 ;; This function is called by:
  4994 ;;		_ToMainLow_sendmsg
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998                           	psect	text34
  4999  000E6C                     __ptext34:
  5000                           	opt stack 0
  5001  000E6C                     i1_send_msg:
  5002                           	opt stack 17
  5003                           
  5004                           ;messages.c: 25: unsigned char slot;
  5005                           ;messages.c: 27: msg *qmsg;
  5006                           ;messages.c: 28: size_t tlength = length;
  5007                           
  5008                           ;incstack = 0
  5009  000E6C  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5010  000E70  6A13               	clrf	i1send_msg@tlength+1,c
  5011                           
  5012                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5013  000E72  EE20 F034          	lfsr	2,52
  5014  000E76  500B               	movf	i1send_msg@qptr,w,c
  5015  000E78  26D9               	addwf	fsr2l,f,c
  5016  000E7A  500C               	movf	i1send_msg@qptr+1,w,c
  5017  000E7C  22DA               	addwfc	fsr2h,f,c
  5018  000E7E  50DF               	movf	indf2,w,c
  5019  000E80  6E14               	movwf	i1send_msg@slot,c
  5020                           
  5021                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5022  000E82  5014               	movf	i1send_msg@slot,w,c
  5023  000E84  0D0D               	mullw	13
  5024  000E86  50F3               	movf	prodl,w,c
  5025  000E88  240B               	addwf	i1send_msg@qptr,w,c
  5026  000E8A  6E15               	movwf	i1send_msg@qmsg,c
  5027  000E8C  50F4               	movf	prodh,w,c
  5028  000E8E  200C               	addwfc	i1send_msg@qptr+1,w,c
  5029  000E90  6E16               	movwf	i1send_msg@qmsg+1,c
  5030                           
  5031                           ;messages.c: 41: if (qmsg->full != 0) {
  5032  000E92  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5033  000E96  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5034  000E9A  50DF               	movf	indf2,w,c
  5035  000E9C  B4D8               	btfsc	status,2,c
  5036  000E9E  D002               	goto	i1l3608
  5037                           
  5038                           ;messages.c: 42: return (-1);
  5039  000EA0  0EFF               	movlw	255
  5040  000EA2  0012               	return	
  5041  000EA4                     i1l3608:
  5042                           
  5043                           ;messages.c: 43: }
  5044                           ;messages.c: 46: qmsg->length = length;
  5045  000EA4  EE20 F001          	lfsr	2,1
  5046  000EA8  5015               	movf	i1send_msg@qmsg,w,c
  5047  000EAA  26D9               	addwf	fsr2l,f,c
  5048  000EAC  5016               	movf	i1send_msg@qmsg+1,w,c
  5049  000EAE  22DA               	addwfc	fsr2h,f,c
  5050  000EB0  C00D  FFDF         	movff	i1send_msg@length,indf2
  5051                           
  5052                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5053  000EB4  EE20 F002          	lfsr	2,2
  5054  000EB8  5015               	movf	i1send_msg@qmsg,w,c
  5055  000EBA  26D9               	addwf	fsr2l,f,c
  5056  000EBC  5016               	movf	i1send_msg@qmsg+1,w,c
  5057  000EBE  22DA               	addwfc	fsr2h,f,c
  5058  000EC0  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5059                           
  5060                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5061  000EC4  0E03               	movlw	3
  5062  000EC6  2415               	addwf	i1send_msg@qmsg,w,c
  5063  000EC8  6E01               	movwf	i1memcpy@d1,c
  5064  000ECA  0E00               	movlw	0
  5065  000ECC  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5066  000ECE  6E02               	movwf	i1memcpy@d1+1,c
  5067  000ED0  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5068  000ED4  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5069  000ED8  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5070  000EDC  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5071  000EE0  ECDB  F00B         	call	i1_memcpy	;wreg free
  5072                           
  5073                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5074  000EE4  EE20 F034          	lfsr	2,52
  5075  000EE8  500B               	movf	i1send_msg@qptr,w,c
  5076  000EEA  26D9               	addwf	fsr2l,f,c
  5077  000EEC  500C               	movf	i1send_msg@qptr+1,w,c
  5078  000EEE  22DA               	addwfc	fsr2h,f,c
  5079  000EF0  EE10 F034          	lfsr	1,52
  5080  000EF4  500B               	movf	i1send_msg@qptr,w,c
  5081  000EF6  26E1               	addwf	fsr1l,f,c
  5082  000EF8  500C               	movf	i1send_msg@qptr+1,w,c
  5083  000EFA  22E2               	addwfc	fsr1h,f,c
  5084  000EFC  50E7               	movf	indf1,w,c
  5085  000EFE  6E11               	movwf	??i1_send_msg& (0+255),c
  5086  000F00  2811               	incf	??i1_send_msg,w,c
  5087  000F02  0B03               	andlw	3
  5088  000F04  6EDF               	movwf	indf2,c
  5089                           
  5090                           ;messages.c: 59: qmsg->full = 1;
  5091  000F06  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5092  000F0A  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5093  000F0E  0E01               	movlw	1
  5094  000F10  6EDF               	movwf	indf2,c
  5095                           
  5096                           ;messages.c: 60: return (1);
  5097  000F12  0E01               	movlw	1
  5098  000F14  0012               	return	
  5099  000F16                     __end_ofi1_send_msg:
  5100                           	opt stack 0
  5101                           pclatu	equ	0xFFB
  5102                           pclath	equ	0xFFA
  5103                           tblptru	equ	0xFF8
  5104                           tblptrh	equ	0xFF7
  5105                           tblptrl	equ	0xFF6
  5106                           tablat	equ	0xFF5
  5107                           prodh	equ	0xFF4
  5108                           prodl	equ	0xFF3
  5109                           intcon	equ	0xFF2
  5110                           postinc0	equ	0xFEE
  5111                           fsr0h	equ	0xFEA
  5112                           fsr0l	equ	0xFE9
  5113                           wreg	equ	0xFE8
  5114                           indf1	equ	0xFE7
  5115                           fsr1h	equ	0xFE2
  5116                           fsr1l	equ	0xFE1
  5117                           bsr	equ	0xFE0
  5118                           indf2	equ	0xFDF
  5119                           postinc2	equ	0xFDE
  5120                           postdec2	equ	0xFDD
  5121                           fsr2h	equ	0xFDA
  5122                           fsr2l	equ	0xFD9
  5123                           status	equ	0xFD8
  5124                           
  5125 ;; *************** function i1_memcpy *****************
  5126 ;; Defined at:
  5127 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;  d1              2    0[COMRAM] PTR void 
  5130 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5131 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5132 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  5133 ;;  s1              2    2[COMRAM] PTR const void 
  5134 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5135 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5136 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  5137 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  5138 ;;		 -> main@ic(28), 
  5139 ;;  n               2    4[COMRAM] unsigned int 
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5142 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5143 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5144 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  5145 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  5146 ;;		 -> main@ic(28), 
  5147 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5148 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5149 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5150 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  2    0[COMRAM] PTR void 
  5153 ;; Registers used:
  5154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5160 ;;      Params:         6       0       0       0       0
  5161 ;;      Locals:         4       0       0       0       0
  5162 ;;      Temps:          0       0       0       0       0
  5163 ;;      Totals:        10       0       0       0       0
  5164 ;;Total ram usage:       10 bytes
  5165 ;; Hardware stack levels used:    1
  5166 ;; Hardware stack levels required when called:    5
  5167 ;; This function calls:
  5168 ;;		Nothing
  5169 ;; This function is called by:
  5170 ;;		i1_send_msg
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           	psect	text35
  5175  0017B6                     __ptext35:
  5176                           	opt stack 0
  5177  0017B6                     i1_memcpy:
  5178                           	opt stack 17
  5179                           
  5180                           ;incstack = 0
  5181  0017B6  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5182  0017BA  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5183  0017BE  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5184  0017C2  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5185  0017C6  D00E               	goto	i1l3576
  5186  0017C8                     i1l3570:
  5187  0017C8  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5188  0017CC  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5189  0017D0  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5190  0017D4  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5191  0017D8  CFDF FFE7          	movff	indf2,indf1
  5192  0017DC  4A09               	infsnz	i1memcpy@s,f,c
  5193  0017DE  2A0A               	incf	i1memcpy@s+1,f,c
  5194  0017E0  4A07               	infsnz	i1memcpy@d,f,c
  5195  0017E2  2A08               	incf	i1memcpy@d+1,f,c
  5196  0017E4                     i1l3576:
  5197  0017E4  0605               	decf	i1memcpy@n,f,c
  5198  0017E6  A0D8               	btfss	status,0,c
  5199  0017E8  0606               	decf	i1memcpy@n+1,f,c
  5200  0017EA  2805               	incf	i1memcpy@n& (0+255),w,c
  5201  0017EC  B4D8               	btfsc	status,2,c
  5202  0017EE  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5203  0017F0  B4D8               	btfsc	status,2,c
  5204                           
  5205                           ;	Return value of i1_memcpy is never used
  5206  0017F2  0012               	return	
  5207  0017F4  D7E9               	goto	i1l3570
  5208  0017F6                     __end_ofi1_memcpy:
  5209                           	opt stack 0
  5210                           pclatu	equ	0xFFB
  5211                           pclath	equ	0xFFA
  5212                           tblptru	equ	0xFF8
  5213                           tblptrh	equ	0xFF7
  5214                           tblptrl	equ	0xFF6
  5215                           tablat	equ	0xFF5
  5216                           prodh	equ	0xFF4
  5217                           prodl	equ	0xFF3
  5218                           intcon	equ	0xFF2
  5219                           postinc0	equ	0xFEE
  5220                           fsr0h	equ	0xFEA
  5221                           fsr0l	equ	0xFE9
  5222                           wreg	equ	0xFE8
  5223                           indf1	equ	0xFE7
  5224                           fsr1h	equ	0xFE2
  5225                           fsr1l	equ	0xFE1
  5226                           bsr	equ	0xFE0
  5227                           indf2	equ	0xFDF
  5228                           postinc2	equ	0xFDE
  5229                           postdec2	equ	0xFDD
  5230                           fsr2h	equ	0xFDA
  5231                           fsr2l	equ	0xFD9
  5232                           status	equ	0xFD8
  5233                           
  5234 ;; *************** function _ReadTimer1 *****************
  5235 ;; Defined at:
  5236 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
  5237 ;; Parameters:    Size  Location     Type
  5238 ;;		None
  5239 ;; Auto vars:     Size  Location     Type
  5240 ;;  timer           2    2[COMRAM] struct Timers
  5241 ;; Return value:  Size  Location     Type
  5242 ;;                  2    0[COMRAM] unsigned int 
  5243 ;; Registers used:
  5244 ;;		None
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5250 ;;      Params:         2       0       0       0       0
  5251 ;;      Locals:         2       0       0       0       0
  5252 ;;      Temps:          0       0       0       0       0
  5253 ;;      Totals:         4       0       0       0       0
  5254 ;;Total ram usage:        4 bytes
  5255 ;; Hardware stack levels used:    1
  5256 ;; Hardware stack levels required when called:    5
  5257 ;; This function calls:
  5258 ;;		Nothing
  5259 ;; This function is called by:
  5260 ;;		_timer1_int_handler
  5261 ;; This function uses a non-reentrant model
  5262 ;;
  5263                           
  5264                           	psect	text36
  5265  001AB0                     __ptext36:
  5266                           	opt stack 0
  5267  001AB0                     _ReadTimer1:
  5268                           	opt stack 19
  5269                           
  5270                           ;incstack = 0
  5271  001AB0  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  5272  001AB4  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  5273  001AB8  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  5274  001ABC  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  5275  001AC0  0012               	return	
  5276  001AC2                     __end_of_ReadTimer1:
  5277                           	opt stack 0
  5278                           pclatu	equ	0xFFB
  5279                           pclath	equ	0xFFA
  5280                           tblptru	equ	0xFF8
  5281                           tblptrh	equ	0xFF7
  5282                           tblptrl	equ	0xFF6
  5283                           tablat	equ	0xFF5
  5284                           prodh	equ	0xFF4
  5285                           prodl	equ	0xFF3
  5286                           intcon	equ	0xFF2
  5287                           postinc0	equ	0xFEE
  5288                           fsr0h	equ	0xFEA
  5289                           fsr0l	equ	0xFE9
  5290                           wreg	equ	0xFE8
  5291                           indf1	equ	0xFE7
  5292                           fsr1h	equ	0xFE2
  5293                           fsr1l	equ	0xFE1
  5294                           bsr	equ	0xFE0
  5295                           indf2	equ	0xFDF
  5296                           postinc2	equ	0xFDE
  5297                           postdec2	equ	0xFDD
  5298                           fsr2h	equ	0xFDA
  5299                           fsr2l	equ	0xFD9
  5300                           status	equ	0xFD8
  5301                           
  5302 ;; *************** function _InterruptHandlerHigh *****************
  5303 ;; Defined at:
  5304 ;;		line 87 in file "../src/interrupts.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;		None
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;		None
  5309 ;; Return value:  Size  Location     Type
  5310 ;;		None               void
  5311 ;; Registers used:
  5312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5318 ;;      Params:         0       0       0       0       0
  5319 ;;      Locals:         0       0       0       0       0
  5320 ;;      Temps:          0      14       0       0       0
  5321 ;;      Totals:         0      14       0       0       0
  5322 ;;Total ram usage:       14 bytes
  5323 ;; Hardware stack levels used:    1
  5324 ;; Hardware stack levels required when called:    4
  5325 ;; This function calls:
  5326 ;;		_SleepIfOkay
  5327 ;;		_i2c_int_handler
  5328 ;;		_timer0_int_handler
  5329 ;; This function is called by:
  5330 ;;		Interrupt level 2
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           	psect	intcode
  5335  000008                     __pintcode:
  5336                           	opt stack 0
  5337  000008                     _InterruptHandlerHigh:
  5338                           	opt stack 17
  5339                           
  5340                           ;incstack = 0
  5341  000008  CFFA F0DB          	movff	pclath,??_InterruptHandlerHigh
  5342  00000C  CFFB F0DC          	movff	pclatu,??_InterruptHandlerHigh+1
  5343  000010  EFAE  F008         	goto	int_func
  5344                           pclatu	equ	0xFFB
  5345                           pclath	equ	0xFFA
  5346                           tblptru	equ	0xFF8
  5347                           tblptrh	equ	0xFF7
  5348                           tblptrl	equ	0xFF6
  5349                           tablat	equ	0xFF5
  5350                           prodh	equ	0xFF4
  5351                           prodl	equ	0xFF3
  5352                           intcon	equ	0xFF2
  5353                           postinc0	equ	0xFEE
  5354                           fsr0h	equ	0xFEA
  5355                           fsr0l	equ	0xFE9
  5356                           wreg	equ	0xFE8
  5357                           indf1	equ	0xFE7
  5358                           fsr1h	equ	0xFE2
  5359                           fsr1l	equ	0xFE1
  5360                           bsr	equ	0xFE0
  5361                           indf2	equ	0xFDF
  5362                           postinc2	equ	0xFDE
  5363                           postdec2	equ	0xFDD
  5364                           fsr2h	equ	0xFDA
  5365                           fsr2l	equ	0xFD9
  5366                           status	equ	0xFD8
  5367                           
  5368                           	psect	intcode_body
  5369  00115C                     __pintcode_body:
  5370                           	opt stack 17
  5371  00115C                     int_func:
  5372                           	opt stack 17
  5373  00115C  CFE9 F0DD          	movff	fsr0l,??_InterruptHandlerHigh+2
  5374  001160  CFEA F0DE          	movff	fsr0h,??_InterruptHandlerHigh+3
  5375  001164  CFE1 F0DF          	movff	fsr1l,??_InterruptHandlerHigh+4
  5376  001168  CFE2 F0E0          	movff	fsr1h,??_InterruptHandlerHigh+5
  5377  00116C  CFD9 F0E1          	movff	fsr2l,??_InterruptHandlerHigh+6
  5378  001170  CFDA F0E2          	movff	fsr2h,??_InterruptHandlerHigh+7
  5379  001174  CFF3 F0E3          	movff	prodl,??_InterruptHandlerHigh+8
  5380  001178  CFF4 F0E4          	movff	prodh,??_InterruptHandlerHigh+9
  5381  00117C  CFF6 F0E5          	movff	tblptrl,??_InterruptHandlerHigh+10
  5382  001180  CFF7 F0E6          	movff	tblptrh,??_InterruptHandlerHigh+11
  5383  001184  CFF8 F0E7          	movff	tblptru,??_InterruptHandlerHigh+12
  5384  001188  CFF5 F0E8          	movff	tablat,??_InterruptHandlerHigh+13
  5385                           
  5386                           ;interrupts.c: 92: if (PIR1bits.SSPIF) {
  5387  00118C  A69E               	btfss	3998,3,c	;volatile
  5388  00118E  D003               	goto	i2l2884
  5389                           
  5390                           ;interrupts.c: 94: PIR1bits.SSPIF = 0;
  5391  001190  969E               	bcf	3998,3,c	;volatile
  5392                           
  5393                           ;interrupts.c: 96: i2c_int_handler();
  5394  001192  EC5D  F000         	call	_i2c_int_handler	;wreg free
  5395  001196                     i2l2884:
  5396                           
  5397                           ;interrupts.c: 97: }
  5398                           ;interrupts.c: 100: if (INTCONbits.TMR0IF) {
  5399  001196  A4F2               	btfss	intcon,2,c	;volatile
  5400  001198  D003               	goto	i2l2890
  5401                           
  5402                           ;interrupts.c: 101: INTCONbits.TMR0IF = 0;
  5403  00119A  94F2               	bcf	intcon,2,c	;volatile
  5404                           
  5405                           ;interrupts.c: 103: timer0_int_handler();
  5406  00119C  EC22  F008         	call	_timer0_int_handler	;wreg free
  5407  0011A0                     i2l2890:
  5408                           
  5409                           ;interrupts.c: 104: }
  5410                           ;interrupts.c: 111: SleepIfOkay();
  5411  0011A0  EC56  F00A         	call	_SleepIfOkay	;wreg free
  5412  0011A4  C0E8  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  5413  0011A8  C0E7  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  5414  0011AC  C0E6  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  5415  0011B0  C0E5  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  5416  0011B4  C0E4  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  5417  0011B8  C0E3  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  5418  0011BC  C0E2  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  5419  0011C0  C0E1  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  5420  0011C4  C0E0  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  5421  0011C8  C0DF  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  5422  0011CC  C0DE  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  5423  0011D0  C0DD  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  5424  0011D4  C0DC  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  5425  0011D8  C0DB  FFFA         	movff	??_InterruptHandlerHigh,pclath
  5426  0011DC  0011               	retfie		f
  5427  0011DE                     __end_of_InterruptHandlerHigh:
  5428                           	opt stack 0
  5429                           pclatu	equ	0xFFB
  5430                           pclath	equ	0xFFA
  5431                           tblptru	equ	0xFF8
  5432                           tblptrh	equ	0xFF7
  5433                           tblptrl	equ	0xFF6
  5434                           tablat	equ	0xFF5
  5435                           prodh	equ	0xFF4
  5436                           prodl	equ	0xFF3
  5437                           intcon	equ	0xFF2
  5438                           postinc0	equ	0xFEE
  5439                           fsr0h	equ	0xFEA
  5440                           fsr0l	equ	0xFE9
  5441                           wreg	equ	0xFE8
  5442                           indf1	equ	0xFE7
  5443                           fsr1h	equ	0xFE2
  5444                           fsr1l	equ	0xFE1
  5445                           bsr	equ	0xFE0
  5446                           indf2	equ	0xFDF
  5447                           postinc2	equ	0xFDE
  5448                           postdec2	equ	0xFDD
  5449                           fsr2h	equ	0xFDA
  5450                           fsr2l	equ	0xFD9
  5451                           status	equ	0xFD8
  5452                           
  5453 ;; *************** function _timer0_int_handler *****************
  5454 ;; Defined at:
  5455 ;;		line 17 in file "../src/user_interrupts.c"
  5456 ;; Parameters:    Size  Location     Type
  5457 ;;		None
  5458 ;; Auto vars:     Size  Location     Type
  5459 ;;  val             2   34[BANK0 ] unsigned int 
  5460 ;;  msgtype         2   32[BANK0 ] int 
  5461 ;;  length          2   30[BANK0 ] int 
  5462 ;; Return value:  Size  Location     Type
  5463 ;;		None               void
  5464 ;; Registers used:
  5465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5471 ;;      Params:         0       0       0       0       0
  5472 ;;      Locals:         0       6       0       0       0
  5473 ;;      Temps:          0       1       0       0       0
  5474 ;;      Totals:         0       7       0       0       0
  5475 ;;Total ram usage:        7 bytes
  5476 ;; Hardware stack levels used:    1
  5477 ;; Hardware stack levels required when called:    3
  5478 ;; This function calls:
  5479 ;;		_FromMainHigh_recvmsg
  5480 ;;		_ToMainHigh_sendmsg
  5481 ;;		_WriteTimer0
  5482 ;; This function is called by:
  5483 ;;		_InterruptHandlerHigh
  5484 ;; This function uses a non-reentrant model
  5485 ;;
  5486                           
  5487                           	psect	text38
  5488  001044                     __ptext38:
  5489                           	opt stack 0
  5490  001044                     _timer0_int_handler:
  5491                           	opt stack 17
  5492                           
  5493                           ;user_interrupts.c: 18: unsigned int val;
  5494                           ;user_interrupts.c: 19: int length, msgtype;
  5495                           ;user_interrupts.c: 27: { LATBbits.LATB1 = 1; };
  5496                           
  5497                           ;incstack = 0
  5498  001044  828A               	bsf	3978,1,c	;volatile
  5499                           
  5500                           ;user_interrupts.c: 28: { LATBbits.LATB1 = 0; };
  5501  001046  928A               	bcf	3978,1,c	;volatile
  5502                           
  5503                           ;user_interrupts.c: 32: WriteTimer0(0);
  5504  001048  0E00               	movlw	0
  5505  00104A  0100               	movlb	0	; () banked
  5506  00104C  0100               	movlb	0	; () banked
  5507  00104E  6FB7               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  5508  001050  0E00               	movlw	0
  5509  001052  0100               	movlb	0	; () banked
  5510  001054  6FB6               	movwf	WriteTimer0@timer0& (0+255),b
  5511  001056  EC61  F00D         	call	_WriteTimer0	;wreg free
  5512                           
  5513                           ;user_interrupts.c: 36: length = FromMainHigh_recvmsg(sizeof (val), (unsigned char *) &m
      +                          sgtype, (void *) &val);
  5514  00105A  0100               	movlb	0	; () banked
  5515  00105C  0E00               	movlw	high timer0_int_handler@msgtype
  5516  00105E  0100               	movlb	0	; () banked
  5517  001060  0100               	movlb	0	; () banked
  5518  001062  6FCF               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  5519  001064  0100               	movlb	0	; () banked
  5520  001066  0ED6               	movlw	low timer0_int_handler@msgtype
  5521  001068  0100               	movlb	0	; () banked
  5522  00106A  0100               	movlb	0	; () banked
  5523  00106C  6FCE               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  5524  00106E  0100               	movlb	0	; () banked
  5525  001070  0E00               	movlw	high timer0_int_handler@val
  5526  001072  0100               	movlb	0	; () banked
  5527  001074  0100               	movlb	0	; () banked
  5528  001076  6FD1               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  5529  001078  0100               	movlb	0	; () banked
  5530  00107A  0ED8               	movlw	low timer0_int_handler@val
  5531  00107C  0100               	movlb	0	; () banked
  5532  00107E  0100               	movlb	0	; () banked
  5533  001080  6FD0               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  5534  001082  0E02               	movlw	2
  5535  001084  ECBA  F00B         	call	_FromMainHigh_recvmsg
  5536  001088  0100               	movlb	0	; () banked
  5537  00108A  0100               	movlb	0	; () banked
  5538  00108C  6FD4               	movwf	timer0_int_handler@length& (0+255),b
  5539  00108E  0100               	movlb	0	; () banked
  5540  001090  6BD5               	clrf	(timer0_int_handler@length+1)& (0+255),b
  5541  001092  0100               	movlb	0	; () banked
  5542  001094  BFD4               	btfsc	timer0_int_handler@length& (0+255),7,b
  5543  001096  07D5               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  5544                           
  5545                           ; BSR set to: 0
  5546                           ;user_interrupts.c: 37: if (length == sizeof (val)) {
  5547  001098  0100               	movlb	0	; () banked
  5548  00109A  0100               	movlb	0	; () banked
  5549  00109C  51D4               	movf	timer0_int_handler@length& (0+255),w,b
  5550  00109E  0A02               	xorlw	2
  5551  0010A0  11D5               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  5552  0010A2  A4D8               	btfss	status,2,c
  5553  0010A4  0012               	return	
  5554                           
  5555                           ; BSR set to: 0
  5556                           ;user_interrupts.c: 38: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  5557  0010A6  0100               	movlb	0	; () banked
  5558  0010A8  6FD3               	movwf	??_timer0_int_handler& (0+255),b
  5559  0010AA  0E0A               	movlw	10
  5560  0010AC  0100               	movlb	0	; () banked
  5561  0010AE  0100               	movlb	0	; () banked
  5562  0010B0  6FCC               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  5563  0010B2  0100               	movlb	0	; () banked
  5564  0010B4  51D3               	movf	??_timer0_int_handler& (0+255),w,b
  5565  0010B6  0100               	movlb	0	; () banked
  5566  0010B8  0E00               	movlw	high timer0_int_handler@val
  5567  0010BA  0100               	movlb	0	; () banked
  5568  0010BC  0100               	movlb	0	; () banked
  5569  0010BE  6FCE               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  5570  0010C0  0100               	movlb	0	; () banked
  5571  0010C2  0ED8               	movlw	low timer0_int_handler@val
  5572  0010C4  0100               	movlb	0	; () banked
  5573  0010C6  0100               	movlb	0	; () banked
  5574  0010C8  6FCD               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  5575  0010CA  0E02               	movlw	2
  5576  0010CC  EC6B  F00C         	call	_ToMainHigh_sendmsg
  5577  0010D0  0012               	return	
  5578  0010D2                     __end_of_timer0_int_handler:
  5579                           	opt stack 0
  5580                           pclatu	equ	0xFFB
  5581                           pclath	equ	0xFFA
  5582                           tblptru	equ	0xFF8
  5583                           tblptrh	equ	0xFF7
  5584                           tblptrl	equ	0xFF6
  5585                           tablat	equ	0xFF5
  5586                           prodh	equ	0xFF4
  5587                           prodl	equ	0xFF3
  5588                           intcon	equ	0xFF2
  5589                           postinc0	equ	0xFEE
  5590                           fsr0h	equ	0xFEA
  5591                           fsr0l	equ	0xFE9
  5592                           wreg	equ	0xFE8
  5593                           indf1	equ	0xFE7
  5594                           fsr1h	equ	0xFE2
  5595                           fsr1l	equ	0xFE1
  5596                           bsr	equ	0xFE0
  5597                           indf2	equ	0xFDF
  5598                           postinc2	equ	0xFDE
  5599                           postdec2	equ	0xFDD
  5600                           fsr2h	equ	0xFDA
  5601                           fsr2l	equ	0xFD9
  5602                           status	equ	0xFD8
  5603                           
  5604 ;; *************** function _WriteTimer0 *****************
  5605 ;; Defined at:
  5606 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  5607 ;; Parameters:    Size  Location     Type
  5608 ;;  timer0          2    0[BANK0 ] unsigned int 
  5609 ;; Auto vars:     Size  Location     Type
  5610 ;;  timer           2    2[BANK0 ] struct Timers
  5611 ;; Return value:  Size  Location     Type
  5612 ;;		None               void
  5613 ;; Registers used:
  5614 ;;		None
  5615 ;; Tracked objects:
  5616 ;;		On entry : 0/0
  5617 ;;		On exit  : 0/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5620 ;;      Params:         0       2       0       0       0
  5621 ;;      Locals:         0       2       0       0       0
  5622 ;;      Temps:          0       0       0       0       0
  5623 ;;      Totals:         0       4       0       0       0
  5624 ;;Total ram usage:        4 bytes
  5625 ;; Hardware stack levels used:    1
  5626 ;; This function calls:
  5627 ;;		Nothing
  5628 ;; This function is called by:
  5629 ;;		_timer0_int_handler
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           	psect	text39
  5634  001AC2                     __ptext39:
  5635                           	opt stack 0
  5636  001AC2                     _WriteTimer0:
  5637                           	opt stack 19
  5638                           
  5639                           ;incstack = 0
  5640  001AC2  C0B6  F0B8         	movff	WriteTimer0@timer0,WriteTimer0@timer
  5641  001AC6  C0B7  F0B9         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  5642  001ACA  C0B9  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  5643  001ACE  C0B8  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  5644  001AD2  0012               	return	
  5645  001AD4                     __end_of_WriteTimer0:
  5646                           	opt stack 0
  5647                           pclatu	equ	0xFFB
  5648                           pclath	equ	0xFFA
  5649                           tblptru	equ	0xFF8
  5650                           tblptrh	equ	0xFF7
  5651                           tblptrl	equ	0xFF6
  5652                           tablat	equ	0xFF5
  5653                           prodh	equ	0xFF4
  5654                           prodl	equ	0xFF3
  5655                           intcon	equ	0xFF2
  5656                           postinc0	equ	0xFEE
  5657                           fsr0h	equ	0xFEA
  5658                           fsr0l	equ	0xFE9
  5659                           wreg	equ	0xFE8
  5660                           indf1	equ	0xFE7
  5661                           fsr1h	equ	0xFE2
  5662                           fsr1l	equ	0xFE1
  5663                           bsr	equ	0xFE0
  5664                           indf2	equ	0xFDF
  5665                           postinc2	equ	0xFDE
  5666                           postdec2	equ	0xFDD
  5667                           fsr2h	equ	0xFDA
  5668                           fsr2l	equ	0xFD9
  5669                           status	equ	0xFD8
  5670                           
  5671 ;; *************** function _FromMainHigh_recvmsg *****************
  5672 ;; Defined at:
  5673 ;;		line 183 in file "../src/messages.c"
  5674 ;; Parameters:    Size  Location     Type
  5675 ;;  maxlength       1    wreg     unsigned char 
  5676 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  5677 ;;		 -> timer0_int_handler@msgtype(2), 
  5678 ;;  data            2   26[BANK0 ] PTR void 
  5679 ;;		 -> timer0_int_handler@val(2), 
  5680 ;; Auto vars:     Size  Location     Type
  5681 ;;  maxlength       1   28[BANK0 ] unsigned char 
  5682 ;; Return value:  Size  Location     Type
  5683 ;;                  1    wreg      char 
  5684 ;; Registers used:
  5685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5686 ;; Tracked objects:
  5687 ;;		On entry : 0/0
  5688 ;;		On exit  : 0/0
  5689 ;;		Unchanged: 0/0
  5690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5691 ;;      Params:         0       4       0       0       0
  5692 ;;      Locals:         0       1       0       0       0
  5693 ;;      Temps:          0       0       0       0       0
  5694 ;;      Totals:         0       5       0       0       0
  5695 ;;Total ram usage:        5 bytes
  5696 ;; Hardware stack levels used:    1
  5697 ;; Hardware stack levels required when called:    2
  5698 ;; This function calls:
  5699 ;;		i2_recv_msg
  5700 ;; This function is called by:
  5701 ;;		_timer0_int_handler
  5702 ;; This function uses a non-reentrant model
  5703 ;;
  5704                           
  5705                           	psect	text40
  5706  001774                     __ptext40:
  5707                           	opt stack 0
  5708  001774                     _FromMainHigh_recvmsg:
  5709                           	opt stack 17
  5710                           
  5711                           ;incstack = 0
  5712                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  5713  001774  CFE8 F0D2          	movff	wreg,FromMainHigh_recvmsg@maxlength
  5714                           
  5715                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  5716  001778  0101               	movlb	1	; () banked
  5717  00177A  0E01               	movlw	high _FromMainHigh_MQ
  5718  00177C  0100               	movlb	0	; () banked
  5719  00177E  0100               	movlb	0	; () banked
  5720  001780  6FC1               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  5721  001782  0101               	movlb	1	; () banked
  5722  001784  0E02               	movlw	low _FromMainHigh_MQ
  5723  001786  0100               	movlb	0	; () banked
  5724  001788  0100               	movlb	0	; () banked
  5725  00178A  6FC0               	movwf	i2recv_msg@qptr& (0+255),b
  5726  00178C  C0D2  F0C2         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  5727  001790  0100               	movlb	0	; () banked
  5728  001792  0100               	movlb	0	; () banked
  5729  001794  C0CF  F0C4         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  5730  001798  0100               	movlb	0	; () banked
  5731  00179A  0100               	movlb	0	; () banked
  5732  00179C  C0CE  F0C3         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  5733  0017A0  0100               	movlb	0	; () banked
  5734  0017A2  0100               	movlb	0	; () banked
  5735  0017A4  C0D1  F0C6         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  5736  0017A8  0100               	movlb	0	; () banked
  5737  0017AA  0100               	movlb	0	; () banked
  5738  0017AC  C0D0  F0C5         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  5739  0017B0  ECB0  F004         	call	i2_recv_msg	;wreg free
  5740  0017B4  0012               	return	
  5741  0017B6                     __end_of_FromMainHigh_recvmsg:
  5742                           	opt stack 0
  5743                           pclatu	equ	0xFFB
  5744                           pclath	equ	0xFFA
  5745                           tblptru	equ	0xFF8
  5746                           tblptrh	equ	0xFF7
  5747                           tblptrl	equ	0xFF6
  5748                           tablat	equ	0xFF5
  5749                           prodh	equ	0xFF4
  5750                           prodl	equ	0xFF3
  5751                           intcon	equ	0xFF2
  5752                           postinc0	equ	0xFEE
  5753                           fsr0h	equ	0xFEA
  5754                           fsr0l	equ	0xFE9
  5755                           wreg	equ	0xFE8
  5756                           indf1	equ	0xFE7
  5757                           fsr1h	equ	0xFE2
  5758                           fsr1l	equ	0xFE1
  5759                           bsr	equ	0xFE0
  5760                           indf2	equ	0xFDF
  5761                           postinc2	equ	0xFDE
  5762                           postdec2	equ	0xFDD
  5763                           fsr2h	equ	0xFDA
  5764                           fsr2l	equ	0xFD9
  5765                           status	equ	0xFD8
  5766                           
  5767 ;; *************** function i2_recv_msg *****************
  5768 ;; Defined at:
  5769 ;;		line 63 in file "../src/messages.c"
  5770 ;; Parameters:    Size  Location     Type
  5771 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  5772 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5773 ;;  maxlength       1   12[BANK0 ] unsigned char 
  5774 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  5775 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  5776 ;;  data            2   15[BANK0 ] PTR void 
  5777 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  5778 ;; Auto vars:     Size  Location     Type
  5779 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  5780 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5781 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5782 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  5783 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  1    wreg      char 
  5786 ;; Registers used:
  5787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5793 ;;      Params:         0       7       0       0       0
  5794 ;;      Locals:         0       5       0       0       0
  5795 ;;      Temps:          0       2       0       0       0
  5796 ;;      Totals:         0      14       0       0       0
  5797 ;;Total ram usage:       14 bytes
  5798 ;; Hardware stack levels used:    1
  5799 ;; Hardware stack levels required when called:    1
  5800 ;; This function calls:
  5801 ;;		i2_memcpy
  5802 ;; This function is called by:
  5803 ;;		_FromMainHigh_recvmsg
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           	psect	text41
  5808  000960                     __ptext41:
  5809                           	opt stack 0
  5810  000960                     i2_recv_msg:
  5811                           	opt stack 17
  5812                           
  5813                           ;messages.c: 64: unsigned char slot;
  5814                           ;messages.c: 68: msg *qmsg;
  5815                           ;messages.c: 69: size_t tlength;
  5816                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5817                           
  5818                           ;incstack = 0
  5819  000960  0100               	movlb	0	; () banked
  5820  000962  EE20 F035          	lfsr	2,53
  5821  000966  0100               	movlb	0	; () banked
  5822  000968  51C0               	movf	i2recv_msg@qptr& (0+255),w,b
  5823  00096A  26D9               	addwf	fsr2l,f,c
  5824  00096C  0100               	movlb	0	; () banked
  5825  00096E  51C1               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  5826  000970  22DA               	addwfc	fsr2h,f,c
  5827  000972  50DF               	movf	indf2,w,c
  5828  000974  0100               	movlb	0	; () banked
  5829  000976  0100               	movlb	0	; () banked
  5830  000978  6FC9               	movwf	i2recv_msg@slot& (0+255),b
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5834  00097A  0100               	movlb	0	; () banked
  5835  00097C  0100               	movlb	0	; () banked
  5836  00097E  51C9               	movf	i2recv_msg@slot& (0+255),w,b
  5837  000980  0D0D               	mullw	13
  5838  000982  50F3               	movf	prodl,w,c
  5839  000984  0100               	movlb	0	; () banked
  5840  000986  0100               	movlb	0	; () banked
  5841  000988  25C0               	addwf	i2recv_msg@qptr& (0+255),w,b
  5842  00098A  0100               	movlb	0	; () banked
  5843  00098C  0100               	movlb	0	; () banked
  5844  00098E  6FCC               	movwf	i2recv_msg@qmsg& (0+255),b
  5845  000990  50F4               	movf	prodh,w,c
  5846  000992  0100               	movlb	0	; () banked
  5847  000994  0100               	movlb	0	; () banked
  5848  000996  21C1               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  5849  000998  0100               	movlb	0	; () banked
  5850  00099A  6FCD               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  5851                           
  5852                           ; BSR set to: 0
  5853                           ;messages.c: 74: if (qmsg->full == 1) {
  5854  00099C  0E01               	movlw	1
  5855  00099E  C0CC  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  5856  0009A2  C0CD  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  5857  0009A6  62DF               	cpfseq	indf2,c
  5858  0009A8  D074               	goto	i2l3560
  5859                           
  5860                           ; BSR set to: 0
  5861                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5862  0009AA  0100               	movlb	0	; () banked
  5863  0009AC  EE20 F001          	lfsr	2,1
  5864  0009B0  0100               	movlb	0	; () banked
  5865  0009B2  51CC               	movf	i2recv_msg@qmsg& (0+255),w,b
  5866  0009B4  26D9               	addwf	fsr2l,f,c
  5867  0009B6  0100               	movlb	0	; () banked
  5868  0009B8  51CD               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  5869  0009BA  22DA               	addwfc	fsr2h,f,c
  5870  0009BC  50DF               	movf	indf2,w,c
  5871  0009BE  0100               	movlb	0	; () banked
  5872  0009C0  0100               	movlb	0	; () banked
  5873  0009C2  5DC2               	subwf	i2recv_msg@maxlength& (0+255),w,b
  5874  0009C4  B0D8               	btfsc	status,0,c
  5875  0009C6  D002               	goto	i2l3544
  5876                           
  5877                           ; BSR set to: 0
  5878                           ;messages.c: 77: return (-3);
  5879  0009C8  0EFD               	movlw	253
  5880  0009CA  0012               	return	
  5881  0009CC                     i2l3544:
  5882                           
  5883                           ; BSR set to: 0
  5884                           ;messages.c: 78: }
  5885                           ;messages.c: 80: tlength = qmsg->length;
  5886  0009CC  0100               	movlb	0	; () banked
  5887  0009CE  EE20 F001          	lfsr	2,1
  5888  0009D2  0100               	movlb	0	; () banked
  5889  0009D4  51CC               	movf	i2recv_msg@qmsg& (0+255),w,b
  5890  0009D6  26D9               	addwf	fsr2l,f,c
  5891  0009D8  0100               	movlb	0	; () banked
  5892  0009DA  51CD               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  5893  0009DC  22DA               	addwfc	fsr2h,f,c
  5894  0009DE  50DF               	movf	indf2,w,c
  5895  0009E0  0100               	movlb	0	; () banked
  5896  0009E2  6FC7               	movwf	??i2_recv_msg& (0+255),b
  5897  0009E4  0100               	movlb	0	; () banked
  5898  0009E6  51C7               	movf	??i2_recv_msg& (0+255),w,b
  5899  0009E8  0100               	movlb	0	; () banked
  5900  0009EA  0100               	movlb	0	; () banked
  5901  0009EC  6FCA               	movwf	i2recv_msg@tlength& (0+255),b
  5902  0009EE  0100               	movlb	0	; () banked
  5903  0009F0  6BCB               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  5904                           
  5905                           ; BSR set to: 0
  5906                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5907  0009F2  0100               	movlb	0	; () banked
  5908  0009F4  0100               	movlb	0	; () banked
  5909  0009F6  C0C6  F0B7         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  5910  0009FA  0100               	movlb	0	; () banked
  5911  0009FC  0100               	movlb	0	; () banked
  5912  0009FE  C0C5  F0B6         	movff	i2recv_msg@data,i2memcpy@d1
  5913  000A02  0E03               	movlw	3
  5914  000A04  0100               	movlb	0	; () banked
  5915  000A06  0100               	movlb	0	; () banked
  5916  000A08  25CC               	addwf	i2recv_msg@qmsg& (0+255),w,b
  5917  000A0A  0100               	movlb	0	; () banked
  5918  000A0C  6FC7               	movwf	??i2_recv_msg& (0+255),b
  5919  000A0E  0E00               	movlw	0
  5920  000A10  0100               	movlb	0	; () banked
  5921  000A12  0100               	movlb	0	; () banked
  5922  000A14  21CD               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  5923  000A16  0100               	movlb	0	; () banked
  5924  000A18  6FC8               	movwf	(??i2_recv_msg+1)& (0+255),b
  5925  000A1A  C0C7  F0B8         	movff	??i2_recv_msg,i2memcpy@s1
  5926  000A1E  C0C8  F0B9         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  5927  000A22  C0CA  F0BA         	movff	i2recv_msg@tlength,i2memcpy@n
  5928  000A26  C0CB  F0BB         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  5929  000A2A  ECBA  F00A         	call	i2_memcpy	;wreg free
  5930                           
  5931                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5932  000A2E  0100               	movlb	0	; () banked
  5933  000A30  EE20 F035          	lfsr	2,53
  5934  000A34  0100               	movlb	0	; () banked
  5935  000A36  51C0               	movf	i2recv_msg@qptr& (0+255),w,b
  5936  000A38  26D9               	addwf	fsr2l,f,c
  5937  000A3A  0100               	movlb	0	; () banked
  5938  000A3C  51C1               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  5939  000A3E  22DA               	addwfc	fsr2h,f,c
  5940  000A40  0100               	movlb	0	; () banked
  5941  000A42  EE10 F035          	lfsr	1,53
  5942  000A46  0100               	movlb	0	; () banked
  5943  000A48  51C0               	movf	i2recv_msg@qptr& (0+255),w,b
  5944  000A4A  26E1               	addwf	fsr1l,f,c
  5945  000A4C  0100               	movlb	0	; () banked
  5946  000A4E  51C1               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  5947  000A50  22E2               	addwfc	fsr1h,f,c
  5948  000A52  50E7               	movf	indf1,w,c
  5949  000A54  0100               	movlb	0	; () banked
  5950  000A56  6FC7               	movwf	??i2_recv_msg& (0+255),b
  5951  000A58  0100               	movlb	0	; () banked
  5952  000A5A  29C7               	incf	??i2_recv_msg& (0+255),w,b
  5953  000A5C  0B03               	andlw	3
  5954  000A5E  6EDF               	movwf	indf2,c
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5958  000A60  0100               	movlb	0	; () banked
  5959  000A62  EE20 F002          	lfsr	2,2
  5960  000A66  0100               	movlb	0	; () banked
  5961  000A68  51CC               	movf	i2recv_msg@qmsg& (0+255),w,b
  5962  000A6A  26D9               	addwf	fsr2l,f,c
  5963  000A6C  0100               	movlb	0	; () banked
  5964  000A6E  51CD               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  5965  000A70  22DA               	addwfc	fsr2h,f,c
  5966  000A72  C0C3  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  5967  000A76  C0C4  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  5968  000A7A  CFDF FFE7          	movff	indf2,indf1
  5969                           
  5970                           ; BSR set to: 0
  5971                           ;messages.c: 91: qmsg->full = 0;
  5972  000A7E  C0CC  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  5973  000A82  C0CD  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  5974  000A86  0E00               	movlw	0
  5975  000A88  6EDF               	movwf	indf2,c
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;messages.c: 92: return (tlength);
  5979  000A8A  0100               	movlb	0	; () banked
  5980  000A8C  0100               	movlb	0	; () banked
  5981  000A8E  51CA               	movf	i2recv_msg@tlength& (0+255),w,b
  5982  000A90  0012               	return	
  5983  000A92                     i2l3560:
  5984                           
  5985                           ; BSR set to: 0
  5986                           ;messages.c: 94: return (-4);
  5987  000A92  0EFC               	movlw	252
  5988  000A94  0012               	return	
  5989  000A96                     __end_ofi2_recv_msg:
  5990                           	opt stack 0
  5991                           pclatu	equ	0xFFB
  5992                           pclath	equ	0xFFA
  5993                           tblptru	equ	0xFF8
  5994                           tblptrh	equ	0xFF7
  5995                           tblptrl	equ	0xFF6
  5996                           tablat	equ	0xFF5
  5997                           prodh	equ	0xFF4
  5998                           prodl	equ	0xFF3
  5999                           intcon	equ	0xFF2
  6000                           postinc0	equ	0xFEE
  6001                           fsr0h	equ	0xFEA
  6002                           fsr0l	equ	0xFE9
  6003                           wreg	equ	0xFE8
  6004                           indf1	equ	0xFE7
  6005                           fsr1h	equ	0xFE2
  6006                           fsr1l	equ	0xFE1
  6007                           bsr	equ	0xFE0
  6008                           indf2	equ	0xFDF
  6009                           postinc2	equ	0xFDE
  6010                           postdec2	equ	0xFDD
  6011                           fsr2h	equ	0xFDA
  6012                           fsr2l	equ	0xFD9
  6013                           status	equ	0xFD8
  6014                           
  6015 ;; *************** function _i2c_int_handler *****************
  6016 ;; Defined at:
  6017 ;;		line 77 in file "../src/my_i2c.c"
  6018 ;; Parameters:    Size  Location     Type
  6019 ;;		None
  6020 ;; Auto vars:     Size  Location     Type
  6021 ;;  error_buf       3   28[BANK0 ] unsigned char [3]
  6022 ;;  data_read       1   36[BANK0 ] unsigned char 
  6023 ;;  msg_ready       1   35[BANK0 ] unsigned char 
  6024 ;;  i2c_data        1   34[BANK0 ] unsigned char 
  6025 ;;  msg_to_send     1   33[BANK0 ] unsigned char 
  6026 ;;  overrun_erro    1   32[BANK0 ] unsigned char 
  6027 ;;  data_written    1   31[BANK0 ] unsigned char 
  6028 ;; Return value:  Size  Location     Type
  6029 ;;		None               void
  6030 ;; Registers used:
  6031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6032 ;; Tracked objects:
  6033 ;;		On entry : 0/0
  6034 ;;		On exit  : 0/0
  6035 ;;		Unchanged: 0/0
  6036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6037 ;;      Params:         0       0       0       0       0
  6038 ;;      Locals:         0       9       0       0       0
  6039 ;;      Temps:          0       2       0       0       0
  6040 ;;      Totals:         0      11       0       0       0
  6041 ;;Total ram usage:       11 bytes
  6042 ;; Hardware stack levels used:    1
  6043 ;; Hardware stack levels required when called:    3
  6044 ;; This function calls:
  6045 ;;		_ToMainHigh_sendmsg
  6046 ;;		_handle_start
  6047 ;;		_readMessages
  6048 ;; This function is called by:
  6049 ;;		_InterruptHandlerHigh
  6050 ;; This function uses a non-reentrant model
  6051 ;;
  6052                           
  6053                           	psect	text42
  6054  0000BA                     __ptext42:
  6055                           	opt stack 0
  6056  0000BA                     _i2c_int_handler:
  6057                           	opt stack 17
  6058                           
  6059                           ;my_i2c.c: 78: unsigned char i2c_data;
  6060                           ;my_i2c.c: 79: unsigned char data_read = 0;
  6061                           
  6062                           ; BSR set to: 0
  6063                           ;incstack = 0
  6064  0000BA  0100               	movlb	0	; () banked
  6065  0000BC  6FD0               	movwf	??_i2c_int_handler& (0+255),b
  6066  0000BE  0E00               	movlw	0
  6067  0000C0  0100               	movlb	0	; () banked
  6068  0000C2  0100               	movlb	0	; () banked
  6069  0000C4  6FDA               	movwf	i2c_int_handler@data_read& (0+255),b
  6070  0000C6  0100               	movlb	0	; () banked
  6071  0000C8  51D0               	movf	??_i2c_int_handler& (0+255),w,b
  6072                           
  6073                           ;my_i2c.c: 80: unsigned char data_written = 0;
  6074  0000CA  0100               	movlb	0	; () banked
  6075  0000CC  6FD0               	movwf	??_i2c_int_handler& (0+255),b
  6076  0000CE  0E00               	movlw	0
  6077  0000D0  0100               	movlb	0	; () banked
  6078  0000D2  0100               	movlb	0	; () banked
  6079  0000D4  6FD5               	movwf	i2c_int_handler@data_written& (0+255),b
  6080  0000D6  0100               	movlb	0	; () banked
  6081  0000D8  51D0               	movf	??_i2c_int_handler& (0+255),w,b
  6082                           
  6083                           ;my_i2c.c: 81: unsigned char msg_ready = 0;
  6084  0000DA  0100               	movlb	0	; () banked
  6085  0000DC  6FD0               	movwf	??_i2c_int_handler& (0+255),b
  6086  0000DE  0E00               	movlw	0
  6087  0000E0  0100               	movlb	0	; () banked
  6088  0000E2  0100               	movlb	0	; () banked
  6089  0000E4  6FD9               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6090  0000E6  0100               	movlb	0	; () banked
  6091  0000E8  51D0               	movf	??_i2c_int_handler& (0+255),w,b
  6092                           
  6093                           ;my_i2c.c: 82: unsigned char msg_to_send = 0;
  6094  0000EA  0100               	movlb	0	; () banked
  6095  0000EC  6FD0               	movwf	??_i2c_int_handler& (0+255),b
  6096  0000EE  0E00               	movlw	0
  6097  0000F0  0100               	movlb	0	; () banked
  6098  0000F2  0100               	movlb	0	; () banked
  6099  0000F4  6FD7               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6100  0000F6  0100               	movlb	0	; () banked
  6101  0000F8  51D0               	movf	??_i2c_int_handler& (0+255),w,b
  6102                           
  6103                           ;my_i2c.c: 83: unsigned char overrun_error = 0;
  6104  0000FA  0100               	movlb	0	; () banked
  6105  0000FC  6FD0               	movwf	??_i2c_int_handler& (0+255),b
  6106  0000FE  0E00               	movlw	0
  6107  000100  0100               	movlb	0	; () banked
  6108  000102  0100               	movlb	0	; () banked
  6109  000104  6FD6               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6110  000106  0100               	movlb	0	; () banked
  6111  000108  51D0               	movf	??_i2c_int_handler& (0+255),w,b
  6112                           
  6113                           ; BSR set to: 0
  6114                           ;my_i2c.c: 84: unsigned char error_buf[3];
  6115                           ;my_i2c.c: 87: if (SSPCON1bits.SSPOV == 1) {
  6116  00010A  ACC6               	btfss	4038,6,c	;volatile
  6117  00010C  D020               	goto	i2l2906
  6118                           
  6119                           ; BSR set to: 0
  6120                           ;my_i2c.c: 88: SSPCON1bits.SSPOV = 0;
  6121  00010E  9CC6               	bcf	4038,6,c	;volatile
  6122                           
  6123                           ; BSR set to: 0
  6124                           ;my_i2c.c: 92: ic_ptr->status = 0x5;
  6125  000110  EE20 F00C          	lfsr	2,12
  6126  000114  5053               	movf	_ic_ptr,w,c
  6127  000116  26D9               	addwf	fsr2l,f,c
  6128  000118  5054               	movf	_ic_ptr+1,w,c
  6129  00011A  22DA               	addwfc	fsr2h,f,c
  6130  00011C  0E05               	movlw	5
  6131  00011E  6EDF               	movwf	indf2,c
  6132                           
  6133                           ; BSR set to: 0
  6134                           ;my_i2c.c: 93: overrun_error = 1;
  6135  000120  0100               	movlb	0	; () banked
  6136  000122  6FD0               	movwf	??_i2c_int_handler& (0+255),b
  6137  000124  0E01               	movlw	1
  6138  000126  0100               	movlb	0	; () banked
  6139  000128  0100               	movlb	0	; () banked
  6140  00012A  6FD6               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6141  00012C  0100               	movlb	0	; () banked
  6142  00012E  51D0               	movf	??_i2c_int_handler& (0+255),w,b
  6143                           
  6144                           ; BSR set to: 0
  6145                           ;my_i2c.c: 94: ic_ptr->error_count++;
  6146  000130  EE20 F00E          	lfsr	2,14
  6147  000134  5053               	movf	_ic_ptr,w,c
  6148  000136  26D9               	addwf	fsr2l,f,c
  6149  000138  5054               	movf	_ic_ptr+1,w,c
  6150  00013A  22DA               	addwfc	fsr2h,f,c
  6151  00013C  2ADF               	incf	indf2,f,c
  6152                           
  6153                           ; BSR set to: 0
  6154                           ;my_i2c.c: 95: ic_ptr->error_code = 0x4;
  6155  00013E  EE20 F00D          	lfsr	2,13
  6156  000142  5053               	movf	_ic_ptr,w,c
  6157  000144  26D9               	addwf	fsr2l,f,c
  6158  000146  5054               	movf	_ic_ptr+1,w,c
  6159  000148  22DA               	addwfc	fsr2h,f,c
  6160  00014A  0E04               	movlw	4
  6161  00014C  6EDF               	movwf	indf2,c
  6162  00014E                     i2l2906:
  6163                           
  6164                           ; BSR set to: 0
  6165                           ;my_i2c.c: 96: }
  6166                           ;my_i2c.c: 98: if (SSPSTATbits.BF == 1) {
  6167  00014E  A0C7               	btfss	4039,0,c	;volatile
  6168  000150  D00A               	goto	i2l2912
  6169                           
  6170                           ; BSR set to: 0
  6171                           ;my_i2c.c: 99: i2c_data = SSPBUF;
  6172  000152  CFC9 F0D8          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6173                           
  6174                           ; BSR set to: 0
  6175                           ;my_i2c.c: 100: data_read = 1;
  6176  000156  0100               	movlb	0	; () banked
  6177  000158  6FD0               	movwf	??_i2c_int_handler& (0+255),b
  6178  00015A  0E01               	movlw	1
  6179  00015C  0100               	movlb	0	; () banked
  6180  00015E  0100               	movlb	0	; () banked
  6181  000160  6FDA               	movwf	i2c_int_handler@data_read& (0+255),b
  6182  000162  0100               	movlb	0	; () banked
  6183  000164  51D0               	movf	??_i2c_int_handler& (0+255),w,b
  6184  000166                     i2l2912:
  6185                           
  6186                           ; BSR set to: 0
  6187                           ;my_i2c.c: 101: }
  6188                           ;my_i2c.c: 103: if (!overrun_error) {
  6189  000166  0100               	movlb	0	; () banked
  6190  000168  0100               	movlb	0	; () banked
  6191  00016A  67D6               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6192  00016C  D174               	goto	i2l266
  6193  00016E  D160               	goto	i2l3000
  6194  000170                     i2l268:
  6195                           
  6196                           ; BSR set to: 0
  6197                           ;my_i2c.c: 106: {
  6198                           ;my_i2c.c: 108: if (SSPSTATbits.S == 1) {
  6199  000170  A6C7               	btfss	4039,3,c	;volatile
  6200  000172  D171               	goto	i2l266
  6201                           
  6202                           ; BSR set to: 0
  6203                           ;my_i2c.c: 109: handle_start(data_read);
  6204  000174  0100               	movlb	0	; () banked
  6205  000176  0100               	movlb	0	; () banked
  6206  000178  51DA               	movf	i2c_int_handler@data_read& (0+255),w,b
  6207  00017A  EC8B  F007         	call	_handle_start
  6208                           
  6209                           ;my_i2c.c: 111: if (ic_ptr->status == 0x8) {
  6210  00017E  EE20 F00C          	lfsr	2,12
  6211  000182  5053               	movf	_ic_ptr,w,c
  6212  000184  26D9               	addwf	fsr2l,f,c
  6213  000186  5054               	movf	_ic_ptr+1,w,c
  6214  000188  22DA               	addwfc	fsr2h,f,c
  6215  00018A  0E08               	movlw	8
  6216  00018C  62DF               	cpfseq	indf2,c
  6217  00018E  D163               	goto	i2l266
  6218                           
  6219                           ;my_i2c.c: 112: data_read = 0;
  6220  000190  0100               	movlb	0	; () banked
  6221  000192  6FD0               	movwf	??_i2c_int_handler& (0+255),b
  6222  000194  0E00               	movlw	0
  6223  000196  0100               	movlb	0	; () banked
  6224  000198  0100               	movlb	0	; () banked
  6225  00019A  6FDA               	movwf	i2c_int_handler@data_read& (0+255),b
  6226  00019C  0100               	movlb	0	; () banked
  6227  00019E  51D0               	movf	??_i2c_int_handler& (0+255),w,b
  6228                           
  6229                           ;my_i2c.c: 113: msg_to_send = 1;
  6230  0001A0  0100               	movlb	0	; () banked
  6231  0001A2  6FD0               	movwf	??_i2c_int_handler& (0+255),b
  6232  0001A4  0E01               	movlw	1
  6233  0001A6  0100               	movlb	0	; () banked
  6234  0001A8  0100               	movlb	0	; () banked
  6235  0001AA  6FD7               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6236  0001AC  D136               	goto	L6
  6237  0001AE                     i2l272:
  6238                           
  6239                           ; BSR set to: 0
  6240                           ;my_i2c.c: 119: {
  6241                           ;my_i2c.c: 121: if (SSPSTATbits.P == 1) {
  6242  0001AE  A8C7               	btfss	4039,4,c	;volatile
  6243  0001B0  D027               	goto	i2l2932
  6244                           
  6245                           ; BSR set to: 0
  6246                           ;my_i2c.c: 124: ic_ptr->event_count++;
  6247  0001B2  EE20 F00B          	lfsr	2,11
  6248  0001B6  5053               	movf	_ic_ptr,w,c
  6249  0001B8  26D9               	addwf	fsr2l,f,c
  6250  0001BA  5054               	movf	_ic_ptr+1,w,c
  6251  0001BC  22DA               	addwfc	fsr2h,f,c
  6252  0001BE  2ADF               	incf	indf2,f,c
  6253                           
  6254                           ; BSR set to: 0
  6255                           ;my_i2c.c: 125: if (data_read) {
  6256  0001C0  0100               	movlb	0	; () banked
  6257  0001C2  0100               	movlb	0	; () banked
  6258  0001C4  51DA               	movf	i2c_int_handler@data_read& (0+255),w,b
  6259  0001C6  B4D8               	btfsc	status,2,c
  6260  0001C8  D12B               	goto	L8
  6261                           
  6262                           ; BSR set to: 0
  6263                           ;my_i2c.c: 126: if (SSPSTATbits.D_A == 0) {
  6264  0001CA  BAC7               	btfsc	4039,5,c	;volatile
  6265  0001CC  D009               	goto	i2l2930
  6266                           
  6267                           ; BSR set to: 0
  6268                           ;my_i2c.c: 127: msg_ready = 1;
  6269  0001CE  0100               	movlb	0	; () banked
  6270  0001D0  6FD0               	movwf	??_i2c_int_handler& (0+255),b
  6271  0001D2  0E01               	movlw	1
  6272  0001D4  0100               	movlb	0	; () banked
  6273  0001D6  0100               	movlb	0	; () banked
  6274  0001D8  6FD9               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6275  0001DA  0100               	movlb	0	; () banked
  6276  0001DC  51D0               	movf	??_i2c_int_handler& (0+255),w,b
  6277                           
  6278                           ;my_i2c.c: 128: } else {
  6279  0001DE  D120               	goto	L8
  6280  0001E0                     i2l2930:
  6281                           
  6282                           ; BSR set to: 0
  6283                           ;my_i2c.c: 129: ic_ptr->error_count++;
  6284  0001E0  EE20 F00E          	lfsr	2,14
  6285  0001E4  5053               	movf	_ic_ptr,w,c
  6286  0001E6  26D9               	addwf	fsr2l,f,c
  6287  0001E8  5054               	movf	_ic_ptr+1,w,c
  6288  0001EA  22DA               	addwfc	fsr2h,f,c
  6289  0001EC  2ADF               	incf	indf2,f,c
  6290                           
  6291                           ;my_i2c.c: 130: ic_ptr->error_code = 0x6;
  6292  0001EE  EE20 F00D          	lfsr	2,13
  6293  0001F2  5053               	movf	_ic_ptr,w,c
  6294  0001F4  26D9               	addwf	fsr2l,f,c
  6295  0001F6  5054               	movf	_ic_ptr+1,w,c
  6296  0001F8  22DA               	addwfc	fsr2h,f,c
  6297  0001FA  0E06               	movlw	6
  6298  0001FC  6EDF               	movwf	indf2,c
  6299                           
  6300                           ; BSR set to: 0
  6301  0001FE  D110               	goto	L8
  6302  000200                     i2l2932:
  6303                           
  6304                           ; BSR set to: 0
  6305  000200  0100               	movlb	0	; () banked
  6306  000202  0100               	movlb	0	; () banked
  6307  000204  51DA               	movf	i2c_int_handler@data_read& (0+255),w,b
  6308  000206  B4D8               	btfsc	status,2,c
  6309  000208  D126               	goto	i2l266
  6310                           
  6311                           ; BSR set to: 0
  6312                           ;my_i2c.c: 135: ic_ptr->event_count++;
  6313  00020A  EE20 F00B          	lfsr	2,11
  6314  00020E  5053               	movf	_ic_ptr,w,c
  6315  000210  26D9               	addwf	fsr2l,f,c
  6316  000212  5054               	movf	_ic_ptr+1,w,c
  6317  000214  22DA               	addwfc	fsr2h,f,c
  6318  000216  2ADF               	incf	indf2,f,c
  6319                           
  6320                           ; BSR set to: 0
  6321                           ;my_i2c.c: 136: if (SSPSTATbits.D_A == 0) {
  6322  000218  BAC7               	btfsc	4039,5,c	;volatile
  6323  00021A  D013               	goto	i2l2948
  6324                           
  6325                           ; BSR set to: 0
  6326                           ;my_i2c.c: 137: if (SSPSTATbits.R_W == 0) {
  6327  00021C  B4C7               	btfsc	4039,2,c	;volatile
  6328  00021E  D008               	goto	i2l2942
  6329                           
  6330                           ; BSR set to: 0
  6331                           ;my_i2c.c: 138: ic_ptr->status = 0x7;
  6332  000220  EE20 F00C          	lfsr	2,12
  6333  000224  5053               	movf	_ic_ptr,w,c
  6334  000226  26D9               	addwf	fsr2l,f,c
  6335  000228  5054               	movf	_ic_ptr+1,w,c
  6336  00022A  22DA               	addwfc	fsr2h,f,c
  6337  00022C  0E07               	movlw	7
  6338  00022E  D05A               	goto	L5
  6339  000230                     i2l2942:
  6340                           
  6341                           ; BSR set to: 0
  6342                           ;my_i2c.c: 140: ic_ptr->status = 0x8;
  6343  000230  EE20 F00C          	lfsr	2,12
  6344  000234  5053               	movf	_ic_ptr,w,c
  6345  000236  26D9               	addwf	fsr2l,f,c
  6346  000238  5054               	movf	_ic_ptr+1,w,c
  6347  00023A  22DA               	addwfc	fsr2h,f,c
  6348  00023C  0E08               	movlw	8
  6349  00023E  6EDF               	movwf	indf2,c
  6350  000240  D0DE               	goto	L9
  6351  000242                     i2l2948:
  6352                           
  6353                           ; BSR set to: 0
  6354                           ;my_i2c.c: 146: ic_ptr->error_count++;
  6355  000242  EE20 F00E          	lfsr	2,14
  6356  000246  5053               	movf	_ic_ptr,w,c
  6357  000248  26D9               	addwf	fsr2l,f,c
  6358  00024A  5054               	movf	_ic_ptr+1,w,c
  6359  00024C  22DA               	addwfc	fsr2h,f,c
  6360  00024E  2ADF               	incf	indf2,f,c
  6361                           
  6362                           ;my_i2c.c: 147: ic_ptr->status = 0x5;
  6363  000250  EE20 F00C          	lfsr	2,12
  6364  000254  5053               	movf	_ic_ptr,w,c
  6365  000256  26D9               	addwf	fsr2l,f,c
  6366  000258  5054               	movf	_ic_ptr+1,w,c
  6367  00025A  22DA               	addwfc	fsr2h,f,c
  6368  00025C  0E05               	movlw	5
  6369  00025E  6EDF               	movwf	indf2,c
  6370                           
  6371                           ;my_i2c.c: 148: ic_ptr->error_code = 0x6;
  6372  000260  EE20 F00D          	lfsr	2,13
  6373  000264  5053               	movf	_ic_ptr,w,c
  6374  000266  26D9               	addwf	fsr2l,f,c
  6375  000268  5054               	movf	_ic_ptr+1,w,c
  6376  00026A  22DA               	addwfc	fsr2h,f,c
  6377  00026C  0E06               	movlw	6
  6378  00026E  D03A               	goto	L5
  6379  000270                     i2l2950:
  6380                           
  6381                           ; BSR set to: 0
  6382                           ;my_i2c.c: 154: {
  6383                           ;my_i2c.c: 155: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  6384  000270  EE20 F01A          	lfsr	2,26
  6385  000274  5053               	movf	_ic_ptr,w,c
  6386  000276  26D9               	addwf	fsr2l,f,c
  6387  000278  5054               	movf	_ic_ptr+1,w,c
  6388  00027A  22DA               	addwfc	fsr2h,f,c
  6389  00027C  50DF               	movf	indf2,w,c
  6390  00027E  0100               	movlb	0	; () banked
  6391  000280  6FD0               	movwf	??_i2c_int_handler& (0+255),b
  6392  000282  EE20 F019          	lfsr	2,25
  6393  000286  5053               	movf	_ic_ptr,w,c
  6394  000288  26D9               	addwf	fsr2l,f,c
  6395  00028A  5054               	movf	_ic_ptr+1,w,c
  6396  00028C  22DA               	addwfc	fsr2h,f,c
  6397  00028E  50DF               	movf	indf2,w,c
  6398  000290  0100               	movlb	0	; () banked
  6399  000292  5DD0               	subwf	??_i2c_int_handler& (0+255),w,b
  6400  000294  B0D8               	btfsc	status,0,c
  6401  000296  D0C4               	goto	L8
  6402                           
  6403                           ; BSR set to: 0
  6404                           ;my_i2c.c: 156: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6405  000298  EE20 F01A          	lfsr	2,26
  6406  00029C  5053               	movf	_ic_ptr,w,c
  6407  00029E  26D9               	addwf	fsr2l,f,c
  6408  0002A0  5054               	movf	_ic_ptr+1,w,c
  6409  0002A2  22DA               	addwfc	fsr2h,f,c
  6410  0002A4  50DF               	movf	indf2,w,c
  6411  0002A6  0100               	movlb	0	; () banked
  6412  0002A8  6FD0               	movwf	??_i2c_int_handler& (0+255),b
  6413  0002AA  0100               	movlb	0	; () banked
  6414  0002AC  51D0               	movf	??_i2c_int_handler& (0+255),w,b
  6415  0002AE  0D01               	mullw	1
  6416  0002B0  0E0F               	movlw	15
  6417  0002B2  26F3               	addwf	prodl,f,c
  6418  0002B4  0E00               	movlw	0
  6419  0002B6  22F4               	addwfc	prodh,f,c
  6420  0002B8  50F3               	movf	prodl,w,c
  6421  0002BA  2453               	addwf	_ic_ptr,w,c
  6422  0002BC  6ED9               	movwf	fsr2l,c
  6423  0002BE  50F4               	movf	prodh,w,c
  6424  0002C0  2054               	addwfc	_ic_ptr+1,w,c
  6425  0002C2  6EDA               	movwf	fsr2h,c
  6426  0002C4  50DF               	movf	indf2,w,c
  6427  0002C6  6EC9               	movwf	4041,c	;volatile
  6428                           
  6429                           ; BSR set to: 0
  6430                           ;my_i2c.c: 157: ic_ptr->outbufind++;
  6431  0002C8  EE20 F01A          	lfsr	2,26
  6432  0002CC  5053               	movf	_ic_ptr,w,c
  6433  0002CE  26D9               	addwf	fsr2l,f,c
  6434  0002D0  5054               	movf	_ic_ptr+1,w,c
  6435  0002D2  22DA               	addwfc	fsr2h,f,c
  6436  0002D4  2ADF               	incf	indf2,f,c
  6437                           
  6438                           ; BSR set to: 0
  6439                           ;my_i2c.c: 158: data_written = 1;
  6440  0002D6  0100               	movlb	0	; () banked
  6441  0002D8  6FD0               	movwf	??_i2c_int_handler& (0+255),b
  6442  0002DA  0E01               	movlw	1
  6443  0002DC  0100               	movlb	0	; () banked
  6444  0002DE  0100               	movlb	0	; () banked
  6445  0002E0  6FD5               	movwf	i2c_int_handler@data_written& (0+255),b
  6446  0002E2  D09B               	goto	L6
  6447  0002E4                     L5:
  6448  0002E4  6EDF               	movwf	indf2,c
  6449  0002E6  D0B7               	goto	i2l266
  6450  0002E8                     i2l286:
  6451                           
  6452                           ; BSR set to: 0
  6453                           ;my_i2c.c: 166: {
  6454                           ;my_i2c.c: 168: if (SSPSTATbits.P == 1) {
  6455  0002E8  A8C7               	btfss	4039,4,c	;volatile
  6456  0002EA  D04C               	goto	i2l2978
  6457                           
  6458                           ; BSR set to: 0
  6459                           ;my_i2c.c: 170: ic_ptr->event_count++;
  6460  0002EC  EE20 F00B          	lfsr	2,11
  6461  0002F0  5053               	movf	_ic_ptr,w,c
  6462  0002F2  26D9               	addwf	fsr2l,f,c
  6463  0002F4  5054               	movf	_ic_ptr+1,w,c
  6464  0002F6  22DA               	addwfc	fsr2h,f,c
  6465  0002F8  2ADF               	incf	indf2,f,c
  6466                           
  6467                           ; BSR set to: 0
  6468                           ;my_i2c.c: 171: if (data_read) {
  6469  0002FA  0100               	movlb	0	; () banked
  6470  0002FC  0100               	movlb	0	; () banked
  6471  0002FE  51DA               	movf	i2c_int_handler@data_read& (0+255),w,b
  6472  000300  B4D8               	btfsc	status,2,c
  6473  000302  D037               	goto	i2l2974
  6474                           
  6475                           ; BSR set to: 0
  6476                           ;my_i2c.c: 172: if (SSPSTATbits.D_A == 1) {
  6477  000304  AAC7               	btfss	4039,5,c	;volatile
  6478  000306  D01D               	goto	i2l2972
  6479                           
  6480                           ; BSR set to: 0
  6481                           ;my_i2c.c: 173: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6482  000308  EE20 F00A          	lfsr	2,10
  6483  00030C  5053               	movf	_ic_ptr,w,c
  6484  00030E  26D9               	addwf	fsr2l,f,c
  6485  000310  5054               	movf	_ic_ptr+1,w,c
  6486  000312  22DA               	addwfc	fsr2h,f,c
  6487  000314  50DF               	movf	indf2,w,c
  6488  000316  0100               	movlb	0	; () banked
  6489  000318  6FD0               	movwf	??_i2c_int_handler& (0+255),b
  6490  00031A  0100               	movlb	0	; () banked
  6491  00031C  51D0               	movf	??_i2c_int_handler& (0+255),w,b
  6492  00031E  0D01               	mullw	1
  6493  000320  50F3               	movf	prodl,w,c
  6494  000322  2453               	addwf	_ic_ptr,w,c
  6495  000324  6ED9               	movwf	fsr2l,c
  6496  000326  50F4               	movf	prodh,w,c
  6497  000328  2054               	addwfc	_ic_ptr+1,w,c
  6498  00032A  6EDA               	movwf	fsr2h,c
  6499  00032C  0100               	movlb	0	; () banked
  6500  00032E  C0D8  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6501                           
  6502                           ; BSR set to: 0
  6503                           ;my_i2c.c: 174: ic_ptr->buflen++;
  6504  000332  EE20 F00A          	lfsr	2,10
  6505  000336  5053               	movf	_ic_ptr,w,c
  6506  000338  26D9               	addwf	fsr2l,f,c
  6507  00033A  5054               	movf	_ic_ptr+1,w,c
  6508  00033C  22DA               	addwfc	fsr2h,f,c
  6509  00033E  2ADF               	incf	indf2,f,c
  6510  000340  D018               	goto	i2l2974
  6511  000342                     i2l2972:
  6512                           
  6513                           ; BSR set to: 0
  6514                           ;my_i2c.c: 177: ic_ptr->error_count++;
  6515  000342  EE20 F00E          	lfsr	2,14
  6516  000346  5053               	movf	_ic_ptr,w,c
  6517  000348  26D9               	addwf	fsr2l,f,c
  6518  00034A  5054               	movf	_ic_ptr+1,w,c
  6519  00034C  22DA               	addwfc	fsr2h,f,c
  6520  00034E  2ADF               	incf	indf2,f,c
  6521                           
  6522                           ;my_i2c.c: 178: ic_ptr->error_code = 0x6;
  6523  000350  EE20 F00D          	lfsr	2,13
  6524  000354  5053               	movf	_ic_ptr,w,c
  6525  000356  26D9               	addwf	fsr2l,f,c
  6526  000358  5054               	movf	_ic_ptr+1,w,c
  6527  00035A  22DA               	addwfc	fsr2h,f,c
  6528  00035C  0E06               	movlw	6
  6529  00035E  6EDF               	movwf	indf2,c
  6530                           
  6531                           ;my_i2c.c: 179: ic_ptr->status = 0x5;
  6532  000360  EE20 F00C          	lfsr	2,12
  6533  000364  5053               	movf	_ic_ptr,w,c
  6534  000366  26D9               	addwf	fsr2l,f,c
  6535  000368  5054               	movf	_ic_ptr+1,w,c
  6536  00036A  22DA               	addwfc	fsr2h,f,c
  6537  00036C  0E05               	movlw	5
  6538  00036E  6EDF               	movwf	indf2,c
  6539  000370  D057               	goto	L8
  6540  000372                     i2l2974:
  6541                           
  6542                           ; BSR set to: 0
  6543                           ;my_i2c.c: 182: msg_ready = 1;
  6544  000372  0100               	movlb	0	; () banked
  6545  000374  6FD0               	movwf	??_i2c_int_handler& (0+255),b
  6546  000376  0E01               	movlw	1
  6547  000378  0100               	movlb	0	; () banked
  6548  00037A  0100               	movlb	0	; () banked
  6549  00037C  6FD9               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6550  00037E  0100               	movlb	0	; () banked
  6551  000380  51D0               	movf	??_i2c_int_handler& (0+255),w,b
  6552                           
  6553                           ; BSR set to: 0
  6554  000382  D04E               	goto	L8
  6555  000384                     i2l2978:
  6556                           
  6557                           ; BSR set to: 0
  6558  000384  0100               	movlb	0	; () banked
  6559  000386  0100               	movlb	0	; () banked
  6560  000388  51DA               	movf	i2c_int_handler@data_read& (0+255),w,b
  6561  00038A  B4D8               	btfsc	status,2,c
  6562  00038C  D064               	goto	i2l266
  6563                           
  6564                           ; BSR set to: 0
  6565                           ;my_i2c.c: 186: ic_ptr->event_count++;
  6566  00038E  EE20 F00B          	lfsr	2,11
  6567  000392  5053               	movf	_ic_ptr,w,c
  6568  000394  26D9               	addwf	fsr2l,f,c
  6569  000396  5054               	movf	_ic_ptr+1,w,c
  6570  000398  22DA               	addwfc	fsr2h,f,c
  6571  00039A  2ADF               	incf	indf2,f,c
  6572                           
  6573                           ; BSR set to: 0
  6574                           ;my_i2c.c: 187: if (SSPSTATbits.D_A == 1) {
  6575  00039C  AAC7               	btfss	4039,5,c	;volatile
  6576  00039E  D01D               	goto	i2l294
  6577                           
  6578                           ; BSR set to: 0
  6579                           ;my_i2c.c: 188: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6580  0003A0  EE20 F00A          	lfsr	2,10
  6581  0003A4  5053               	movf	_ic_ptr,w,c
  6582  0003A6  26D9               	addwf	fsr2l,f,c
  6583  0003A8  5054               	movf	_ic_ptr+1,w,c
  6584  0003AA  22DA               	addwfc	fsr2h,f,c
  6585  0003AC  50DF               	movf	indf2,w,c
  6586  0003AE  0100               	movlb	0	; () banked
  6587  0003B0  6FD0               	movwf	??_i2c_int_handler& (0+255),b
  6588  0003B2  0100               	movlb	0	; () banked
  6589  0003B4  51D0               	movf	??_i2c_int_handler& (0+255),w,b
  6590  0003B6  0D01               	mullw	1
  6591  0003B8  50F3               	movf	prodl,w,c
  6592  0003BA  2453               	addwf	_ic_ptr,w,c
  6593  0003BC  6ED9               	movwf	fsr2l,c
  6594  0003BE  50F4               	movf	prodh,w,c
  6595  0003C0  2054               	addwfc	_ic_ptr+1,w,c
  6596  0003C2  6EDA               	movwf	fsr2h,c
  6597  0003C4  0100               	movlb	0	; () banked
  6598  0003C6  C0D8  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6599                           
  6600                           ; BSR set to: 0
  6601                           ;my_i2c.c: 189: ic_ptr->buflen++;
  6602  0003CA  EE20 F00A          	lfsr	2,10
  6603  0003CE  5053               	movf	_ic_ptr,w,c
  6604  0003D0  26D9               	addwf	fsr2l,f,c
  6605  0003D2  5054               	movf	_ic_ptr+1,w,c
  6606  0003D4  22DA               	addwfc	fsr2h,f,c
  6607  0003D6  2ADF               	incf	indf2,f,c
  6608                           
  6609                           ;my_i2c.c: 190: } else {
  6610  0003D8  D03E               	goto	i2l266
  6611  0003DA                     i2l294:
  6612                           
  6613                           ; BSR set to: 0
  6614                           ;my_i2c.c: 191: if (SSPSTATbits.R_W == 1) {
  6615  0003DA  A4C7               	btfss	4039,2,c	;volatile
  6616  0003DC  D701               	goto	i2l2930
  6617                           
  6618                           ; BSR set to: 0
  6619                           ;my_i2c.c: 192: ic_ptr->status = 0x8;
  6620  0003DE  EE20 F00C          	lfsr	2,12
  6621  0003E2  5053               	movf	_ic_ptr,w,c
  6622  0003E4  26D9               	addwf	fsr2l,f,c
  6623  0003E6  5054               	movf	_ic_ptr+1,w,c
  6624  0003E8  22DA               	addwfc	fsr2h,f,c
  6625  0003EA  0E08               	movlw	8
  6626  0003EC  6EDF               	movwf	indf2,c
  6627                           
  6628                           ; BSR set to: 0
  6629                           ;my_i2c.c: 193: msg_ready = 1;
  6630  0003EE  0100               	movlb	0	; () banked
  6631  0003F0  6FD0               	movwf	??_i2c_int_handler& (0+255),b
  6632  0003F2  0E01               	movlw	1
  6633  0003F4  0100               	movlb	0	; () banked
  6634  0003F6  0100               	movlb	0	; () banked
  6635  0003F8  6FD9               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6636  0003FA  0100               	movlb	0	; () banked
  6637  0003FC  51D0               	movf	??_i2c_int_handler& (0+255),w,b
  6638  0003FE                     L9:
  6639                           
  6640                           ; BSR set to: 0
  6641                           ;my_i2c.c: 194: msg_to_send = 1;
  6642  0003FE  0100               	movlb	0	; () banked
  6643  000400  6FD0               	movwf	??_i2c_int_handler& (0+255),b
  6644  000402  0E01               	movlw	1
  6645  000404  0100               	movlb	0	; () banked
  6646  000406  0100               	movlb	0	; () banked
  6647  000408  6FD7               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6648  00040A  0100               	movlb	0	; () banked
  6649  00040C  51D0               	movf	??_i2c_int_handler& (0+255),w,b
  6650                           
  6651                           ; BSR set to: 0
  6652                           ;my_i2c.c: 196: data_read = 0;
  6653  00040E  0100               	movlb	0	; () banked
  6654  000410  6FD0               	movwf	??_i2c_int_handler& (0+255),b
  6655  000412  0E00               	movlw	0
  6656  000414  0100               	movlb	0	; () banked
  6657  000416  0100               	movlb	0	; () banked
  6658  000418  6FDA               	movwf	i2c_int_handler@data_read& (0+255),b
  6659  00041A                     L6:
  6660  00041A  0100               	movlb	0	; () banked
  6661  00041C  51D0               	movf	??_i2c_int_handler& (0+255),w,b
  6662                           
  6663                           ;my_i2c.c: 197: } else {
  6664  00041E  D01B               	goto	i2l266
  6665  000420                     L8:
  6666                           
  6667                           ;my_i2c.c: 200: ic_ptr->status = 0x5;
  6668  000420  EE20 F00C          	lfsr	2,12
  6669  000424  5053               	movf	_ic_ptr,w,c
  6670  000426  26D9               	addwf	fsr2l,f,c
  6671  000428  5054               	movf	_ic_ptr+1,w,c
  6672  00042A  22DA               	addwfc	fsr2h,f,c
  6673  00042C  0E05               	movlw	5
  6674  00042E  D75A               	goto	L5
  6675  000430                     i2l3000:
  6676                           
  6677                           ; BSR set to: 0
  6678  000430  EE20 F00C          	lfsr	2,12
  6679  000434  5053               	movf	_ic_ptr,w,c
  6680  000436  26D9               	addwf	fsr2l,f,c
  6681  000438  5054               	movf	_ic_ptr+1,w,c
  6682  00043A  22DA               	addwfc	fsr2h,f,c
  6683  00043C  50DF               	movf	indf2,w,c
  6684                           
  6685                           ; Switch size 1, requested type "space"
  6686                           ; Number of cases is 4, Range of values is 5 to 8
  6687                           ; switch strategies available:
  6688                           ; Name         Instructions Cycles
  6689                           ; simple_byte           13     7 (average)
  6690                           ;	Chosen strategy is simple_byte
  6691  00043E  0A05               	xorlw	5	; case 5
  6692  000440  B4D8               	btfsc	status,2,c
  6693  000442  D696               	goto	i2l268
  6694  000444  0A03               	xorlw	3	; case 6
  6695  000446  B4D8               	btfsc	status,2,c
  6696  000448  D6B2               	goto	i2l272
  6697  00044A  0A01               	xorlw	1	; case 7
  6698  00044C  B4D8               	btfsc	status,2,c
  6699  00044E  D74C               	goto	i2l286
  6700  000450  0A0F               	xorlw	15	; case 8
  6701  000452  B4D8               	btfsc	status,2,c
  6702  000454  D70D               	goto	i2l2950
  6703  000456                     i2l266:
  6704                           
  6705                           ;my_i2c.c: 207: }
  6706                           ;my_i2c.c: 210: if (data_read || data_written) {
  6707  000456  0100               	movlb	0	; () banked
  6708  000458  0100               	movlb	0	; () banked
  6709  00045A  67DA               	tstfsz	i2c_int_handler@data_read& (0+255),b
  6710  00045C  D005               	goto	i2l300
  6711                           
  6712                           ; BSR set to: 0
  6713  00045E  0100               	movlb	0	; () banked
  6714  000460  0100               	movlb	0	; () banked
  6715  000462  51D5               	movf	i2c_int_handler@data_written& (0+255),w,b
  6716  000464  B4D8               	btfsc	status,2,c
  6717  000466  D002               	goto	i2l3006
  6718  000468                     i2l300:
  6719                           
  6720                           ; BSR set to: 0
  6721                           ;my_i2c.c: 212: if (SSPCON1bits.CKP == 0) {
  6722  000468  A8C6               	btfss	4038,4,c	;volatile
  6723                           
  6724                           ; BSR set to: 0
  6725                           ;my_i2c.c: 213: SSPCON1bits.CKP = 1;
  6726  00046A  88C6               	bsf	4038,4,c	;volatile
  6727  00046C                     i2l3006:
  6728                           
  6729                           ; BSR set to: 0
  6730                           ;my_i2c.c: 214: }
  6731                           ;my_i2c.c: 215: }
  6732                           ;my_i2c.c: 218: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  6733  00046C  EE20 F00A          	lfsr	2,10
  6734  000470  5053               	movf	_ic_ptr,w,c
  6735  000472  26D9               	addwf	fsr2l,f,c
  6736  000474  5054               	movf	_ic_ptr+1,w,c
  6737  000476  22DA               	addwfc	fsr2h,f,c
  6738  000478  0E08               	movlw	8
  6739  00047A  64DF               	cpfsgt	indf2,c
  6740  00047C  D01B               	goto	i2l3012
  6741                           
  6742                           ; BSR set to: 0
  6743  00047E  0100               	movlb	0	; () banked
  6744  000480  0100               	movlb	0	; () banked
  6745  000482  67D9               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  6746  000484  D017               	goto	i2l3012
  6747                           
  6748                           ; BSR set to: 0
  6749                           ;my_i2c.c: 219: ic_ptr->status = 0x5;
  6750  000486  EE20 F00C          	lfsr	2,12
  6751  00048A  5053               	movf	_ic_ptr,w,c
  6752  00048C  26D9               	addwf	fsr2l,f,c
  6753  00048E  5054               	movf	_ic_ptr+1,w,c
  6754  000490  22DA               	addwfc	fsr2h,f,c
  6755  000492  0E05               	movlw	5
  6756  000494  6EDF               	movwf	indf2,c
  6757                           
  6758                           ;my_i2c.c: 220: ic_ptr->error_count++;
  6759  000496  EE20 F00E          	lfsr	2,14
  6760  00049A  5053               	movf	_ic_ptr,w,c
  6761  00049C  26D9               	addwf	fsr2l,f,c
  6762  00049E  5054               	movf	_ic_ptr+1,w,c
  6763  0004A0  22DA               	addwfc	fsr2h,f,c
  6764  0004A2  2ADF               	incf	indf2,f,c
  6765                           
  6766                           ;my_i2c.c: 221: ic_ptr->error_code = 0x7;
  6767  0004A4  EE20 F00D          	lfsr	2,13
  6768  0004A8  5053               	movf	_ic_ptr,w,c
  6769  0004AA  26D9               	addwf	fsr2l,f,c
  6770  0004AC  5054               	movf	_ic_ptr+1,w,c
  6771  0004AE  22DA               	addwfc	fsr2h,f,c
  6772  0004B0  0E07               	movlw	7
  6773  0004B2  6EDF               	movwf	indf2,c
  6774  0004B4                     i2l3012:
  6775                           
  6776                           ; BSR set to: 0
  6777                           ;my_i2c.c: 222: }
  6778                           ;my_i2c.c: 224: if (msg_ready) {
  6779  0004B4  0100               	movlb	0	; () banked
  6780  0004B6  0100               	movlb	0	; () banked
  6781  0004B8  51D9               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  6782  0004BA  B4D8               	btfsc	status,2,c
  6783  0004BC  D038               	goto	i2l3020
  6784                           
  6785                           ; BSR set to: 0
  6786                           ;my_i2c.c: 225: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  6787  0004BE  EE20 F00B          	lfsr	2,11
  6788  0004C2  5053               	movf	_ic_ptr,w,c
  6789  0004C4  26D9               	addwf	fsr2l,f,c
  6790  0004C6  5054               	movf	_ic_ptr+1,w,c
  6791  0004C8  22DA               	addwfc	fsr2h,f,c
  6792  0004CA  EE10 F00A          	lfsr	1,10
  6793  0004CE  5053               	movf	_ic_ptr,w,c
  6794  0004D0  26E1               	addwf	fsr1l,f,c
  6795  0004D2  5054               	movf	_ic_ptr+1,w,c
  6796  0004D4  22E2               	addwfc	fsr1h,f,c
  6797  0004D6  50E7               	movf	indf1,w,c
  6798  0004D8  0100               	movlb	0	; () banked
  6799  0004DA  6FD0               	movwf	??_i2c_int_handler& (0+255),b
  6800  0004DC  0100               	movlb	0	; () banked
  6801  0004DE  51D0               	movf	??_i2c_int_handler& (0+255),w,b
  6802  0004E0  0D01               	mullw	1
  6803  0004E2  50F3               	movf	prodl,w,c
  6804  0004E4  2453               	addwf	_ic_ptr,w,c
  6805  0004E6  6EE1               	movwf	fsr1l,c
  6806  0004E8  50F4               	movf	prodh,w,c
  6807  0004EA  2054               	addwfc	_ic_ptr+1,w,c
  6808  0004EC  6EE2               	movwf	fsr1h,c
  6809  0004EE  CFDF FFE7          	movff	indf2,indf1
  6810                           
  6811                           ; BSR set to: 0
  6812                           ;my_i2c.c: 226: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  6813  0004F2  0100               	movlb	0	; () banked
  6814  0004F4  6FD0               	movwf	??_i2c_int_handler& (0+255),b
  6815  0004F6  0E28               	movlw	40
  6816  0004F8  0100               	movlb	0	; () banked
  6817  0004FA  0100               	movlb	0	; () banked
  6818  0004FC  6FCC               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6819  0004FE  0100               	movlb	0	; () banked
  6820  000500  51D0               	movf	??_i2c_int_handler& (0+255),w,b
  6821  000502  0100               	movlb	0	; () banked
  6822  000504  C054  F0CE         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  6823  000508  0100               	movlb	0	; () banked
  6824  00050A  C053  F0CD         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  6825  00050E  EE20 F00A          	lfsr	2,10
  6826  000512  5053               	movf	_ic_ptr,w,c
  6827  000514  26D9               	addwf	fsr2l,f,c
  6828  000516  5054               	movf	_ic_ptr+1,w,c
  6829  000518  22DA               	addwfc	fsr2h,f,c
  6830  00051A  50DF               	movf	indf2,w,c
  6831  00051C  0100               	movlb	0	; () banked
  6832  00051E  6FD1               	movwf	(??_i2c_int_handler+1)& (0+255),b
  6833  000520  0100               	movlb	0	; () banked
  6834  000522  29D1               	incf	(??_i2c_int_handler+1)& (0+255),w,b
  6835  000524  EC6B  F00C         	call	_ToMainHigh_sendmsg
  6836                           
  6837                           ;my_i2c.c: 227: ic_ptr->buflen = 0;
  6838  000528  EE20 F00A          	lfsr	2,10
  6839  00052C  D03E               	goto	L7
  6840  00052E                     i2l3020:
  6841  00052E  EE20 F00E          	lfsr	2,14
  6842  000532  5053               	movf	_ic_ptr,w,c
  6843  000534  26D9               	addwf	fsr2l,f,c
  6844  000536  5054               	movf	_ic_ptr+1,w,c
  6845  000538  22DA               	addwfc	fsr2h,f,c
  6846  00053A  50DF               	movf	indf2,w,c
  6847  00053C  B4D8               	btfsc	status,2,c
  6848  00053E  D03B               	goto	i2l3028
  6849                           
  6850                           ;my_i2c.c: 229: error_buf[0] = ic_ptr->error_count;
  6851  000540  EE20 F00E          	lfsr	2,14
  6852  000544  5053               	movf	_ic_ptr,w,c
  6853  000546  26D9               	addwf	fsr2l,f,c
  6854  000548  5054               	movf	_ic_ptr+1,w,c
  6855  00054A  22DA               	addwfc	fsr2h,f,c
  6856  00054C  50DF               	movf	indf2,w,c
  6857  00054E  0100               	movlb	0	; () banked
  6858  000550  0100               	movlb	0	; () banked
  6859  000552  6FD2               	movwf	i2c_int_handler@error_buf& (0+255),b
  6860                           
  6861                           ;my_i2c.c: 230: error_buf[1] = ic_ptr->error_code;
  6862  000554  EE20 F00D          	lfsr	2,13
  6863  000558  5053               	movf	_ic_ptr,w,c
  6864  00055A  26D9               	addwf	fsr2l,f,c
  6865  00055C  5054               	movf	_ic_ptr+1,w,c
  6866  00055E  22DA               	addwfc	fsr2h,f,c
  6867  000560  50DF               	movf	indf2,w,c
  6868  000562  0100               	movlb	0	; () banked
  6869  000564  0100               	movlb	0	; () banked
  6870  000566  6FD3               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  6871                           
  6872                           ;my_i2c.c: 231: error_buf[2] = ic_ptr->event_count;
  6873  000568  EE20 F00B          	lfsr	2,11
  6874  00056C  5053               	movf	_ic_ptr,w,c
  6875  00056E  26D9               	addwf	fsr2l,f,c
  6876  000570  5054               	movf	_ic_ptr+1,w,c
  6877  000572  22DA               	addwfc	fsr2h,f,c
  6878  000574  50DF               	movf	indf2,w,c
  6879  000576  0100               	movlb	0	; () banked
  6880  000578  0100               	movlb	0	; () banked
  6881  00057A  6FD4               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  6882                           
  6883                           ; BSR set to: 0
  6884                           ;my_i2c.c: 232: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  6885  00057C  0100               	movlb	0	; () banked
  6886  00057E  6FD0               	movwf	??_i2c_int_handler& (0+255),b
  6887  000580  0E29               	movlw	41
  6888  000582  0100               	movlb	0	; () banked
  6889  000584  0100               	movlb	0	; () banked
  6890  000586  6FCC               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  6891  000588  0100               	movlb	0	; () banked
  6892  00058A  51D0               	movf	??_i2c_int_handler& (0+255),w,b
  6893  00058C  0100               	movlb	0	; () banked
  6894  00058E  0E00               	movlw	high i2c_int_handler@error_buf
  6895  000590  0100               	movlb	0	; () banked
  6896  000592  0100               	movlb	0	; () banked
  6897  000594  6FCE               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  6898  000596  0100               	movlb	0	; () banked
  6899  000598  0ED2               	movlw	low i2c_int_handler@error_buf
  6900  00059A  0100               	movlb	0	; () banked
  6901  00059C  0100               	movlb	0	; () banked
  6902  00059E  6FCD               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  6903  0005A0  0E03               	movlw	3
  6904  0005A2  EC6B  F00C         	call	_ToMainHigh_sendmsg
  6905                           
  6906                           ;my_i2c.c: 233: ic_ptr->error_count = 0;
  6907  0005A6  EE20 F00E          	lfsr	2,14
  6908  0005AA                     L7:
  6909  0005AA  5053               	movf	_ic_ptr,w,c
  6910  0005AC  26D9               	addwf	fsr2l,f,c
  6911  0005AE  5054               	movf	_ic_ptr+1,w,c
  6912  0005B0  22DA               	addwfc	fsr2h,f,c
  6913  0005B2  0E00               	movlw	0
  6914  0005B4  6EDF               	movwf	indf2,c
  6915  0005B6                     i2l3028:
  6916                           
  6917                           ;my_i2c.c: 234: }
  6918                           ;my_i2c.c: 235: if (msg_to_send) {
  6919  0005B6  0100               	movlb	0	; () banked
  6920  0005B8  0100               	movlb	0	; () banked
  6921  0005BA  51D7               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  6922  0005BC  B4D8               	btfsc	status,2,c
  6923  0005BE  0012               	return	
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;my_i2c.c: 237: readMessages();
  6927  0005C0  ECAA  F009         	call	_readMessages	;wreg free
  6928  0005C4  0012               	return	
  6929  0005C6                     __end_of_i2c_int_handler:
  6930                           	opt stack 0
  6931                           pclatu	equ	0xFFB
  6932                           pclath	equ	0xFFA
  6933                           tblptru	equ	0xFF8
  6934                           tblptrh	equ	0xFF7
  6935                           tblptrl	equ	0xFF6
  6936                           tablat	equ	0xFF5
  6937                           prodh	equ	0xFF4
  6938                           prodl	equ	0xFF3
  6939                           intcon	equ	0xFF2
  6940                           postinc0	equ	0xFEE
  6941                           fsr0h	equ	0xFEA
  6942                           fsr0l	equ	0xFE9
  6943                           wreg	equ	0xFE8
  6944                           indf1	equ	0xFE7
  6945                           fsr1h	equ	0xFE2
  6946                           fsr1l	equ	0xFE1
  6947                           bsr	equ	0xFE0
  6948                           indf2	equ	0xFDF
  6949                           postinc2	equ	0xFDE
  6950                           postdec2	equ	0xFDD
  6951                           fsr2h	equ	0xFDA
  6952                           fsr2l	equ	0xFD9
  6953                           status	equ	0xFD8
  6954                           
  6955 ;; *************** function _readMessages *****************
  6956 ;; Defined at:
  6957 ;;		line 310 in file "../src/my_i2c.c"
  6958 ;; Parameters:    Size  Location     Type
  6959 ;;		None
  6960 ;; Auto vars:     Size  Location     Type
  6961 ;;  buf             5    6[BANK0 ] unsigned char [5]
  6962 ;; Return value:  Size  Location     Type
  6963 ;;		None               void
  6964 ;; Registers used:
  6965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6966 ;; Tracked objects:
  6967 ;;		On entry : 0/0
  6968 ;;		On exit  : 0/0
  6969 ;;		Unchanged: 0/0
  6970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6971 ;;      Params:         0       0       0       0       0
  6972 ;;      Locals:         0       5       0       0       0
  6973 ;;      Temps:          0       1       0       0       0
  6974 ;;      Totals:         0       6       0       0       0
  6975 ;;Total ram usage:        6 bytes
  6976 ;; Hardware stack levels used:    1
  6977 ;; Hardware stack levels required when called:    1
  6978 ;; This function calls:
  6979 ;;		_start_i2c_slave_reply
  6980 ;; This function is called by:
  6981 ;;		_i2c_int_handler
  6982 ;; This function uses a non-reentrant model
  6983 ;;
  6984                           
  6985                           	psect	text43
  6986  001354                     __ptext43:
  6987                           	opt stack 0
  6988  001354                     _readMessages:
  6989                           	opt stack 18
  6990                           
  6991                           ;my_i2c.c: 315: unsigned char buf[5];
  6992                           ;my_i2c.c: 316: buf[0] = 0x1;
  6993                           
  6994                           ;incstack = 0
  6995  001354  0100               	movlb	0	; () banked
  6996  001356  6FBB               	movwf	??_readMessages& (0+255),b
  6997  001358  0E01               	movlw	1
  6998  00135A  0100               	movlb	0	; () banked
  6999  00135C  0100               	movlb	0	; () banked
  7000  00135E  6FBC               	movwf	readMessages@buf& (0+255),b
  7001  001360  0100               	movlb	0	; () banked
  7002  001362  51BB               	movf	??_readMessages& (0+255),w,b
  7003                           
  7004                           ;my_i2c.c: 317: buf[1] = 0x2;
  7005  001364  0100               	movlb	0	; () banked
  7006  001366  6FBB               	movwf	??_readMessages& (0+255),b
  7007  001368  0E02               	movlw	2
  7008  00136A  0100               	movlb	0	; () banked
  7009  00136C  0100               	movlb	0	; () banked
  7010  00136E  6FBD               	movwf	(readMessages@buf+1)& (0+255),b
  7011  001370  0100               	movlb	0	; () banked
  7012  001372  51BB               	movf	??_readMessages& (0+255),w,b
  7013                           
  7014                           ;my_i2c.c: 318: buf[2] = 0x3;
  7015  001374  0100               	movlb	0	; () banked
  7016  001376  6FBB               	movwf	??_readMessages& (0+255),b
  7017  001378  0E03               	movlw	3
  7018  00137A  0100               	movlb	0	; () banked
  7019  00137C  0100               	movlb	0	; () banked
  7020  00137E  6FBE               	movwf	(readMessages@buf+2)& (0+255),b
  7021  001380  0100               	movlb	0	; () banked
  7022  001382  51BB               	movf	??_readMessages& (0+255),w,b
  7023                           
  7024                           ;my_i2c.c: 319: buf[3] = 0x4;
  7025  001384  0100               	movlb	0	; () banked
  7026  001386  6FBB               	movwf	??_readMessages& (0+255),b
  7027  001388  0E04               	movlw	4
  7028  00138A  0100               	movlb	0	; () banked
  7029  00138C  0100               	movlb	0	; () banked
  7030  00138E  6FBF               	movwf	(readMessages@buf+3)& (0+255),b
  7031  001390  0100               	movlb	0	; () banked
  7032  001392  51BB               	movf	??_readMessages& (0+255),w,b
  7033                           
  7034                           ;my_i2c.c: 320: buf[4] = 0x5;
  7035  001394  0100               	movlb	0	; () banked
  7036  001396  6FBB               	movwf	??_readMessages& (0+255),b
  7037  001398  0E05               	movlw	5
  7038  00139A  0100               	movlb	0	; () banked
  7039  00139C  0100               	movlb	0	; () banked
  7040  00139E  6FC0               	movwf	(readMessages@buf+4)& (0+255),b
  7041  0013A0  0100               	movlb	0	; () banked
  7042  0013A2  51BB               	movf	??_readMessages& (0+255),w,b
  7043                           
  7044                           ;my_i2c.c: 322: length = 5;
  7045  0013A4  0100               	movlb	0	; () banked
  7046  0013A6  6FBB               	movwf	??_readMessages& (0+255),b
  7047  0013A8  0E05               	movlw	5
  7048  0013AA  6E50               	movwf	_length,c
  7049  0013AC  0100               	movlb	0	; () banked
  7050  0013AE  51BB               	movf	??_readMessages& (0+255),w,b
  7051                           
  7052                           ; BSR set to: 0
  7053                           ;my_i2c.c: 323: start_i2c_slave_reply(length, buf);
  7054  0013B0  0100               	movlb	0	; () banked
  7055  0013B2  0E00               	movlw	high readMessages@buf
  7056  0013B4  0100               	movlb	0	; () banked
  7057  0013B6  0100               	movlb	0	; () banked
  7058  0013B8  6FB7               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  7059  0013BA  0100               	movlb	0	; () banked
  7060  0013BC  0EBC               	movlw	low readMessages@buf
  7061  0013BE  0100               	movlb	0	; () banked
  7062  0013C0  0100               	movlb	0	; () banked
  7063  0013C2  6FB6               	movwf	start_i2c_slave_reply@msg& (0+255),b
  7064  0013C4  5050               	movf	_length,w,c
  7065  0013C6  ECCB  F006         	call	_start_i2c_slave_reply
  7066  0013CA  0012               	return	
  7067  0013CC                     __end_of_readMessages:
  7068                           	opt stack 0
  7069                           pclatu	equ	0xFFB
  7070                           pclath	equ	0xFFA
  7071                           tblptru	equ	0xFF8
  7072                           tblptrh	equ	0xFF7
  7073                           tblptrl	equ	0xFF6
  7074                           tablat	equ	0xFF5
  7075                           prodh	equ	0xFF4
  7076                           prodl	equ	0xFF3
  7077                           intcon	equ	0xFF2
  7078                           postinc0	equ	0xFEE
  7079                           fsr0h	equ	0xFEA
  7080                           fsr0l	equ	0xFE9
  7081                           wreg	equ	0xFE8
  7082                           indf1	equ	0xFE7
  7083                           fsr1h	equ	0xFE2
  7084                           fsr1l	equ	0xFE1
  7085                           bsr	equ	0xFE0
  7086                           indf2	equ	0xFDF
  7087                           postinc2	equ	0xFDE
  7088                           postdec2	equ	0xFDD
  7089                           fsr2h	equ	0xFDA
  7090                           fsr2l	equ	0xFD9
  7091                           status	equ	0xFD8
  7092                           
  7093 ;; *************** function _start_i2c_slave_reply *****************
  7094 ;; Defined at:
  7095 ;;		line 30 in file "../src/my_i2c.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;  length          1    wreg     unsigned char 
  7098 ;;  msg             2    0[BANK0 ] PTR unsigned char 
  7099 ;;		 -> readMessages@buf(5), 
  7100 ;; Auto vars:     Size  Location     Type
  7101 ;;  length          1    4[BANK0 ] unsigned char 
  7102 ;; Return value:  Size  Location     Type
  7103 ;;		None               void
  7104 ;; Registers used:
  7105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7106 ;; Tracked objects:
  7107 ;;		On entry : 0/0
  7108 ;;		On exit  : 0/0
  7109 ;;		Unchanged: 0/0
  7110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7111 ;;      Params:         0       2       0       0       0
  7112 ;;      Locals:         0       1       0       0       0
  7113 ;;      Temps:          0       2       0       0       0
  7114 ;;      Totals:         0       5       0       0       0
  7115 ;;Total ram usage:        5 bytes
  7116 ;; Hardware stack levels used:    1
  7117 ;; This function calls:
  7118 ;;		Nothing
  7119 ;; This function is called by:
  7120 ;;		_readMessages
  7121 ;; This function uses a non-reentrant model
  7122 ;;
  7123                           
  7124                           	psect	text44
  7125  000D96                     __ptext44:
  7126                           	opt stack 0
  7127  000D96                     _start_i2c_slave_reply:
  7128                           	opt stack 18
  7129                           
  7130                           ;incstack = 0
  7131                           ;start_i2c_slave_reply@length stored from wreg
  7132  000D96  CFE8 F0BA          	movff	wreg,start_i2c_slave_reply@length
  7133                           
  7134                           ;my_i2c.c: 32: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  7135  000D9A  EE20 F019          	lfsr	2,25
  7136  000D9E  5053               	movf	_ic_ptr,w,c
  7137  000DA0  26D9               	addwf	fsr2l,f,c
  7138  000DA2  5054               	movf	_ic_ptr+1,w,c
  7139  000DA4  22DA               	addwfc	fsr2h,f,c
  7140  000DA6  0E00               	movlw	0
  7141  000DA8  6EDF               	movwf	indf2,c
  7142  000DAA  D035               	goto	i2l3420
  7143  000DAC                     i2l3416:
  7144                           
  7145                           ;my_i2c.c: 33: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  7146  000DAC  EE20 F019          	lfsr	2,25
  7147  000DB0  5053               	movf	_ic_ptr,w,c
  7148  000DB2  26D9               	addwf	fsr2l,f,c
  7149  000DB4  5054               	movf	_ic_ptr+1,w,c
  7150  000DB6  22DA               	addwfc	fsr2h,f,c
  7151  000DB8  50DF               	movf	indf2,w,c
  7152  000DBA  0100               	movlb	0	; () banked
  7153  000DBC  6FB8               	movwf	??_start_i2c_slave_reply& (0+255),b
  7154  000DBE  0100               	movlb	0	; () banked
  7155  000DC0  51B8               	movf	??_start_i2c_slave_reply& (0+255),w,b
  7156  000DC2  0D01               	mullw	1
  7157  000DC4  50F3               	movf	prodl,w,c
  7158  000DC6  0100               	movlb	0	; () banked
  7159  000DC8  0100               	movlb	0	; () banked
  7160  000DCA  25B6               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  7161  000DCC  6ED9               	movwf	fsr2l,c
  7162  000DCE  50F4               	movf	prodh,w,c
  7163  000DD0  0100               	movlb	0	; () banked
  7164  000DD2  0100               	movlb	0	; () banked
  7165  000DD4  21B7               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  7166  000DD6  6EDA               	movwf	fsr2h,c
  7167  000DD8  EE10 F019          	lfsr	1,25
  7168  000DDC  5053               	movf	_ic_ptr,w,c
  7169  000DDE  26E1               	addwf	fsr1l,f,c
  7170  000DE0  5054               	movf	_ic_ptr+1,w,c
  7171  000DE2  22E2               	addwfc	fsr1h,f,c
  7172  000DE4  50E7               	movf	indf1,w,c
  7173  000DE6  0100               	movlb	0	; () banked
  7174  000DE8  6FB9               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  7175  000DEA  0100               	movlb	0	; () banked
  7176  000DEC  51B9               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  7177  000DEE  0D01               	mullw	1
  7178  000DF0  0E0F               	movlw	15
  7179  000DF2  26F3               	addwf	prodl,f,c
  7180  000DF4  0E00               	movlw	0
  7181  000DF6  22F4               	addwfc	prodh,f,c
  7182  000DF8  50F3               	movf	prodl,w,c
  7183  000DFA  2453               	addwf	_ic_ptr,w,c
  7184  000DFC  6EE1               	movwf	fsr1l,c
  7185  000DFE  50F4               	movf	prodh,w,c
  7186  000E00  2054               	addwfc	_ic_ptr+1,w,c
  7187  000E02  6EE2               	movwf	fsr1h,c
  7188  000E04  CFDF FFE7          	movff	indf2,indf1
  7189                           
  7190                           ; BSR set to: 0
  7191  000E08  EE20 F019          	lfsr	2,25
  7192  000E0C  5053               	movf	_ic_ptr,w,c
  7193  000E0E  26D9               	addwf	fsr2l,f,c
  7194  000E10  5054               	movf	_ic_ptr+1,w,c
  7195  000E12  22DA               	addwfc	fsr2h,f,c
  7196  000E14  2ADF               	incf	indf2,f,c
  7197  000E16                     i2l3420:
  7198  000E16  EE20 F019          	lfsr	2,25
  7199  000E1A  5053               	movf	_ic_ptr,w,c
  7200  000E1C  26D9               	addwf	fsr2l,f,c
  7201  000E1E  5054               	movf	_ic_ptr+1,w,c
  7202  000E20  22DA               	addwfc	fsr2h,f,c
  7203  000E22  50DF               	movf	indf2,w,c
  7204  000E24  0100               	movlb	0	; () banked
  7205  000E26  6FB8               	movwf	??_start_i2c_slave_reply& (0+255),b
  7206  000E28  0100               	movlb	0	; () banked
  7207  000E2A  0100               	movlb	0	; () banked
  7208  000E2C  51BA               	movf	start_i2c_slave_reply@length& (0+255),w,b
  7209  000E2E  0100               	movlb	0	; () banked
  7210  000E30  5DB8               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  7211  000E32  A0D8               	btfss	status,0,c
  7212  000E34  D7BB               	goto	i2l3416
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;my_i2c.c: 34: }
  7216                           ;my_i2c.c: 35: ic_ptr->outbuflen = length;
  7217                           
  7218                           ; BSR set to: 0
  7219  000E36  EE20 F019          	lfsr	2,25
  7220  000E3A  5053               	movf	_ic_ptr,w,c
  7221  000E3C  26D9               	addwf	fsr2l,f,c
  7222  000E3E  5054               	movf	_ic_ptr+1,w,c
  7223  000E40  22DA               	addwfc	fsr2h,f,c
  7224  000E42  0100               	movlb	0	; () banked
  7225  000E44  C0BA  FFDF         	movff	start_i2c_slave_reply@length,indf2
  7226                           
  7227                           ;my_i2c.c: 36: ic_ptr->outbufind = 1;
  7228  000E48  EE20 F01A          	lfsr	2,26
  7229  000E4C  5053               	movf	_ic_ptr,w,c
  7230  000E4E  26D9               	addwf	fsr2l,f,c
  7231  000E50  5054               	movf	_ic_ptr+1,w,c
  7232  000E52  22DA               	addwfc	fsr2h,f,c
  7233  000E54  0E01               	movlw	1
  7234  000E56  6EDF               	movwf	indf2,c
  7235                           
  7236                           ;my_i2c.c: 39: SSPBUF = ic_ptr->outbuffer[0];
  7237  000E58  EE20 F00F          	lfsr	2,15
  7238  000E5C  5053               	movf	_ic_ptr,w,c
  7239  000E5E  26D9               	addwf	fsr2l,f,c
  7240  000E60  5054               	movf	_ic_ptr+1,w,c
  7241  000E62  22DA               	addwfc	fsr2h,f,c
  7242  000E64  50DF               	movf	indf2,w,c
  7243  000E66  6EC9               	movwf	4041,c	;volatile
  7244                           
  7245                           ; BSR set to: 0
  7246                           ;my_i2c.c: 42: SSPCON1bits.CKP = 1;
  7247  000E68  88C6               	bsf	4038,4,c	;volatile
  7248                           
  7249                           ; BSR set to: 0
  7250  000E6A  0012               	return	
  7251  000E6C                     __end_of_start_i2c_slave_reply:
  7252                           	opt stack 0
  7253                           pclatu	equ	0xFFB
  7254                           pclath	equ	0xFFA
  7255                           tblptru	equ	0xFF8
  7256                           tblptrh	equ	0xFF7
  7257                           tblptrl	equ	0xFF6
  7258                           tablat	equ	0xFF5
  7259                           prodh	equ	0xFF4
  7260                           prodl	equ	0xFF3
  7261                           intcon	equ	0xFF2
  7262                           postinc0	equ	0xFEE
  7263                           fsr0h	equ	0xFEA
  7264                           fsr0l	equ	0xFE9
  7265                           wreg	equ	0xFE8
  7266                           indf1	equ	0xFE7
  7267                           fsr1h	equ	0xFE2
  7268                           fsr1l	equ	0xFE1
  7269                           bsr	equ	0xFE0
  7270                           indf2	equ	0xFDF
  7271                           postinc2	equ	0xFDE
  7272                           postdec2	equ	0xFDD
  7273                           fsr2h	equ	0xFDA
  7274                           fsr2l	equ	0xFD9
  7275                           status	equ	0xFD8
  7276                           
  7277 ;; *************** function _handle_start *****************
  7278 ;; Defined at:
  7279 ;;		line 48 in file "../src/my_i2c.c"
  7280 ;; Parameters:    Size  Location     Type
  7281 ;;  data_read       1    wreg     unsigned char 
  7282 ;; Auto vars:     Size  Location     Type
  7283 ;;  data_read       1    0[BANK0 ] unsigned char 
  7284 ;; Return value:  Size  Location     Type
  7285 ;;		None               void
  7286 ;; Registers used:
  7287 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7288 ;; Tracked objects:
  7289 ;;		On entry : 0/0
  7290 ;;		On exit  : 0/0
  7291 ;;		Unchanged: 0/0
  7292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7293 ;;      Params:         0       0       0       0       0
  7294 ;;      Locals:         0       1       0       0       0
  7295 ;;      Temps:          0       0       0       0       0
  7296 ;;      Totals:         0       1       0       0       0
  7297 ;;Total ram usage:        1 bytes
  7298 ;; Hardware stack levels used:    1
  7299 ;; This function calls:
  7300 ;;		Nothing
  7301 ;; This function is called by:
  7302 ;;		_i2c_int_handler
  7303 ;; This function uses a non-reentrant model
  7304 ;;
  7305                           
  7306                           	psect	text45
  7307  000F16                     __ptext45:
  7308                           	opt stack 0
  7309  000F16                     _handle_start:
  7310                           	opt stack 19
  7311                           
  7312                           ; BSR set to: 0
  7313                           ;incstack = 0
  7314                           ;handle_start@data_read stored from wreg
  7315  000F16  CFE8 F0B6          	movff	wreg,handle_start@data_read
  7316                           
  7317                           ;my_i2c.c: 49: ic_ptr->event_count = 1;
  7318  000F1A  EE20 F00B          	lfsr	2,11
  7319  000F1E  5053               	movf	_ic_ptr,w,c
  7320  000F20  26D9               	addwf	fsr2l,f,c
  7321  000F22  5054               	movf	_ic_ptr+1,w,c
  7322  000F24  22DA               	addwfc	fsr2h,f,c
  7323  000F26  0E01               	movlw	1
  7324  000F28  6EDF               	movwf	indf2,c
  7325                           
  7326                           ;my_i2c.c: 50: ic_ptr->buflen = 0;
  7327  000F2A  EE20 F00A          	lfsr	2,10
  7328  000F2E  5053               	movf	_ic_ptr,w,c
  7329  000F30  26D9               	addwf	fsr2l,f,c
  7330  000F32  5054               	movf	_ic_ptr+1,w,c
  7331  000F34  22DA               	addwfc	fsr2h,f,c
  7332  000F36  0E00               	movlw	0
  7333  000F38  6EDF               	movwf	indf2,c
  7334                           
  7335                           ;my_i2c.c: 52: if (data_read) {
  7336  000F3A  0100               	movlb	0	; () banked
  7337  000F3C  0100               	movlb	0	; () banked
  7338  000F3E  51B6               	movf	handle_start@data_read& (0+255),w,b
  7339  000F40  B4D8               	btfsc	status,2,c
  7340  000F42  D02E               	goto	i2l3438
  7341                           
  7342                           ; BSR set to: 0
  7343                           ;my_i2c.c: 53: if (SSPSTATbits.D_A == 1) {
  7344  000F44  AAC7               	btfss	4039,5,c	;volatile
  7345  000F46  D018               	goto	i2l256
  7346                           
  7347                           ; BSR set to: 0
  7348                           ;my_i2c.c: 56: ic_ptr->status = 0x5;
  7349  000F48  EE20 F00C          	lfsr	2,12
  7350  000F4C  5053               	movf	_ic_ptr,w,c
  7351  000F4E  26D9               	addwf	fsr2l,f,c
  7352  000F50  5054               	movf	_ic_ptr+1,w,c
  7353  000F52  22DA               	addwfc	fsr2h,f,c
  7354  000F54  0E05               	movlw	5
  7355  000F56  6EDF               	movwf	indf2,c
  7356                           
  7357                           ;my_i2c.c: 57: ic_ptr->error_count++;
  7358  000F58  EE20 F00E          	lfsr	2,14
  7359  000F5C  5053               	movf	_ic_ptr,w,c
  7360  000F5E  26D9               	addwf	fsr2l,f,c
  7361  000F60  5054               	movf	_ic_ptr+1,w,c
  7362  000F62  22DA               	addwfc	fsr2h,f,c
  7363  000F64  2ADF               	incf	indf2,f,c
  7364                           
  7365                           ;my_i2c.c: 58: ic_ptr->error_code = 0x5;
  7366  000F66  EE20 F00D          	lfsr	2,13
  7367  000F6A  5053               	movf	_ic_ptr,w,c
  7368  000F6C  26D9               	addwf	fsr2l,f,c
  7369  000F6E  5054               	movf	_ic_ptr+1,w,c
  7370  000F70  22DA               	addwfc	fsr2h,f,c
  7371  000F72  0E05               	movlw	5
  7372  000F74  6EDF               	movwf	indf2,c
  7373                           
  7374                           ;my_i2c.c: 59: } else {
  7375  000F76  0012               	return	
  7376  000F78                     i2l256:
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;my_i2c.c: 60: if (SSPSTATbits.R_W == 1) {
  7380  000F78  A4C7               	btfss	4039,2,c	;volatile
  7381  000F7A  D009               	goto	i2l3436
  7382                           
  7383                           ; BSR set to: 0
  7384                           ;my_i2c.c: 61: ic_ptr->status = 0x8;
  7385  000F7C  EE20 F00C          	lfsr	2,12
  7386  000F80  5053               	movf	_ic_ptr,w,c
  7387  000F82  26D9               	addwf	fsr2l,f,c
  7388  000F84  5054               	movf	_ic_ptr+1,w,c
  7389  000F86  22DA               	addwfc	fsr2h,f,c
  7390  000F88  0E08               	movlw	8
  7391  000F8A  6EDF               	movwf	indf2,c
  7392                           
  7393                           ;my_i2c.c: 62: } else {
  7394  000F8C  0012               	return	
  7395  000F8E                     i2l3436:
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;my_i2c.c: 63: ic_ptr->status = 0x7;
  7399  000F8E  EE20 F00C          	lfsr	2,12
  7400  000F92  5053               	movf	_ic_ptr,w,c
  7401  000F94  26D9               	addwf	fsr2l,f,c
  7402  000F96  5054               	movf	_ic_ptr+1,w,c
  7403  000F98  22DA               	addwfc	fsr2h,f,c
  7404  000F9A  0E07               	movlw	7
  7405  000F9C  6EDF               	movwf	indf2,c
  7406  000F9E  0012               	return	
  7407  000FA0                     i2l3438:
  7408                           
  7409                           ; BSR set to: 0
  7410                           ;my_i2c.c: 67: ic_ptr->status = 0x6;
  7411  000FA0  EE20 F00C          	lfsr	2,12
  7412  000FA4  5053               	movf	_ic_ptr,w,c
  7413  000FA6  26D9               	addwf	fsr2l,f,c
  7414  000FA8  5054               	movf	_ic_ptr+1,w,c
  7415  000FAA  22DA               	addwfc	fsr2h,f,c
  7416  000FAC  0E06               	movlw	6
  7417  000FAE  6EDF               	movwf	indf2,c
  7418  000FB0  0012               	return	
  7419  000FB2                     __end_of_handle_start:
  7420                           	opt stack 0
  7421                           pclatu	equ	0xFFB
  7422                           pclath	equ	0xFFA
  7423                           tblptru	equ	0xFF8
  7424                           tblptrh	equ	0xFF7
  7425                           tblptrl	equ	0xFF6
  7426                           tablat	equ	0xFF5
  7427                           prodh	equ	0xFF4
  7428                           prodl	equ	0xFF3
  7429                           intcon	equ	0xFF2
  7430                           postinc0	equ	0xFEE
  7431                           fsr0h	equ	0xFEA
  7432                           fsr0l	equ	0xFE9
  7433                           wreg	equ	0xFE8
  7434                           indf1	equ	0xFE7
  7435                           fsr1h	equ	0xFE2
  7436                           fsr1l	equ	0xFE1
  7437                           bsr	equ	0xFE0
  7438                           indf2	equ	0xFDF
  7439                           postinc2	equ	0xFDE
  7440                           postdec2	equ	0xFDD
  7441                           fsr2h	equ	0xFDA
  7442                           fsr2l	equ	0xFD9
  7443                           status	equ	0xFD8
  7444                           
  7445 ;; *************** function _ToMainHigh_sendmsg *****************
  7446 ;; Defined at:
  7447 ;;		line 126 in file "../src/messages.c"
  7448 ;; Parameters:    Size  Location     Type
  7449 ;;  length          1    wreg     unsigned char 
  7450 ;;  msgtype         1   22[BANK0 ] unsigned char 
  7451 ;;  data            2   23[BANK0 ] PTR void 
  7452 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), main@ic(28), 
  7453 ;; Auto vars:     Size  Location     Type
  7454 ;;  length          1   25[BANK0 ] unsigned char 
  7455 ;; Return value:  Size  Location     Type
  7456 ;;                  1    wreg      char 
  7457 ;; Registers used:
  7458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7459 ;; Tracked objects:
  7460 ;;		On entry : 0/0
  7461 ;;		On exit  : 0/0
  7462 ;;		Unchanged: 0/0
  7463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7464 ;;      Params:         0       3       0       0       0
  7465 ;;      Locals:         0       1       0       0       0
  7466 ;;      Temps:          0       0       0       0       0
  7467 ;;      Totals:         0       4       0       0       0
  7468 ;;Total ram usage:        4 bytes
  7469 ;; Hardware stack levels used:    1
  7470 ;; Hardware stack levels required when called:    2
  7471 ;; This function calls:
  7472 ;;		i2_send_msg
  7473 ;; This function is called by:
  7474 ;;		_i2c_int_handler
  7475 ;;		_timer0_int_handler
  7476 ;; This function uses a non-reentrant model
  7477 ;;
  7478                           
  7479                           	psect	text46
  7480  0018D6                     __ptext46:
  7481                           	opt stack 0
  7482  0018D6                     _ToMainHigh_sendmsg:
  7483                           	opt stack 17
  7484                           
  7485                           ; BSR set to: 0
  7486                           ;incstack = 0
  7487                           ;ToMainHigh_sendmsg@length stored from wreg
  7488  0018D6  CFE8 F0CF          	movff	wreg,ToMainHigh_sendmsg@length
  7489                           
  7490                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7491                           ;	Return value of _ToMainHigh_sendmsg is never used
  7492  0018DA  0101               	movlb	1	; () banked
  7493  0018DC  0E01               	movlw	high _ToMainHigh_MQ
  7494  0018DE  0100               	movlb	0	; () banked
  7495  0018E0  0100               	movlb	0	; () banked
  7496  0018E2  6FC1               	movwf	(i2send_msg@qptr+1)& (0+255),b
  7497  0018E4  0101               	movlb	1	; () banked
  7498  0018E6  0E6E               	movlw	low _ToMainHigh_MQ
  7499  0018E8  0100               	movlb	0	; () banked
  7500  0018EA  0100               	movlb	0	; () banked
  7501  0018EC  6FC0               	movwf	i2send_msg@qptr& (0+255),b
  7502  0018EE  C0CF  F0C2         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  7503  0018F2  C0CC  F0C3         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7504  0018F6  0100               	movlb	0	; () banked
  7505  0018F8  0100               	movlb	0	; () banked
  7506  0018FA  C0CE  F0C5         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7507  0018FE  0100               	movlb	0	; () banked
  7508  001900  0100               	movlb	0	; () banked
  7509  001902  C0CD  F0C4         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  7510  001906  ECCD  F005         	call	i2_send_msg	;wreg free
  7511  00190A  0012               	return	
  7512  00190C                     __end_of_ToMainHigh_sendmsg:
  7513                           	opt stack 0
  7514                           pclatu	equ	0xFFB
  7515                           pclath	equ	0xFFA
  7516                           tblptru	equ	0xFF8
  7517                           tblptrh	equ	0xFF7
  7518                           tblptrl	equ	0xFF6
  7519                           tablat	equ	0xFF5
  7520                           prodh	equ	0xFF4
  7521                           prodl	equ	0xFF3
  7522                           intcon	equ	0xFF2
  7523                           postinc0	equ	0xFEE
  7524                           fsr0h	equ	0xFEA
  7525                           fsr0l	equ	0xFE9
  7526                           wreg	equ	0xFE8
  7527                           indf1	equ	0xFE7
  7528                           fsr1h	equ	0xFE2
  7529                           fsr1l	equ	0xFE1
  7530                           bsr	equ	0xFE0
  7531                           indf2	equ	0xFDF
  7532                           postinc2	equ	0xFDE
  7533                           postdec2	equ	0xFDD
  7534                           fsr2h	equ	0xFDA
  7535                           fsr2l	equ	0xFD9
  7536                           status	equ	0xFD8
  7537                           
  7538 ;; *************** function i2_send_msg *****************
  7539 ;; Defined at:
  7540 ;;		line 24 in file "../src/messages.c"
  7541 ;; Parameters:    Size  Location     Type
  7542 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  7543 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7544 ;;  length          1   12[BANK0 ] unsigned char 
  7545 ;;  msgtype         1   13[BANK0 ] unsigned char 
  7546 ;;  data            2   14[BANK0 ] PTR void 
  7547 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), main@t1thread_data(2), 
  7548 ;;		 -> main@ic(28), 
  7549 ;; Auto vars:     Size  Location     Type
  7550 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  7551 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7552 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7553 ;;  send_msg        2   17[BANK0 ] unsigned int 
  7554 ;;  send_msg        1   19[BANK0 ] unsigned char 
  7555 ;; Return value:  Size  Location     Type
  7556 ;;                  1    wreg      char 
  7557 ;; Registers used:
  7558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7559 ;; Tracked objects:
  7560 ;;		On entry : 0/0
  7561 ;;		On exit  : 0/0
  7562 ;;		Unchanged: 0/0
  7563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7564 ;;      Params:         0       6       0       0       0
  7565 ;;      Locals:         0       5       0       0       0
  7566 ;;      Temps:          0       1       0       0       0
  7567 ;;      Totals:         0      12       0       0       0
  7568 ;;Total ram usage:       12 bytes
  7569 ;; Hardware stack levels used:    1
  7570 ;; Hardware stack levels required when called:    1
  7571 ;; This function calls:
  7572 ;;		i2_memcpy
  7573 ;; This function is called by:
  7574 ;;		_ToMainHigh_sendmsg
  7575 ;; This function uses a non-reentrant model
  7576 ;;
  7577                           
  7578                           	psect	text47
  7579  000B9A                     __ptext47:
  7580                           	opt stack 0
  7581  000B9A                     i2_send_msg:
  7582                           	opt stack 17
  7583                           
  7584                           ;messages.c: 25: unsigned char slot;
  7585                           ;messages.c: 27: msg *qmsg;
  7586                           ;messages.c: 28: size_t tlength = length;
  7587                           
  7588                           ;incstack = 0
  7589  000B9A  0100               	movlb	0	; () banked
  7590  000B9C  0100               	movlb	0	; () banked
  7591  000B9E  C0C2  F0C7         	movff	i2send_msg@length,i2send_msg@tlength
  7592  000BA2  0100               	movlb	0	; () banked
  7593  000BA4  0100               	movlb	0	; () banked
  7594  000BA6  6BC8               	clrf	(i2send_msg@tlength+1)& (0+255),b
  7595                           
  7596                           ; BSR set to: 0
  7597                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7598  000BA8  0100               	movlb	0	; () banked
  7599  000BAA  EE20 F034          	lfsr	2,52
  7600  000BAE  0100               	movlb	0	; () banked
  7601  000BB0  51C0               	movf	i2send_msg@qptr& (0+255),w,b
  7602  000BB2  26D9               	addwf	fsr2l,f,c
  7603  000BB4  0100               	movlb	0	; () banked
  7604  000BB6  51C1               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7605  000BB8  22DA               	addwfc	fsr2h,f,c
  7606  000BBA  50DF               	movf	indf2,w,c
  7607  000BBC  0100               	movlb	0	; () banked
  7608  000BBE  0100               	movlb	0	; () banked
  7609  000BC0  6FC9               	movwf	i2send_msg@slot& (0+255),b
  7610                           
  7611                           ; BSR set to: 0
  7612                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7613  000BC2  0100               	movlb	0	; () banked
  7614  000BC4  0100               	movlb	0	; () banked
  7615  000BC6  51C9               	movf	i2send_msg@slot& (0+255),w,b
  7616  000BC8  0D0D               	mullw	13
  7617  000BCA  50F3               	movf	prodl,w,c
  7618  000BCC  0100               	movlb	0	; () banked
  7619  000BCE  0100               	movlb	0	; () banked
  7620  000BD0  25C0               	addwf	i2send_msg@qptr& (0+255),w,b
  7621  000BD2  0100               	movlb	0	; () banked
  7622  000BD4  0100               	movlb	0	; () banked
  7623  000BD6  6FCA               	movwf	i2send_msg@qmsg& (0+255),b
  7624  000BD8  50F4               	movf	prodh,w,c
  7625  000BDA  0100               	movlb	0	; () banked
  7626  000BDC  0100               	movlb	0	; () banked
  7627  000BDE  21C1               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  7628  000BE0  0100               	movlb	0	; () banked
  7629  000BE2  6FCB               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;messages.c: 41: if (qmsg->full != 0) {
  7633  000BE4  C0CA  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7634  000BE8  C0CB  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7635  000BEC  50DF               	movf	indf2,w,c
  7636  000BEE  B4D8               	btfsc	status,2,c
  7637  000BF0  D002               	goto	i2l3520
  7638                           
  7639                           ; BSR set to: 0
  7640                           ;messages.c: 42: return (-1);
  7641  000BF2  0EFF               	movlw	255
  7642  000BF4  0012               	return	
  7643  000BF6                     i2l3520:
  7644                           
  7645                           ; BSR set to: 0
  7646                           ;messages.c: 43: }
  7647                           ;messages.c: 46: qmsg->length = length;
  7648  000BF6  0100               	movlb	0	; () banked
  7649  000BF8  EE20 F001          	lfsr	2,1
  7650  000BFC  0100               	movlb	0	; () banked
  7651  000BFE  51CA               	movf	i2send_msg@qmsg& (0+255),w,b
  7652  000C00  26D9               	addwf	fsr2l,f,c
  7653  000C02  0100               	movlb	0	; () banked
  7654  000C04  51CB               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7655  000C06  22DA               	addwfc	fsr2h,f,c
  7656  000C08  0100               	movlb	0	; () banked
  7657  000C0A  C0C2  FFDF         	movff	i2send_msg@length,indf2
  7658                           
  7659                           ;messages.c: 47: qmsg->msgtype = msgtype;
  7660  000C0E  0100               	movlb	0	; () banked
  7661  000C10  EE20 F002          	lfsr	2,2
  7662  000C14  0100               	movlb	0	; () banked
  7663  000C16  51CA               	movf	i2send_msg@qmsg& (0+255),w,b
  7664  000C18  26D9               	addwf	fsr2l,f,c
  7665  000C1A  0100               	movlb	0	; () banked
  7666  000C1C  51CB               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7667  000C1E  22DA               	addwfc	fsr2h,f,c
  7668  000C20  0100               	movlb	0	; () banked
  7669  000C22  C0C3  FFDF         	movff	i2send_msg@msgtype,indf2
  7670                           
  7671                           ; BSR set to: 0
  7672                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  7673  000C26  0E03               	movlw	3
  7674  000C28  0100               	movlb	0	; () banked
  7675  000C2A  0100               	movlb	0	; () banked
  7676  000C2C  25CA               	addwf	i2send_msg@qmsg& (0+255),w,b
  7677  000C2E  0100               	movlb	0	; () banked
  7678  000C30  0100               	movlb	0	; () banked
  7679  000C32  6FB6               	movwf	i2memcpy@d1& (0+255),b
  7680  000C34  0E00               	movlw	0
  7681  000C36  0100               	movlb	0	; () banked
  7682  000C38  0100               	movlb	0	; () banked
  7683  000C3A  21CB               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  7684  000C3C  0100               	movlb	0	; () banked
  7685  000C3E  6FB7               	movwf	(i2memcpy@d1+1)& (0+255),b
  7686  000C40  0100               	movlb	0	; () banked
  7687  000C42  0100               	movlb	0	; () banked
  7688  000C44  C0C5  F0B9         	movff	i2send_msg@data+1,i2memcpy@s1+1
  7689  000C48  0100               	movlb	0	; () banked
  7690  000C4A  0100               	movlb	0	; () banked
  7691  000C4C  C0C4  F0B8         	movff	i2send_msg@data,i2memcpy@s1
  7692  000C50  C0C7  F0BA         	movff	i2send_msg@tlength,i2memcpy@n
  7693  000C54  C0C8  F0BB         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  7694  000C58  ECBA  F00A         	call	i2_memcpy	;wreg free
  7695                           
  7696                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  7697  000C5C  0100               	movlb	0	; () banked
  7698  000C5E  EE20 F034          	lfsr	2,52
  7699  000C62  0100               	movlb	0	; () banked
  7700  000C64  51C0               	movf	i2send_msg@qptr& (0+255),w,b
  7701  000C66  26D9               	addwf	fsr2l,f,c
  7702  000C68  0100               	movlb	0	; () banked
  7703  000C6A  51C1               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7704  000C6C  22DA               	addwfc	fsr2h,f,c
  7705  000C6E  0100               	movlb	0	; () banked
  7706  000C70  EE10 F034          	lfsr	1,52
  7707  000C74  0100               	movlb	0	; () banked
  7708  000C76  51C0               	movf	i2send_msg@qptr& (0+255),w,b
  7709  000C78  26E1               	addwf	fsr1l,f,c
  7710  000C7A  0100               	movlb	0	; () banked
  7711  000C7C  51C1               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7712  000C7E  22E2               	addwfc	fsr1h,f,c
  7713  000C80  50E7               	movf	indf1,w,c
  7714  000C82  0100               	movlb	0	; () banked
  7715  000C84  6FC6               	movwf	??i2_send_msg& (0+255),b
  7716  000C86  0100               	movlb	0	; () banked
  7717  000C88  29C6               	incf	??i2_send_msg& (0+255),w,b
  7718  000C8A  0B03               	andlw	3
  7719  000C8C  6EDF               	movwf	indf2,c
  7720                           
  7721                           ; BSR set to: 0
  7722                           ;messages.c: 59: qmsg->full = 1;
  7723  000C8E  C0CA  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7724  000C92  C0CB  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7725  000C96  0E01               	movlw	1
  7726  000C98  6EDF               	movwf	indf2,c
  7727                           
  7728                           ; BSR set to: 0
  7729                           ;messages.c: 60: return (1);
  7730  000C9A  0E01               	movlw	1
  7731  000C9C  0012               	return	
  7732  000C9E                     __end_ofi2_send_msg:
  7733                           	opt stack 0
  7734                           pclatu	equ	0xFFB
  7735                           pclath	equ	0xFFA
  7736                           tblptru	equ	0xFF8
  7737                           tblptrh	equ	0xFF7
  7738                           tblptrl	equ	0xFF6
  7739                           tablat	equ	0xFF5
  7740                           prodh	equ	0xFF4
  7741                           prodl	equ	0xFF3
  7742                           intcon	equ	0xFF2
  7743                           postinc0	equ	0xFEE
  7744                           fsr0h	equ	0xFEA
  7745                           fsr0l	equ	0xFE9
  7746                           wreg	equ	0xFE8
  7747                           indf1	equ	0xFE7
  7748                           fsr1h	equ	0xFE2
  7749                           fsr1l	equ	0xFE1
  7750                           bsr	equ	0xFE0
  7751                           indf2	equ	0xFDF
  7752                           postinc2	equ	0xFDE
  7753                           postdec2	equ	0xFDD
  7754                           fsr2h	equ	0xFDA
  7755                           fsr2l	equ	0xFD9
  7756                           status	equ	0xFD8
  7757                           
  7758 ;; *************** function i2_memcpy *****************
  7759 ;; Defined at:
  7760 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;  d1              2    0[BANK0 ] PTR void 
  7763 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7764 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7765 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  7766 ;;  s1              2    2[BANK0 ] PTR const void 
  7767 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7768 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7769 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  7770 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  7771 ;;		 -> main@ic(28), 
  7772 ;;  n               2    4[BANK0 ] unsigned int 
  7773 ;; Auto vars:     Size  Location     Type
  7774 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  7775 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7776 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7777 ;;		 -> NULL(0), timer0_int_handler@val(2), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  7778 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), 
  7779 ;;		 -> main@ic(28), 
  7780 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  7781 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7782 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7783 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  7784 ;; Return value:  Size  Location     Type
  7785 ;;                  2    0[BANK0 ] PTR void 
  7786 ;; Registers used:
  7787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7788 ;; Tracked objects:
  7789 ;;		On entry : 0/0
  7790 ;;		On exit  : 0/0
  7791 ;;		Unchanged: 0/0
  7792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7793 ;;      Params:         0       6       0       0       0
  7794 ;;      Locals:         0       4       0       0       0
  7795 ;;      Temps:          0       0       0       0       0
  7796 ;;      Totals:         0      10       0       0       0
  7797 ;;Total ram usage:       10 bytes
  7798 ;; Hardware stack levels used:    1
  7799 ;; This function calls:
  7800 ;;		Nothing
  7801 ;; This function is called by:
  7802 ;;		i2_send_msg
  7803 ;;		i2_recv_msg
  7804 ;; This function uses a non-reentrant model
  7805 ;;
  7806                           
  7807                           	psect	text48
  7808  001574                     __ptext48:
  7809                           	opt stack 0
  7810  001574                     i2_memcpy:
  7811                           	opt stack 17
  7812                           
  7813                           ; BSR set to: 0
  7814                           ;incstack = 0
  7815  001574  0100               	movlb	0	; () banked
  7816  001576  0100               	movlb	0	; () banked
  7817  001578  C0B9  F0BF         	movff	i2memcpy@s1+1,i2memcpy@s+1
  7818  00157C  0100               	movlb	0	; () banked
  7819  00157E  0100               	movlb	0	; () banked
  7820  001580  C0B8  F0BE         	movff	i2memcpy@s1,i2memcpy@s
  7821  001584  0100               	movlb	0	; () banked
  7822  001586  0100               	movlb	0	; () banked
  7823  001588  C0B7  F0BD         	movff	i2memcpy@d1+1,i2memcpy@d+1
  7824  00158C  0100               	movlb	0	; () banked
  7825  00158E  0100               	movlb	0	; () banked
  7826  001590  C0B6  F0BC         	movff	i2memcpy@d1,i2memcpy@d
  7827  001594  D012               	goto	i2l3586
  7828  001596                     i2l3580:
  7829                           
  7830                           ; BSR set to: 0
  7831  001596  C0BE  FFD9         	movff	i2memcpy@s,fsr2l
  7832  00159A  C0BF  FFDA         	movff	i2memcpy@s+1,fsr2h
  7833  00159E  C0BC  FFE1         	movff	i2memcpy@d,fsr1l
  7834  0015A2  C0BD  FFE2         	movff	i2memcpy@d+1,fsr1h
  7835  0015A6  CFDF FFE7          	movff	indf2,indf1
  7836                           
  7837                           ; BSR set to: 0
  7838  0015AA  0100               	movlb	0	; () banked
  7839  0015AC  0100               	movlb	0	; () banked
  7840  0015AE  4BBE               	infsnz	i2memcpy@s& (0+255),f,b
  7841  0015B0  2BBF               	incf	(i2memcpy@s+1)& (0+255),f,b
  7842                           
  7843                           ; BSR set to: 0
  7844  0015B2  0100               	movlb	0	; () banked
  7845  0015B4  0100               	movlb	0	; () banked
  7846  0015B6  4BBC               	infsnz	i2memcpy@d& (0+255),f,b
  7847  0015B8  2BBD               	incf	(i2memcpy@d+1)& (0+255),f,b
  7848  0015BA                     i2l3586:
  7849                           
  7850                           ; BSR set to: 0
  7851  0015BA  0100               	movlb	0	; () banked
  7852  0015BC  0100               	movlb	0	; () banked
  7853  0015BE  07BA               	decf	i2memcpy@n& (0+255),f,b
  7854  0015C0  A0D8               	btfss	status,0,c
  7855  0015C2  07BB               	decf	(i2memcpy@n+1)& (0+255),f,b
  7856  0015C4  0100               	movlb	0	; () banked
  7857  0015C6  29BA               	incf	i2memcpy@n& (0+255),w,b
  7858  0015C8  B4D8               	btfsc	status,2,c
  7859  0015CA  29BB               	incf	(i2memcpy@n+1)& (0+255),w,b
  7860  0015CC  B4D8               	btfsc	status,2,c
  7861                           
  7862                           ; BSR set to: 0
  7863                           
  7864                           ; BSR set to: 0
  7865                           ;	Return value of i2_memcpy is never used
  7866  0015CE  0012               	return	
  7867  0015D0  D7E2               	goto	i2l3580
  7868  0015D2                     __end_ofi2_memcpy:
  7869                           	opt stack 0
  7870                           pclatu	equ	0xFFB
  7871                           pclath	equ	0xFFA
  7872                           tblptru	equ	0xFF8
  7873                           tblptrh	equ	0xFF7
  7874                           tblptrl	equ	0xFF6
  7875                           tablat	equ	0xFF5
  7876                           prodh	equ	0xFF4
  7877                           prodl	equ	0xFF3
  7878                           intcon	equ	0xFF2
  7879                           postinc0	equ	0xFEE
  7880                           fsr0h	equ	0xFEA
  7881                           fsr0l	equ	0xFE9
  7882                           wreg	equ	0xFE8
  7883                           indf1	equ	0xFE7
  7884                           fsr1h	equ	0xFE2
  7885                           fsr1l	equ	0xFE1
  7886                           bsr	equ	0xFE0
  7887                           indf2	equ	0xFDF
  7888                           postinc2	equ	0xFDE
  7889                           postdec2	equ	0xFDD
  7890                           fsr2h	equ	0xFDA
  7891                           fsr2l	equ	0xFD9
  7892                           status	equ	0xFD8
  7893                           
  7894 ;; *************** function _SleepIfOkay *****************
  7895 ;; Defined at:
  7896 ;;		line 228 in file "../src/messages.c"
  7897 ;; Parameters:    Size  Location     Type
  7898 ;;		None
  7899 ;; Auto vars:     Size  Location     Type
  7900 ;;		None
  7901 ;; Return value:  Size  Location     Type
  7902 ;;		None               void
  7903 ;; Registers used:
  7904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7905 ;; Tracked objects:
  7906 ;;		On entry : 0/0
  7907 ;;		On exit  : 0/0
  7908 ;;		Unchanged: 0/0
  7909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7910 ;;      Params:         0       0       0       0       0
  7911 ;;      Locals:         0       0       0       0       0
  7912 ;;      Temps:          0       0       0       0       0
  7913 ;;      Totals:         0       0       0       0       0
  7914 ;;Total ram usage:        0 bytes
  7915 ;; Hardware stack levels used:    1
  7916 ;; Hardware stack levels required when called:    2
  7917 ;; This function calls:
  7918 ;;		_enter_sleep_mode
  7919 ;;		i2_check_msg
  7920 ;;		i2_in_high_int
  7921 ;;		i2_in_low_int
  7922 ;; This function is called by:
  7923 ;;		_InterruptHandlerHigh
  7924 ;; This function uses a non-reentrant model
  7925 ;;
  7926                           
  7927                           	psect	text49
  7928  0014AC                     __ptext49:
  7929                           	opt stack 0
  7930  0014AC                     _SleepIfOkay:
  7931                           	opt stack 18
  7932                           
  7933                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  7934                           
  7935                           ; BSR set to: 0
  7936                           ;incstack = 0
  7937  0014AC  664D               	tstfsz	_MQ_Main_Willing_to_block,c
  7938  0014AE  D001               	goto	i2l3046
  7939  0014B0  0012               	return	
  7940  0014B2                     i2l3046:
  7941                           
  7942                           ;messages.c: 232: }
  7943                           ;messages.c: 235: if (in_low_int()) {
  7944  0014B2  EC33  F00B         	call	i2_in_low_int	;wreg free
  7945  0014B6  0100               	movlb	0	; () banked
  7946  0014B8  0100               	movlb	0	; () banked
  7947  0014BA  51B9               	movf	(?i2_in_low_int+1)& (0+255),w,b
  7948  0014BC  0100               	movlb	0	; () banked
  7949  0014BE  11B8               	iorwf	?i2_in_low_int& (0+255),w,b
  7950  0014C0  A4D8               	btfss	status,2,c
  7951  0014C2  0012               	return	
  7952                           
  7953                           ; BSR set to: 0
  7954                           ;messages.c: 237: }
  7955                           ;messages.c: 240: if (!in_high_int()) {
  7956                           
  7957                           ; BSR set to: 0
  7958                           
  7959                           ; BSR set to: 0
  7960                           ;messages.c: 236: return;
  7961  0014C4  EC6A  F00D         	call	i2_in_high_int	;wreg free
  7962  0014C8  0100               	movlb	0	; () banked
  7963  0014CA  0100               	movlb	0	; () banked
  7964  0014CC  51B7               	movf	(?i2_in_high_int+1)& (0+255),w,b
  7965  0014CE  0100               	movlb	0	; () banked
  7966  0014D0  11B6               	iorwf	?i2_in_high_int& (0+255),w,b
  7967  0014D2  B4D8               	btfsc	status,2,c
  7968  0014D4  0012               	return	
  7969                           
  7970                           ; BSR set to: 0
  7971                           ;messages.c: 242: }
  7972                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  7973                           
  7974                           ; BSR set to: 0
  7975                           
  7976                           ; BSR set to: 0
  7977                           ;messages.c: 241: return;
  7978  0014D6  0101               	movlb	1	; () banked
  7979  0014D8  0E01               	movlw	high _ToMainHigh_MQ
  7980  0014DA  0100               	movlb	0	; () banked
  7981  0014DC  0100               	movlb	0	; () banked
  7982  0014DE  6FB7               	movwf	(i2check_msg@qptr+1)& (0+255),b
  7983  0014E0  0101               	movlb	1	; () banked
  7984  0014E2  0E6E               	movlw	low _ToMainHigh_MQ
  7985  0014E4  0100               	movlb	0	; () banked
  7986  0014E6  0100               	movlb	0	; () banked
  7987  0014E8  6FB6               	movwf	i2check_msg@qptr& (0+255),b
  7988  0014EA  EC86  F00C         	call	i2_check_msg	;wreg free
  7989  0014EE  0900               	iorlw	0
  7990  0014F0  A4D8               	btfss	status,2,c
  7991  0014F2  0012               	return	
  7992                           
  7993                           ;messages.c: 249: }
  7994                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  7995                           
  7996                           ;messages.c: 248: return;
  7997  0014F4  0100               	movlb	0	; () banked
  7998  0014F6  0E00               	movlw	high _ToMainLow_MQ
  7999  0014F8  0100               	movlb	0	; () banked
  8000  0014FA  0100               	movlb	0	; () banked
  8001  0014FC  6FB7               	movwf	(i2check_msg@qptr+1)& (0+255),b
  8002  0014FE  0100               	movlb	0	; () banked
  8003  001500  0E80               	movlw	low _ToMainLow_MQ
  8004  001502  0100               	movlb	0	; () banked
  8005  001504  0100               	movlb	0	; () banked
  8006  001506  6FB6               	movwf	i2check_msg@qptr& (0+255),b
  8007  001508  EC86  F00C         	call	i2_check_msg	;wreg free
  8008  00150C  0900               	iorlw	0
  8009  00150E  B4D8               	btfsc	status,2,c
  8010                           
  8011                           ;messages.c: 252: }
  8012                           ;messages.c: 253: enter_sleep_mode();
  8013                           
  8014                           ;messages.c: 251: return;
  8015  001510  EC77  F00D         	call	_enter_sleep_mode	;wreg free
  8016  001514  0012               	return	
  8017  001516                     __end_of_SleepIfOkay:
  8018                           	opt stack 0
  8019                           pclatu	equ	0xFFB
  8020                           pclath	equ	0xFFA
  8021                           tblptru	equ	0xFF8
  8022                           tblptrh	equ	0xFF7
  8023                           tblptrl	equ	0xFF6
  8024                           tablat	equ	0xFF5
  8025                           prodh	equ	0xFF4
  8026                           prodl	equ	0xFF3
  8027                           intcon	equ	0xFF2
  8028                           postinc0	equ	0xFEE
  8029                           fsr0h	equ	0xFEA
  8030                           fsr0l	equ	0xFE9
  8031                           wreg	equ	0xFE8
  8032                           indf1	equ	0xFE7
  8033                           fsr1h	equ	0xFE2
  8034                           fsr1l	equ	0xFE1
  8035                           bsr	equ	0xFE0
  8036                           indf2	equ	0xFDF
  8037                           postinc2	equ	0xFDE
  8038                           postdec2	equ	0xFDD
  8039                           fsr2h	equ	0xFDA
  8040                           fsr2l	equ	0xFD9
  8041                           status	equ	0xFD8
  8042                           
  8043 ;; *************** function i2_in_low_int *****************
  8044 ;; Defined at:
  8045 ;;		line 32 in file "../src/interrupts.c"
  8046 ;; Parameters:    Size  Location     Type
  8047 ;;		None
  8048 ;; Auto vars:     Size  Location     Type
  8049 ;;		None
  8050 ;; Return value:  Size  Location     Type
  8051 ;;                  2    2[BANK0 ] int 
  8052 ;; Registers used:
  8053 ;;		wreg, status,2, status,0, cstack
  8054 ;; Tracked objects:
  8055 ;;		On entry : 0/0
  8056 ;;		On exit  : 0/0
  8057 ;;		Unchanged: 0/0
  8058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8059 ;;      Params:         0       2       0       0       0
  8060 ;;      Locals:         0       0       0       0       0
  8061 ;;      Temps:          0       0       0       0       0
  8062 ;;      Totals:         0       2       0       0       0
  8063 ;;Total ram usage:        2 bytes
  8064 ;; Hardware stack levels used:    1
  8065 ;; Hardware stack levels required when called:    1
  8066 ;; This function calls:
  8067 ;;		i2_in_high_int
  8068 ;; This function is called by:
  8069 ;;		_SleepIfOkay
  8070 ;; This function uses a non-reentrant model
  8071 ;;
  8072                           
  8073                           	psect	text50
  8074  001666                     __ptext50:
  8075                           	opt stack 0
  8076  001666                     i2_in_low_int:
  8077                           	opt stack 18
  8078                           
  8079                           ;interrupts.c: 34: if (INTCONbits.GIEL == 1) {
  8080                           
  8081                           ;incstack = 0
  8082  001666  ACF2               	btfss	intcon,6,c	;volatile
  8083  001668  D008               	goto	i2l3496
  8084                           
  8085                           ;interrupts.c: 35: return (0);
  8086  00166A  0E00               	movlw	0
  8087  00166C  0100               	movlb	0	; () banked
  8088  00166E  0100               	movlb	0	; () banked
  8089  001670  6FB9               	movwf	(?i2_in_low_int+1)& (0+255),b
  8090  001672  0E00               	movlw	0
  8091  001674  0100               	movlb	0	; () banked
  8092  001676  6FB8               	movwf	?i2_in_low_int& (0+255),b
  8093  001678  0012               	return	
  8094  00167A                     i2l3496:
  8095  00167A  EC6A  F00D         	call	i2_in_high_int	;wreg free
  8096  00167E  0100               	movlb	0	; () banked
  8097  001680  0100               	movlb	0	; () banked
  8098  001682  51B7               	movf	(?i2_in_high_int+1)& (0+255),w,b
  8099  001684  0100               	movlb	0	; () banked
  8100  001686  11B6               	iorwf	?i2_in_high_int& (0+255),w,b
  8101  001688  B4D8               	btfsc	status,2,c
  8102  00168A  D008               	goto	i2l3504
  8103                           
  8104                           ; BSR set to: 0
  8105                           ;interrupts.c: 37: return (0);
  8106  00168C  0E00               	movlw	0
  8107  00168E  0100               	movlb	0	; () banked
  8108  001690  0100               	movlb	0	; () banked
  8109  001692  6FB9               	movwf	(?i2_in_low_int+1)& (0+255),b
  8110  001694  0E00               	movlw	0
  8111  001696  0100               	movlb	0	; () banked
  8112  001698  6FB8               	movwf	?i2_in_low_int& (0+255),b
  8113  00169A  0012               	return	
  8114  00169C                     i2l3504:
  8115                           
  8116                           ; BSR set to: 0
  8117                           ;interrupts.c: 39: return (1);
  8118  00169C  0E00               	movlw	0
  8119  00169E  0100               	movlb	0	; () banked
  8120  0016A0  0100               	movlb	0	; () banked
  8121  0016A2  6FB9               	movwf	(?i2_in_low_int+1)& (0+255),b
  8122  0016A4  0E01               	movlw	1
  8123  0016A6  0100               	movlb	0	; () banked
  8124  0016A8  6FB8               	movwf	?i2_in_low_int& (0+255),b
  8125  0016AA  0012               	return	
  8126  0016AC                     __end_ofi2_in_low_int:
  8127                           	opt stack 0
  8128                           pclatu	equ	0xFFB
  8129                           pclath	equ	0xFFA
  8130                           tblptru	equ	0xFF8
  8131                           tblptrh	equ	0xFF7
  8132                           tblptrl	equ	0xFF6
  8133                           tablat	equ	0xFF5
  8134                           prodh	equ	0xFF4
  8135                           prodl	equ	0xFF3
  8136                           intcon	equ	0xFF2
  8137                           postinc0	equ	0xFEE
  8138                           fsr0h	equ	0xFEA
  8139                           fsr0l	equ	0xFE9
  8140                           wreg	equ	0xFE8
  8141                           indf1	equ	0xFE7
  8142                           fsr1h	equ	0xFE2
  8143                           fsr1l	equ	0xFE1
  8144                           bsr	equ	0xFE0
  8145                           indf2	equ	0xFDF
  8146                           postinc2	equ	0xFDE
  8147                           postdec2	equ	0xFDD
  8148                           fsr2h	equ	0xFDA
  8149                           fsr2l	equ	0xFD9
  8150                           status	equ	0xFD8
  8151                           
  8152 ;; *************** function i2_in_high_int *****************
  8153 ;; Defined at:
  8154 ;;		line 23 in file "../src/interrupts.c"
  8155 ;; Parameters:    Size  Location     Type
  8156 ;;		None
  8157 ;; Auto vars:     Size  Location     Type
  8158 ;;		None
  8159 ;; Return value:  Size  Location     Type
  8160 ;;                  2    0[BANK0 ] int 
  8161 ;; Registers used:
  8162 ;;		wreg, status,2
  8163 ;; Tracked objects:
  8164 ;;		On entry : 0/0
  8165 ;;		On exit  : 0/0
  8166 ;;		Unchanged: 0/0
  8167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8168 ;;      Params:         0       2       0       0       0
  8169 ;;      Locals:         0       0       0       0       0
  8170 ;;      Temps:          0       0       0       0       0
  8171 ;;      Totals:         0       2       0       0       0
  8172 ;;Total ram usage:        2 bytes
  8173 ;; Hardware stack levels used:    1
  8174 ;; This function calls:
  8175 ;;		Nothing
  8176 ;; This function is called by:
  8177 ;;		_SleepIfOkay
  8178 ;;		i2_in_low_int
  8179 ;; This function uses a non-reentrant model
  8180 ;;
  8181                           
  8182                           	psect	text51
  8183  001AD4                     __ptext51:
  8184                           	opt stack 0
  8185  001AD4                     i2_in_high_int:
  8186                           	opt stack 18
  8187                           
  8188                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  8189                           
  8190                           ; BSR set to: 0
  8191                           ;incstack = 0
  8192  001AD4  0E00               	movlw	0
  8193  001AD6  AEF2               	btfss	intcon,7,c	;volatile
  8194  001AD8  0E01               	movlw	1
  8195  001ADA  0100               	movlb	0	; () banked
  8196  001ADC  0100               	movlb	0	; () banked
  8197  001ADE  6FB6               	movwf	?i2_in_high_int& (0+255),b
  8198  001AE0  0100               	movlb	0	; () banked
  8199  001AE2  6BB7               	clrf	(?i2_in_high_int+1)& (0+255),b
  8200  001AE4  0012               	return	
  8201  001AE6                     __end_ofi2_in_high_int:
  8202                           	opt stack 0
  8203                           pclatu	equ	0xFFB
  8204                           pclath	equ	0xFFA
  8205                           tblptru	equ	0xFF8
  8206                           tblptrh	equ	0xFF7
  8207                           tblptrl	equ	0xFF6
  8208                           tablat	equ	0xFF5
  8209                           prodh	equ	0xFF4
  8210                           prodl	equ	0xFF3
  8211                           intcon	equ	0xFF2
  8212                           postinc0	equ	0xFEE
  8213                           fsr0h	equ	0xFEA
  8214                           fsr0l	equ	0xFE9
  8215                           wreg	equ	0xFE8
  8216                           indf1	equ	0xFE7
  8217                           fsr1h	equ	0xFE2
  8218                           fsr1l	equ	0xFE1
  8219                           bsr	equ	0xFE0
  8220                           indf2	equ	0xFDF
  8221                           postinc2	equ	0xFDE
  8222                           postdec2	equ	0xFDD
  8223                           fsr2h	equ	0xFDA
  8224                           fsr2l	equ	0xFD9
  8225                           status	equ	0xFD8
  8226                           
  8227 ;; *************** function i2_check_msg *****************
  8228 ;; Defined at:
  8229 ;;		line 222 in file "../src/messages.c"
  8230 ;; Parameters:    Size  Location     Type
  8231 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  8232 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8233 ;; Auto vars:     Size  Location     Type
  8234 ;;		None
  8235 ;; Return value:  Size  Location     Type
  8236 ;;                  1    wreg      unsigned char 
  8237 ;; Registers used:
  8238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8239 ;; Tracked objects:
  8240 ;;		On entry : 0/0
  8241 ;;		On exit  : 0/0
  8242 ;;		Unchanged: 0/0
  8243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8244 ;;      Params:         0       2       0       0       0
  8245 ;;      Locals:         0       0       0       0       0
  8246 ;;      Temps:          0       1       0       0       0
  8247 ;;      Totals:         0       3       0       0       0
  8248 ;;Total ram usage:        3 bytes
  8249 ;; Hardware stack levels used:    1
  8250 ;; This function calls:
  8251 ;;		Nothing
  8252 ;; This function is called by:
  8253 ;;		_SleepIfOkay
  8254 ;; This function uses a non-reentrant model
  8255 ;;
  8256                           
  8257                           	psect	text52
  8258  00190C                     __ptext52:
  8259                           	opt stack 0
  8260  00190C                     i2_check_msg:
  8261                           	opt stack 19
  8262                           
  8263                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  8264                           
  8265                           ; BSR set to: 0
  8266                           ;incstack = 0
  8267  00190C  0100               	movlb	0	; () banked
  8268  00190E  EE20 F035          	lfsr	2,53
  8269  001912  0100               	movlb	0	; () banked
  8270  001914  51B6               	movf	i2check_msg@qptr& (0+255),w,b
  8271  001916  26D9               	addwf	fsr2l,f,c
  8272  001918  0100               	movlb	0	; () banked
  8273  00191A  51B7               	movf	(i2check_msg@qptr+1)& (0+255),w,b
  8274  00191C  22DA               	addwfc	fsr2h,f,c
  8275  00191E  50DF               	movf	indf2,w,c
  8276  001920  0100               	movlb	0	; () banked
  8277  001922  6FB8               	movwf	??i2_check_msg& (0+255),b
  8278  001924  0100               	movlb	0	; () banked
  8279  001926  51B8               	movf	??i2_check_msg& (0+255),w,b
  8280  001928  0D0D               	mullw	13
  8281  00192A  50F3               	movf	prodl,w,c
  8282  00192C  0100               	movlb	0	; () banked
  8283  00192E  0100               	movlb	0	; () banked
  8284  001930  25B6               	addwf	i2check_msg@qptr& (0+255),w,b
  8285  001932  6ED9               	movwf	fsr2l,c
  8286  001934  50F4               	movf	prodh,w,c
  8287  001936  0100               	movlb	0	; () banked
  8288  001938  0100               	movlb	0	; () banked
  8289  00193A  21B7               	addwfc	(i2check_msg@qptr+1)& (0+255),w,b
  8290  00193C  6EDA               	movwf	fsr2h,c
  8291  00193E  50DF               	movf	indf2,w,c
  8292  001940  0012               	return	
  8293  001942                     __end_ofi2_check_msg:
  8294                           	opt stack 0
  8295                           pclatu	equ	0xFFB
  8296                           pclath	equ	0xFFA
  8297                           tblptru	equ	0xFF8
  8298                           tblptrh	equ	0xFF7
  8299                           tblptrl	equ	0xFF6
  8300                           tablat	equ	0xFF5
  8301                           prodh	equ	0xFF4
  8302                           prodl	equ	0xFF3
  8303                           intcon	equ	0xFF2
  8304                           postinc0	equ	0xFEE
  8305                           fsr0h	equ	0xFEA
  8306                           fsr0l	equ	0xFE9
  8307                           wreg	equ	0xFE8
  8308                           indf1	equ	0xFE7
  8309                           fsr1h	equ	0xFE2
  8310                           fsr1l	equ	0xFE1
  8311                           bsr	equ	0xFE0
  8312                           indf2	equ	0xFDF
  8313                           postinc2	equ	0xFDE
  8314                           postdec2	equ	0xFDD
  8315                           fsr2h	equ	0xFDA
  8316                           fsr2l	equ	0xFD9
  8317                           status	equ	0xFD8
  8318                           
  8319 ;; *************** function _enter_sleep_mode *****************
  8320 ;; Defined at:
  8321 ;;		line 202 in file "../src/messages.c"
  8322 ;; Parameters:    Size  Location     Type
  8323 ;;		None
  8324 ;; Auto vars:     Size  Location     Type
  8325 ;;		None
  8326 ;; Return value:  Size  Location     Type
  8327 ;;		None               void
  8328 ;; Registers used:
  8329 ;;		None
  8330 ;; Tracked objects:
  8331 ;;		On entry : 0/0
  8332 ;;		On exit  : 0/0
  8333 ;;		Unchanged: 0/0
  8334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8335 ;;      Params:         0       0       0       0       0
  8336 ;;      Locals:         0       0       0       0       0
  8337 ;;      Temps:          0       0       0       0       0
  8338 ;;      Totals:         0       0       0       0       0
  8339 ;;Total ram usage:        0 bytes
  8340 ;; Hardware stack levels used:    1
  8341 ;; This function calls:
  8342 ;;		Nothing
  8343 ;; This function is called by:
  8344 ;;		_SleepIfOkay
  8345 ;; This function uses a non-reentrant model
  8346 ;;
  8347                           
  8348                           	psect	text53
  8349  001AEE                     __ptext53:
  8350                           	opt stack 0
  8351  001AEE                     _enter_sleep_mode:
  8352                           	opt stack 19
  8353                           
  8354                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8355                           
  8356                           ; BSR set to: 0
  8357                           ;incstack = 0
  8358  001AEE  8ED3               	bsf	4051,7,c	;volatile
  8359  001AF0  0003               	sleep		;# 
  8360  001AF2  0012               	return	
  8361  001AF4                     __end_of_enter_sleep_mode:
  8362                           	opt stack 0
  8363  0000                     pclatu	equ	0xFFB
  8364                           pclath	equ	0xFFA
  8365                           tblptru	equ	0xFF8
  8366                           tblptrh	equ	0xFF7
  8367                           tblptrl	equ	0xFF6
  8368                           tablat	equ	0xFF5
  8369                           prodh	equ	0xFF4
  8370                           prodl	equ	0xFF3
  8371                           intcon	equ	0xFF2
  8372                           postinc0	equ	0xFEE
  8373                           fsr0h	equ	0xFEA
  8374                           fsr0l	equ	0xFE9
  8375                           wreg	equ	0xFE8
  8376                           indf1	equ	0xFE7
  8377                           fsr1h	equ	0xFE2
  8378                           fsr1l	equ	0xFE1
  8379                           bsr	equ	0xFE0
  8380                           indf2	equ	0xFDF
  8381                           postinc2	equ	0xFDE
  8382                           postdec2	equ	0xFDD
  8383                           fsr2h	equ	0xFDA
  8384                           fsr2l	equ	0xFD9
  8385                           status	equ	0xFD8
  8386                           pclatu	equ	0xFFB
  8387                           pclath	equ	0xFFA
  8388                           tblptru	equ	0xFF8
  8389                           tblptrh	equ	0xFF7
  8390                           tblptrl	equ	0xFF6
  8391                           tablat	equ	0xFF5
  8392                           prodh	equ	0xFF4
  8393                           prodl	equ	0xFF3
  8394                           intcon	equ	0xFF2
  8395                           postinc0	equ	0xFEE
  8396                           fsr0h	equ	0xFEA
  8397                           fsr0l	equ	0xFE9
  8398                           wreg	equ	0xFE8
  8399                           indf1	equ	0xFE7
  8400                           fsr1h	equ	0xFE2
  8401                           fsr1l	equ	0xFE1
  8402                           bsr	equ	0xFE0
  8403                           indf2	equ	0xFDF
  8404                           postinc2	equ	0xFDE
  8405                           postdec2	equ	0xFDD
  8406                           fsr2h	equ	0xFDA
  8407                           fsr2l	equ	0xFD9
  8408                           status	equ	0xFD8
  8409                           
  8410                           	psect	param0
  8411  0000                     pclatu	equ	0xFFB
  8412                           pclath	equ	0xFFA
  8413                           tblptru	equ	0xFF8
  8414                           tblptrh	equ	0xFF7
  8415                           tblptrl	equ	0xFF6
  8416                           tablat	equ	0xFF5
  8417                           prodh	equ	0xFF4
  8418                           prodl	equ	0xFF3
  8419                           intcon	equ	0xFF2
  8420                           postinc0	equ	0xFEE
  8421                           fsr0h	equ	0xFEA
  8422                           fsr0l	equ	0xFE9
  8423                           wreg	equ	0xFE8
  8424                           indf1	equ	0xFE7
  8425                           fsr1h	equ	0xFE2
  8426                           fsr1l	equ	0xFE1
  8427                           bsr	equ	0xFE0
  8428                           indf2	equ	0xFDF
  8429                           postinc2	equ	0xFDE
  8430                           postdec2	equ	0xFDD
  8431                           fsr2h	equ	0xFDA
  8432                           fsr2l	equ	0xFD9
  8433                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         254
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     46      84
    BANK0           128     51     107
    BANK1           256     37     201
    BANK2           256     56      56
    BANK3           256      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK2[2]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK2[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK2[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK2[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@t1thread_data(BANK2[2]), 
		 -> main@ic(BANK2[28]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@t1thread_data(BANK2[2]), 
		 -> main@ic(BANK2[28]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    uart_retrieve_buffer@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 6
		 -> main@uc(BANK2[6]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 6
		 -> NULL(NULL[0]), main@uc(BANK2[6]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK2[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 5
		 -> readMessages@buf(BANK0[5]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK2[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK2[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), main@msgtype(BANK2[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), main@msgbuffer(BANK2[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK2[11]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> NULL(NULL[0]), timer0_int_handler@val(BANK0[2]), i2c_int_handler@error_buf(BANK0[3]), main@t1thread_data(BANK2[2]), 
		 -> main@ic(BANK2[28]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_timer1_int_handler
    _uart_send_int_handler->_WriteUSART
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_ToMainHigh_sendmsg
    _readMessages->_start_i2c_slave_reply
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _uart_lthread->_uart_retrieve_buffer
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                60    60      0   10943
                                             36 BANK1      1     1      0
                                              0 BANK2     56    56      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     675
                                              9 BANK1      8     0      8
               _uart_retrieve_buffer
 ---------------------------------------------------------------------------------
 (2) _uart_retrieve_buffer                                 9     5      4     291
                                              0 BANK1      9     5      4
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    2710
                                             26 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2021
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1798
                                             10 BANK1     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     294
                                              0 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     452
                                              4 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     452
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     283
                                              6 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              4 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                              2 BANK1      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     252
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2192
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2192
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1969
                                             10 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     375
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    2722
                                             29 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_send_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_send_int_handler                                1     1      0      31
                                              1 COMRAM     1     1      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (7) _WriteUSART                                           1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    2691
                                             26 COMRAM     3     3      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2570
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2347
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     796
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0   10839
                                             37 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  7     7      0    6458
                                             29 BANK0      7     7      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     164
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    2970
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    2747
                                             10 BANK0     14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    11    11      0    4097
                                             26 BANK0     11    11      0
                 _ToMainHigh_sendmsg
                       _handle_start
                       _readMessages
 ---------------------------------------------------------------------------------
 (12) _readMessages                                        6     6      0     343
                                              5 BANK0      6     6      0
              _start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (13) _start_i2c_slave_reply                               5     3      2     158
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    3142
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2659
                                             10 BANK0     12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6    1108
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     284
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                              2 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     284
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread
     _uart_retrieve_buffer

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_send_int_handler
     _WriteUSART

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
     _readMessages
       _start_i2c_slave_reply
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     38      38       8       21.9%
BITBANK1           100      0       0       5        0.0%
BANK1              100     25      C9       6       78.5%
BITBANK0            80      0       0       3        0.0%
BANK0               80     33      6B       4       83.6%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2E      54       1       66.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C0      11        0.0%
DATA                 0      0     1C0      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sat Mar 15 23:16:17 2014

              main@uthread_data 020E        _MQ_Main_Willing_to_block 004D                     _SSPSTATbits 000FC7  
     __end_of_ToMainLow_recvmsg 1732                              bsr 000FE0       __end_of_ToMainLow_sendmsg 1A3E  
                  __CFG_CP0$OFF 000000               i2recv_msg@msgtype 00C3               i2recv_msg@tlength 00CA  
                           l401 19C4                             l402 19C6                             l425 184C  
                           l427 1864                             l428 1866                             l471 1006  
                           l472 1008                             l473 1016                             l474 1018  
                           l467 0FE6                             l698 1A42            __size_of_WriteTimer0 0012  
          __size_of_WriteTimer1 0012                  _FromMainLow_MQ 0138                             wreg 000FE8  
                  __CFG_IESO$ON 000000                    ?_in_high_int 01A4                ??_init_uart_recv 01A6  
               ReadTimer1@timer 0003                     main@config1 020B                     main@config2 020C  
                          l1010 1152             i2recv_msg@maxlength 00C2                            l3112 06D4  
                          l3120 078A                            l3104 0692                            l3130 081A  
                          l3114 0726                            l3126 07C8                            l3118 0778  
                          l3224 0FE8                            l3216 0FD2                            l3312 1322  
                          l3330 0AF2                            l3350 155C                            l3262 11FC  
                          l3176 184E                            l3344 1538                            l3274 1254  
                          l3364 0896                            l3380 095C                            l3268 1228  
                          l3480 113E                            l3472 10F0                            l3464 0D5A  
                          l3474 1102                            l3458 0CEC                            l2860 1656  
                          l2852 1634                            l3476 110A                            l2874 16E0  
                          _LATB 000F8A                            u2707 1A44                            i1l53 0070  
               _FromMainHigh_MQ 0102                   __CFG_FCMEN$ON 000000            _uart_retrieve_buffer 0C9E  
                          _buff 0043          ?_block_on_To_msgqueues 0001                            _main 05C6  
                          fsr0h 000FEA                            fsr1h 000FE2                            fsr0l 000FE9  
                          fsr2h 000FDA                            indf1 000FE7                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                     main@msgtype 021B  
                    i1_send_msg 0E6C                            pclat 000FFA                     i2_check_msg 190C  
                          prodh 000FF4                            prodl 000FF3           handle_start@data_read 00B6  
                          start 00B6                      i2_recv_msg 0960                   __CFG_FOSC2$ON 000000  
                    i2_send_msg 0B9A       ToMainHigh_recvmsg@msgtype 01BC                  send_msg@length 01B0  
   __size_of_timer0_int_handler 008E                     _Delay1KTCYx 1A3E                           ?_main 0001  
                         _T0CON 000FD5                           _T1CON 000FCD                 __end_of___lwmod 115C  
                    i1memcpy@d1 0001                           i2l300 0468                           i2l256 0F78  
                         i2l272 01AE                           i2l266 0456                           i2l268 0170  
                         i2l294 03DA                           i2l286 02E8                      i1memcpy@s1 0003  
   FromMainHigh_recvmsg@msgtype 00CE                           _RCSTA 000FAB                           _TMR0H 000FD7  
                         _TMR1H 000FCF                           _TMR0L 000FD6                           _TMR1L 000FCE  
                         _SPBRG 000FAF                           _TRISB 000F93                           _TXREG 000FAD  
                         _TXSTA 000FAC                      i2memcpy@d1 00B6                      i2memcpy@s1 00B8  
                  ?_init_queues 0001       __size_of_enter_sleep_mode 0006                 __end_of_in_main 16F0  
    ToMainLow_recvmsg@maxlength 01C0         timer0_lthread@msgbuffer 01AA         i2c_configure_slave@addr 01A4  
                         tablat 000FF5           ?_uart_retrieve_buffer 01A4                           status 000FD8  
              __end_ofi1_memcpy 17F6                __end_ofi2_memcpy 15D2                  WriteUSART@data 0001  
               __initialization 1972                    __end_of_main 082A                      _ReadTimer1 1AB0  
   __size_of_timer1_int_handler 0030      __size_of_ToMainLow_recvmsg 0042      __size_of_ToMainLow_sendmsg 0024  
 __size_of_FromMainHigh_recvmsg 0042           __size_ofi2_in_low_int 0046   __size_of_FromMainHigh_sendmsg 0036  
                        ??_main 01C8                 send_msg@msgtype 01B1                   __activetblptr 000002  
               send_msg@tlength 01B5            __end_of_handle_start 0FB2                   ?_readMessages 0001  
                        i1l3450 1A62                          i2l3000 0430                          i1l3608 0EA4  
                        i1l3570 17C8                          i2l3020 052E                          i2l3012 04B4  
                        i1l3636 0066                          i2l3006 046C                          i1l3576 17E4  
                        i1l3594 12A0                          i2l3028 05B6                          i2l3046 14B2  
                    _OpenTimer0 19A0                      _OpenTimer1 1832                          i2l3420 0E16  
                __CFG_WDTEN$OFF 000000                          i2l3504 169C                          i2l3520 0BF6  
                        i2l3416 0DAC                          i2l3436 0F8E                          i2l3438 0FA0  
                        i2l2912 0166                          i2l3544 09CC                          i2l3560 0A92  
                        i2l2930 01E0                          i2l2906 014E                          i2l3580 1596  
                        i2l2932 0200                          i2l2950 0270                          i2l2942 0230  
                        i2l3496 167A                          i2l3586 15BA                          i2l2890 11A0  
                        i2l2972 0342                          i2l2948 0242                          i2l2884 1196  
                        i2l2974 0372                          i2l2978 0384     __end_of_i2c_configure_slave 1A1A  
                 ??_SleepIfOkay 00BA                          _OSCCON 000FD3                          _SPBRGH 000FB0  
                        _SSPADD 000FC8                          _SSPBUF 000FC9  __size_of_start_i2c_slave_reply 00D6  
                   ?i1_send_msg 000B   __end_of_start_i2c_slave_reply 0E6C              timer0_lthread@tptr 01A4  
                   ?i2_recv_msg 00C0                    i2_in_low_int 1666                     ?i2_send_msg 00C0  
                __CFG_XINST$OFF 000000              __size_of_OpenUSART 0092                 _i2c_int_handler 00BA  
              OpenTimer0@config 01A4                          _ic_ptr 0053                       ??___lwmod 01A8  
               readMessages@buf 00BC                   main@msgbuffer 0200                __end_of_init_i2c 1620  
              OpenTimer1@config 01A4                          _length 0050                          _memcpy 1516  
                        clear_0 1978                          clear_1 1984                          clear_2 1990  
                        _uc_ptr 00E9                          main@ic 021C                          _status 0052  
                        main@uc 0214                __end_of_recv_msg 0960     start_i2c_slave_reply@length 00BA  
                     ??_in_main 01AA                __end_of_send_msg 0B9A                  ??_readMessages 00BB  
         timer0_int_handler@val 00D8         i2c_int_handler@i2c_data 00D8                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                     init_queue@i 01A7  
      ToMainLow_recvmsg@msgtype 01BC            __size_of_in_high_int 0012          ??_uart_retrieve_buffer 01A8  
               __CFG_FOSC$HSPLL 000000                      __accesstop 0080         __end_of__initialization 1996  
    __end_of_ToMainHigh_recvmsg 1774      __end_of_ToMainHigh_sendmsg 190C  __size_of_uart_send_int_handler 007E  
 __end_of_uart_send_int_handler 12DA     __end_of_init_timer1_lthread 1A8C             __end_of_SleepIfOkay 1516  
                    _WriteUSART 1A54                  __pcstackCOMRAM 0001          __size_ofi2_in_high_int 0012  
                   ?_ReadTimer1 0001              __size_of_check_msg 0036       timer0_int_handler@msgtype 00D6  
           __size_ofi1_send_msg 00AA                       ?i1_memcpy 0001   __size_of_InterruptHandlerHigh 11D6  
   __end_of_InterruptHandlerLow 00B6                       ?i2_memcpy 00B6                   _ToMainHigh_MQ 016E  
           __size_ofi2_recv_msg 0136                _enter_sleep_mode 1AEE             __size_ofi2_send_msg 0104  
          timer1_lthread@length 01C2               __end_of_OpenUSART 1044                   check_msg@qptr 01A4  
          timer1_lthread@retval 01C7         ??_block_on_To_msgqueues 01AA            __size_of_init_queues 006E  
                    __pbssBANK0 0080                      __pbssBANK1 0100                     ?_OpenTimer0 0001  
                   ?_OpenTimer1 0001                      __pnvCOMRAM 0053         __end_of_i2c_int_handler 05C6  
                  ?i2_check_msg 00B6              timer1_lthread@tptr 01BE           uart_retrieve_buffer@i 01AB  
             recv_msg@maxlength 01B0                 recv_msg@msgtype 01B1                 recv_msg@tlength 01B8  
         __size_of_handle_start 009C                    ?_Delay1KTCYx 0001                WriteTimer0@timer 00B8  
                       ?_memcpy 01A4                WriteTimer1@timer 0003                   ??_WriteTimer0 00B8  
                 ??_WriteTimer1 0003         __size_of_timer0_lthread 0012         __size_of_timer1_lthread 0072  
                    ??i1_memcpy 0007                      _bufferFlag 0100                      ??i2_memcpy 00BC  
              i1send_msg@length 000D                   i2_in_high_int 1AD4                         _SSPCON1 000FC6  
                       _SSPCON2 000FC5                         _SSPSTAT 000FC7             __size_of_ReadTimer1 0012  
             __end_of_check_msg 18D6                       ?_init_i2c 01A4                     _SleepIfOkay 14AC  
                     ?_recv_msg 01AE                      _in_low_int 1620                    _handle_start 0F16  
                       __Hparam 0000                       ?_send_msg 01AE            __end_of_readMessages 13CC  
                       __Lparam 0000      __end_of_timer0_int_handler 10D2                     ?_WriteUSART 0001  
              init_uart_recv@uc 01A4                         ___lwmod 10D2                 __CFG_STVREN$OFF 000000  
                       __pcinit 1972                 __size_of_memcpy 005E                      _init_queue 12DA  
                       __ramtop 0400             __size_of_OpenTimer0 002A             __size_of_OpenTimer1 0038  
                       __ptext0 05C6                         __ptext1 17F6                         __ptext2 0C9E  
                       __ptext3 13CC                         __ptext4 10D2                         __ptext5 186A  
                       __ptext6 0A96                         __ptext7 1A68                         __ptext8 19CA  
                       __ptext9 1A7A                       _T0CONbits 000FD5                         _in_main 16AC  
                     _T1CONbits 000FCD             __end_of_WriteTimer0 1AD4             __end_of_WriteTimer1 1AB0  
                ?i2_in_high_int 00B6                         _msgtype 0051   uart_retrieve_buffer@msgbuffer 01A6  
                __pintcode_body 115C    __end_of_FromMainHigh_recvmsg 17B6            end_of_initialization 1996  
       timer1_lthread@msgbuffer 01C4    __end_of_FromMainHigh_sendmsg 18A0      FromMainHigh_sendmsg@length 01BD  
                       memcpy@d 01AA                         memcpy@n 01A8                         memcpy@s 01AC  
                    ??_init_i2c 01A6     i2c_int_handler@data_written 00D5                   __Lmediumconst 0000  
                       int_func 115C                    ??i1_send_msg 0011                   ?_uart_lthread 01AD  
       __size_of_init_uart_recv 0028                ?_i2c_int_handler 0001                    ??i2_recv_msg 00C7  
                    ??_recv_msg 01B5                    ??i2_send_msg 00C6                      ??_send_msg 01B4  
                main@portconfig 020D      __end_of_timer1_int_handler 1972                       _RCSTAbits 000FAB  
                       postdec2 000FDD                         postinc0 000FEE                         postinc2 000FDE  
     ToMainHigh_sendmsg@msgtype 00CC                  _last_reg_recvd 004F              __end_ofi1_send_msg 0F16  
   FromMainHigh_sendmsg@msgtype 01BA                       _TRISCbits 000F94              __end_ofi2_recv_msg 0A96  
            __end_ofi2_send_msg 0C9E             __size_of_WriteUSART 0014   FromMainHigh_recvmsg@maxlength 00D2  
      timer1_int_handler@result 001C                  ??_uart_lthread 01B5                       _TXSTAbits 000FAC  
                    main@length 021A                     ?_in_low_int 01A6           timer0_lthread@msgtype 01A6  
         _start_i2c_slave_reply 0D96    __size_of_i2c_configure_slave 0028            __size_ofi2_check_msg 0036  
      __end_of_enter_sleep_mode 1AF4                    ??_ReadTimer1 0003              _ToMainHigh_recvmsg 1732  
                     i1memcpy@d 0007              _ToMainHigh_sendmsg 18D6                       i1memcpy@n 0005  
                     i1memcpy@s 0009                  _timer0_lthread 1A68                     ?_init_queue 01A4  
                     i2memcpy@d 00BC                     _WriteTimer0 1AC2                     _WriteTimer1 1A9E  
                     i2memcpy@n 00BA                       i2memcpy@s 00BE                  _timer1_lthread 13CC  
                __end_of_memcpy 1574               _enable_interrupts 1AE6            __size_of_Delay1KTCYx 0016  
           ?_ToMainHigh_recvmsg 01BC                 ??i2_in_high_int 00B8        i2c_int_handler@data_read 00DA  
           ?_ToMainHigh_sendmsg 00CC              ?_enable_interrupts 0001             start_initialization 1972  
                 ??_in_high_int 01A6               __size_ofi1_memcpy 0040               __size_ofi2_memcpy 005E  
           ??_enable_interrupts 01A4                    ??_OpenTimer0 01A4                    ??_OpenTimer1 01A4  
__size_of_block_on_To_msgqueues 007E              __end_of_ReadTimer1 1AC2   __end_of_block_on_To_msgqueues 125C  
 __size_of_uart_retrieve_buffer 00F8                       _OpenUSART 0FB2           __size_of_readMessages 0078  
  __end_of_InterruptHandlerHigh 11DE                      init_i2c@ic 01A4            ??_ToMainHigh_recvmsg 01C0  
          ??_ToMainHigh_sendmsg 00CF           _uart_send_int_handler 125C          __end_of_timer0_lthread 1A7A  
      i2c_int_handler@error_buf 00D2          __end_of_timer1_lthread 143E       __end_of_enable_interrupts 1AEE  
                      ??_memcpy 01AA           timer1_lthread@msgtype 01C0            _FromMainHigh_recvmsg 1774  
          _FromMainHigh_sendmsg 186A    __size_of_init_timer1_lthread 0012              __end_of_OpenTimer0 19CA  
            __end_of_OpenTimer1 186A        i2c_int_handler@msg_ready 00D9                     __pbssCOMRAM 002F  
                 ??_init_queues 01A8                   __pcstackBANK0 00B6                   __pcstackBANK1 01A4  
                 __pcstackBANK2 0200             __size_of_in_low_int 0046                    _readMessages 1354  
      start_i2c_slave_reply@msg 00B6             __CFG_CCP2MX$DEFAULT 000000                 Delay1KTCYx@unit 01A4  
      ToMainLow_sendmsg@msgtype 0017    __size_of_InterruptHandlerLow 009E             __end_of_in_high_int 1A9E  
                    ?_OpenUSART 01A4                    ?_SleepIfOkay 0001           ToMainLow_recvmsg@data 01BE  
                  _ToMainLow_MQ 0080             __size_of_init_queue 007A                  _init_uart_recv 19CA  
                     _check_msg 18A0                       __pnvBANK0 00E9          ?_start_i2c_slave_reply 00B6  
             __size_of_init_i2c 004E                    recv_msg@data 01B3                    ??_WriteUSART 0001  
                  recv_msg@qmsg 01BA                    recv_msg@slot 01B7                    recv_msg@qptr 01AE  
             __size_of_recv_msg 0136                       __pintcode 0008               __size_of_send_msg 0104  
               ?_timer0_lthread 01A4                        ?___lwmod 01A4           ?_FromMainHigh_recvmsg 00CE  
               ?_timer1_lthread 01BE           ?_FromMainHigh_sendmsg 01BA                     __pintcodelo 0018  
        ToMainHigh_recvmsg@data 01BE            __end_of_uart_lthread 1832      i2c_int_handler@msg_to_send 00D7  
                      ?_in_main 01A8               WriteTimer0@timer0 00B6              _timer0_int_handler 1044  
             WriteTimer1@timer1 0001             uart_lthread@msgtype 01AF           ToMainLow_sendmsg@data 0018  
    uart_retrieve_buffer@length 01A4             ?_timer0_int_handler 0001              __end_of_WriteUSART 1A68  
              uart_lthread@uptr 01AD          __end_of_init_uart_recv 19F2             __end_of_init_queues 14AC  
                      _LATBbits 000F8A                 i2check_msg@qptr 00B6                      ?_check_msg 01A4  
                      _IPR1bits 000F9F                        _PIE1bits 000F9D                       _msgbuffer 002F  
                 ?i2_in_low_int 00B8                        _PIR1bits 000F9E          ?_uart_send_int_handler 0001  
        ToMainHigh_sendmsg@data 00CD                        _RCONbits 000FD0                __CFG_WDTPS$32768 000000  
          ??_timer0_int_handler 00D3      __size_of_enable_interrupts 0008               i1send_msg@msgtype 000E  
             i1send_msg@tlength 0012            timer0_lthread@length 01A8              _timer1_int_handler 1942  
                      i1_memcpy 17B6            _InterruptHandlerHigh 0008                        i2_memcpy 1574  
          timer0_lthread@msgval 01AC        FromMainHigh_recvmsg@data 00D0                     _in_high_int 1A8C  
                  send_msg@data 01B2             _i2c_configure_slave 19F2                    send_msg@qmsg 01B8  
                  send_msg@slot 01B7                    send_msg@qptr 01AE           uart_lthread@msgbuffer 01B3  
           ?_timer1_int_handler 0001                 ?_init_uart_recv 01A4                     ??_OpenUSART 01A6  
               OpenUSART@config 01A9                  ??i2_in_low_int 00BA                        __Hparam0 0000  
                  ??_in_low_int 01A8                        __Lparam0 0000            ?_i2c_configure_slave 0001  
             ?_enter_sleep_mode 0001          ??_FromMainHigh_recvmsg 00D2          ??_FromMainHigh_sendmsg 01BD  
          ??_timer1_int_handler 001B        __size_of_i2c_int_handler 050C              ??_enter_sleep_mode 00B6  
              __size_of___lwmod 008A                    ??_init_queue 01A6                    ?_WriteTimer0 00B6  
                  ?_WriteTimer1 0001        FromMainHigh_sendmsg@data 01BB         ToMainLow_sendmsg@length 001A  
             main@t0thread_data 0210           ?_InterruptHandlerHigh 0001                __size_of_in_main 0044  
             i2send_msg@msgtype 00C3     ToMainHigh_recvmsg@maxlength 01C0               i2send_msg@tlength 00C7  
       init_timer1_lthread@tptr 01A4                     _init_queues 143E              __end_of_in_low_int 1666  
                      __ptext10 143E                        __ptext11 12DA                        __ptext20 1A3E  
                      __ptext12 15D2                        __ptext21 16F0                        __ptext13 19F2  
                      __ptext30 1A54                        __ptext22 1732                        __ptext14 1AE6  
                      __ptext31 1942                        __ptext23 082A                        __ptext15 11DE  
                      __ptext40 1774                        __ptext32 1A9E                        __ptext24 1516  
                      __ptext16 16AC                        __ptext41 0960                        __ptext33 1A1A  
                      __ptext25 0FB2                        __ptext17 1620                        __ptext50 1666  
                      __ptext42 00BA                        __ptext34 0E6C                        __ptext26 1832  
                      __ptext18 1A8C                        __ptext51 1AD4                        __ptext43 1354  
                      __ptext35 17B6                        __ptext27 19A0                        __ptext19 18A0  
                      __ptext52 190C                        __ptext44 0D96                        __ptext36 1AB0  
                      __ptext53 1AEE                        __ptext45 0F16                        __ptext29 125C  
                      __ptext46 18D6                        __ptext38 1044                        __ptext47 0B9A  
                      __ptext39 1AC2                        __ptext48 1574                        __ptext49 14AC  
                i1send_msg@data 000F                  i1send_msg@qmsg 0015                  i1send_msg@slot 0014  
                i1send_msg@qptr 000B              uart_lthread@length 01B1        timer0_int_handler@length 00D4  
                      _init_i2c 15D2             _init_timer1_lthread 1A7A                   __size_of_main 0264  
                 ??i2_check_msg 00B8               main@t1thread_data 0212                     ??_check_msg 01A6  
            __end_of_init_queue 1354            __size_of_SleepIfOkay 006A                        _recv_msg 082A  
         ??_i2c_configure_slave 01A4                        _send_msg 0A96                  init_queue@qptr 01A4  
         __size_of_uart_lthread 003C                  i2recv_msg@data 00C5                  i2recv_msg@qmsg 00CC  
                 ??_Delay1KTCYx 01A4                  i2recv_msg@slot 00C9                  i2recv_msg@qptr 00C0  
  __end_of_uart_retrieve_buffer 0D96             _InterruptHandlerLow 0018            ?_init_timer1_lthread 01A4  
                   _OSCTUNEbits 000F9B                      _INTCONbits 000FF2                  OpenUSART@spbrg 01A4  
                      memcpy@d1 01A4                        memcpy@s1 01A6           __end_ofi2_in_high_int 1AE6  
  i2c_int_handler@overrun_error 00D6                i2send_msg@length 00C2                        intlevel1 0000  
                      intlevel2 0000            ?_InterruptHandlerLow 0001         ??_start_i2c_slave_reply 00B8  
              ___lwmod@dividend 01A4                    _uart_lthread 17F6           _block_on_To_msgqueues 11DE  
                 ?_handle_start 0001                ??_timer0_lthread 01AC     __size_of_ToMainHigh_recvmsg 0042  
   __size_of_ToMainHigh_sendmsg 0036                      _OSCCONbits 000FD3                ??_timer1_lthread 01C6  
      ToMainHigh_sendmsg@length 00CF             __end_ofi2_check_msg 1942           ??_init_timer1_lthread 01A6  
        ??_InterruptHandlerHigh 00DB               _ToMainLow_recvmsg 16F0               _ToMainLow_sendmsg 1A1A  
               ___lwmod@divisor 01A6            __end_ofi2_in_low_int 16AC              ?_ToMainLow_recvmsg 01BC  
           __end_of_Delay1KTCYx 1A54               ??_i2c_int_handler 00D0                 ___lwmod@counter 01A9  
            ?_ToMainLow_sendmsg 0017                     _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5  
                i2send_msg@data 00C4           ??_InterruptHandlerLow 001E             ??_ToMainLow_recvmsg 01C0  
                i2send_msg@qmsg 00CA                  i2send_msg@slot 00C9                  i2send_msg@qptr 00C0  
           ??_ToMainLow_sendmsg 001A         ??_uart_send_int_handler 0002                  ??_handle_start 00B6  
                  _USART_Status 004E  
