

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Apr 07 18:30:21 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    68                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    69  0000                     
    70                           	psect	idataCOMRAM
    71  001D0C                     __pidataCOMRAM:
    72                           	opt stack 0
    73                           
    74                           ;initializer for _fwd_state
    75  001D0C  0001               	dw	1
    76                           
    77                           ;initializer for _left_state
    78  001D0E  0001               	dw	1
    79                           
    80                           ;initializer for _maxTickOne
    81  001D10  003C               	dw	60
    82                           
    83                           ;initializer for _maxTickZero
    84  001D12  003C               	dw	60
    85                           
    86                           ;initializer for _rev_state
    87  001D14  0001               	dw	1
    88                           
    89                           ;initializer for _right_state
    90  001D16  0001               	dw	1
    91                           
    92                           ;initializer for _msgtype_moto
    93  001D18  01                 	db	1
    94                           
    95                           	psect	smallconst
    96  000400                     __psmallconst:
    97                           	opt stack 0
    98  000400  00                 	db	0
    99  000401                     _circumference:
   100                           	opt stack 0
   101  000401  0026               	dw	38
   102  000403                     __end_of_circumference:
   103                           	opt stack 0
   104  0000                     _BAUDCONbits	set	4024
   105  0000                     _INTCONbits	set	4082
   106  0000                     _IPR1bits	set	3999
   107  0000                     _LATA	set	3977
   108  0000                     _LATAbits	set	3977
   109  0000                     _OSCCON	set	4051
   110  0000                     _OSCCONbits	set	4051
   111  0000                     _OSCTUNEbits	set	3995
   112  0000                     _PIE1bits	set	3997
   113  0000                     _PIR1bits	set	3998
   114  0000                     _PORTB	set	3969
   115  0000                     _RCONbits	set	4048
   116  0000                     _RCSTA	set	4011
   117  0000                     _RCSTAbits	set	4011
   118  0000                     _SPBRG	set	4015
   119  0000                     _SPBRGH	set	4016
   120  0000                     _SSPADD	set	4040
   121  0000                     _SSPBUF	set	4041
   122  0000                     _SSPCON1	set	4038
   123  0000                     _SSPCON1bits	set	4038
   124  0000                     _SSPCON2	set	4037
   125  0000                     _SSPCON2bits	set	4037
   126  0000                     _SSPSTAT	set	4039
   127  0000                     _SSPSTATbits	set	4039
   128  0000                     _T0CON	set	4053
   129  0000                     _T0CONbits	set	4053
   130  0000                     _T1CON	set	4045
   131  0000                     _T1CONbits	set	4045
   132  0000                     _TMR0H	set	4055
   133  0000                     _TMR0L	set	4054
   134  0000                     _TMR1H	set	4047
   135  0000                     _TMR1L	set	4046
   136  0000                     _TRISA	set	3986
   137  0000                     _TRISCbits	set	3988
   138  0000                     _TXREG	set	4013
   139  0000                     _TXSTA	set	4012
   140  0000                     _TXSTAbits	set	4012
   141  000403  00                 	db	0	; dummy byte at the end
   142  0000                     
   143                           	psect	nvBANK0
   144  0000C3                     __pnvBANK0:
   145                           	opt stack 0
   146  0000C3                     _ic_ptr:
   147                           	opt stack 0
   148  0000C3                     	ds	2
   149  0000C5                     _uc_ptr:
   150                           	opt stack 0
   151  0000C5                     	ds	2
   152                           
   153                           ; #config settings
   154  0000                     
   155                           	psect	cinit
   156  001866                     __pcinit:
   157                           	opt stack 0
   158  001866                     start_initialization:
   159                           	opt stack 0
   160  001866                     __initialization:
   161                           	opt stack 0
   162                           
   163                           ; Clear objects allocated to BANK1 (216 bytes)
   164  001866  EE01  F000         	lfsr	0,__pbssBANK1
   165  00186A  0ED8               	movlw	216
   166  00186C                     clear_0:
   167  00186C  6AEE               	clrf	postinc0,c
   168  00186E  06E8               	decf	wreg,f,c
   169  001870  E1FD               	bnz	clear_0
   170                           
   171                           ; Clear objects allocated to BANK0 (7 bytes)
   172  001872  EE00  F0BC         	lfsr	0,__pbssBANK0
   173  001876  0E07               	movlw	7
   174  001878                     clear_1:
   175  001878  6AEE               	clrf	postinc0,c
   176  00187A  06E8               	decf	wreg,f,c
   177  00187C  E1FD               	bnz	clear_1
   178                           
   179                           ; Clear objects allocated to COMRAM (41 bytes)
   180  00187E  EE00  F033         	lfsr	0,__pbssCOMRAM
   181  001882  0E29               	movlw	41
   182  001884                     clear_2:
   183  001884  6AEE               	clrf	postinc0,c
   184  001886  06E8               	decf	wreg,f,c
   185  001888  E1FD               	bnz	clear_2
   186                           
   187                           ; Initialize objects allocated to COMRAM (13 bytes)
   188                           ; load TBLPTR registers with __pidataCOMRAM
   189  00188A  0E0C               	movlw	low __pidataCOMRAM
   190  00188C  6EF6               	movwf	tblptrl,c
   191  00188E  0E1D               	movlw	high __pidataCOMRAM
   192  001890  6EF7               	movwf	tblptrh,c
   193  001892  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   194  001894  6EF8               	movwf	tblptru,c
   195  001896  EE00  F05C         	lfsr	0,__pdataCOMRAM
   196  00189A  EE10 F00D          	lfsr	1,13
   197  00189E                     copy_data0:
   198  00189E  0009               	tblrd		*+
   199  0018A0  CFF5 FFEE          	movff	tablat,postinc0
   200  0018A4  50E5               	movf	postdec1,w,c
   201  0018A6  50E1               	movf	fsr1l,w,c
   202  0018A8  E1FA               	bnz	copy_data0
   203  0018AA                     end_of_initialization:
   204                           	opt stack 0
   205  0018AA                     __end_of__initialization:
   206                           	opt stack 0
   207  0018AA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   208  0018AC  6EF8               	movwf	tblptru,c
   209  0018AE  0100               	movlb	0
   210  0018B0  EFE2  F004         	goto	_main	;jump to C main() function
   211                           tblptru	equ	0xFF8
   212                           tblptrh	equ	0xFF7
   213                           tblptrl	equ	0xFF6
   214                           tablat	equ	0xFF5
   215                           postinc0	equ	0xFEE
   216                           wreg	equ	0xFE8
   217                           postdec1	equ	0xFE5
   218                           fsr1l	equ	0xFE1
   219                           
   220                           	psect	bssCOMRAM
   221  000033                     __pbssCOMRAM:
   222                           	opt stack 0
   223  000033                     _msgbuffer:
   224                           	opt stack 0
   225  000033                     	ds	20
   226  000047                     _buff:
   227                           	opt stack 0
   228  000047                     	ds	10
   229  000051                     _t0thread_data:
   230                           	opt stack 0
   231  000051                     	ds	2
   232  000053                     _timer0Counter:
   233                           	opt stack 0
   234  000053                     	ds	2
   235  000055                     _timer1Counter:
   236                           	opt stack 0
   237  000055                     	ds	2
   238  000057                     _MQ_Main_Willing_to_block:
   239                           	opt stack 0
   240  000057                     	ds	1
   241  000058                     _USART_Status:
   242                           	opt stack 0
   243  000058                     	ds	1
   244  000059                     _last_reg_recvd:
   245                           	opt stack 0
   246  000059                     	ds	1
   247  00005A                     _length:
   248                           	opt stack 0
   249  00005A                     	ds	1
   250  00005B                     _status:
   251                           	opt stack 0
   252  00005B                     	ds	1
   253                           tblptru	equ	0xFF8
   254                           tblptrh	equ	0xFF7
   255                           tblptrl	equ	0xFF6
   256                           tablat	equ	0xFF5
   257                           postinc0	equ	0xFEE
   258                           wreg	equ	0xFE8
   259                           postdec1	equ	0xFE5
   260                           fsr1l	equ	0xFE1
   261                           
   262                           	psect	dataCOMRAM
   263  00005C                     __pdataCOMRAM:
   264                           	opt stack 0
   265  00005C                     _fwd_state:
   266                           	opt stack 0
   267  00005C                     	ds	2
   268  00005E                     _left_state:
   269                           	opt stack 0
   270  00005E                     	ds	2
   271  000060                     _maxTickOne:
   272                           	opt stack 0
   273  000060                     	ds	2
   274  000062                     _maxTickZero:
   275                           	opt stack 0
   276  000062                     	ds	2
   277  000064                     _rev_state:
   278                           	opt stack 0
   279  000064                     	ds	2
   280  000066                     _right_state:
   281                           	opt stack 0
   282  000066                     	ds	2
   283  000068                     _msgtype_moto:
   284                           	opt stack 0
   285  000068                     	ds	1
   286                           tblptru	equ	0xFF8
   287                           tblptrh	equ	0xFF7
   288                           tblptrl	equ	0xFF6
   289                           tablat	equ	0xFF5
   290                           postinc0	equ	0xFEE
   291                           wreg	equ	0xFE8
   292                           postdec1	equ	0xFE5
   293                           fsr1l	equ	0xFE1
   294                           
   295                           	psect	bssBANK0
   296  0000BC                     __pbssBANK0:
   297                           	opt stack 0
   298  0000BC                     _bufferFlag:
   299                           	opt stack 0
   300  0000BC                     	ds	2
   301  0000BE                     _motorEncoderBuffer:
   302                           	opt stack 0
   303  0000BE                     	ds	5
   304                           tblptru	equ	0xFF8
   305                           tblptrh	equ	0xFF7
   306                           tblptrl	equ	0xFF6
   307                           tablat	equ	0xFF5
   308                           postinc0	equ	0xFEE
   309                           wreg	equ	0xFE8
   310                           postdec1	equ	0xFE5
   311                           fsr1l	equ	0xFE1
   312                           
   313                           	psect	bssBANK1
   314  000100                     __pbssBANK1:
   315                           	opt stack 0
   316  000100                     _FromMainHigh_MQ:
   317                           	opt stack 0
   318  000100                     	ds	54
   319  000136                     _FromMainLow_MQ:
   320                           	opt stack 0
   321  000136                     	ds	54
   322  00016C                     _ToMainHigh_MQ:
   323                           	opt stack 0
   324  00016C                     	ds	54
   325  0001A2                     _ToMainLow_MQ:
   326                           	opt stack 0
   327  0001A2                     	ds	54
   328                           tblptru	equ	0xFF8
   329                           tblptrh	equ	0xFF7
   330                           tblptrl	equ	0xFF6
   331                           tablat	equ	0xFF5
   332                           postinc0	equ	0xFEE
   333                           wreg	equ	0xFE8
   334                           postdec1	equ	0xFE5
   335                           fsr1l	equ	0xFE1
   336                           
   337                           	psect	cstackBANK2
   338  000200                     __pcstackBANK2:
   339                           	opt stack 0
   340  000200                     main@msgbuffer:
   341                           	opt stack 0
   342                           
   343                           ; 11 bytes @ 0x0
   344  000200                     	ds	11
   345  00020B                     main@config1:
   346                           	opt stack 0
   347                           
   348                           ; 1 bytes @ 0xB
   349  00020B                     	ds	1
   350  00020C                     main@config2:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0xC
   354  00020C                     	ds	1
   355  00020D                     main@portconfig:
   356                           	opt stack 0
   357                           
   358                           ; 1 bytes @ 0xD
   359  00020D                     	ds	1
   360  00020E                     main@uthread_data:
   361                           	opt stack 0
   362                           
   363                           ; 2 bytes @ 0xE
   364  00020E                     	ds	2
   365  000210                     main@t0thread_data:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x10
   369  000210                     	ds	2
   370  000212                     main@t1thread_data:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x12
   374  000212                     	ds	2
   375  000214                     main@uc:
   376                           	opt stack 0
   377                           
   378                           ; 12 bytes @ 0x14
   379  000214                     	ds	12
   380  000220                     main@length:
   381                           	opt stack 0
   382                           
   383                           ; 1 bytes @ 0x20
   384  000220                     	ds	1
   385  000221                     main@msgtype:
   386                           	opt stack 0
   387                           
   388                           ; 1 bytes @ 0x21
   389  000221                     	ds	1
   390  000222                     main@ic:
   391                           	opt stack 0
   392                           
   393                           ; 28 bytes @ 0x22
   394  000222                     	ds	28
   395                           tblptru	equ	0xFF8
   396                           tblptrh	equ	0xFF7
   397                           tblptrl	equ	0xFF6
   398                           tablat	equ	0xFF5
   399                           postinc0	equ	0xFEE
   400                           wreg	equ	0xFE8
   401                           postdec1	equ	0xFE5
   402                           fsr1l	equ	0xFE1
   403                           
   404                           	psect	cstackBANK0
   405  000080                     __pcstackBANK0:
   406                           	opt stack 0
   407  000080                     i2c_int_handler@error_buf:
   408                           	opt stack 0
   409                           
   410                           ; 3 bytes @ 0x0
   411  000080                     	ds	3
   412  000083                     i2c_int_handler@data_written:
   413                           	opt stack 0
   414                           
   415                           ; 1 bytes @ 0x3
   416  000083                     	ds	1
   417  000084                     i2c_int_handler@overrun_error:
   418                           	opt stack 0
   419                           
   420                           ; 1 bytes @ 0x4
   421  000084                     	ds	1
   422  000085                     i2c_int_handler@msg_to_send:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0x5
   426  000085                     	ds	1
   427  000086                     i2c_int_handler@i2c_data:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x6
   431  000086                     	ds	1
   432  000087                     i2c_int_handler@msg_ready:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x7
   436  000087                     	ds	1
   437  000088                     i2c_int_handler@data_read:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0x8
   441  000088                     	ds	1
   442  000089                     ??_InterruptHandlerHigh:
   443                           
   444                           ; 0 bytes @ 0x9
   445  000089                     	ds	14
   446  000097                     ?_in_high_int:
   447                           	opt stack 0
   448  000097                     ?___lwmod:
   449                           	opt stack 0
   450  000097                     i2c_configure_slave@addr:
   451                           	opt stack 0
   452  000097                     OpenTimer0@config:
   453                           	opt stack 0
   454  000097                     OpenTimer1@config:
   455                           	opt stack 0
   456  000097                     Delay1KTCYx@unit:
   457                           	opt stack 0
   458  000097                     init_queue@qptr:
   459                           	opt stack 0
   460  000097                     check_msg@qptr:
   461                           	opt stack 0
   462  000097                     start_i2c_slave_reply@msg:
   463                           	opt stack 0
   464  000097                     init_i2c@ic:
   465                           	opt stack 0
   466  000097                     init_uart_recv@uc:
   467                           	opt stack 0
   468  000097                     uart_retrieve_buffer@length:
   469                           	opt stack 0
   470  000097                     timer0_lthread@tptr:
   471                           	opt stack 0
   472  000097                     init_timer1_lthread@tptr:
   473                           	opt stack 0
   474  000097                     WriteTimer1@timer1:
   475                           	opt stack 0
   476  000097                     OpenUSART@spbrg:
   477                           	opt stack 0
   478  000097                     ___lwmod@dividend:
   479                           	opt stack 0
   480  000097                     memcpy@d1:
   481                           	opt stack 0
   482                           
   483                           ; 2 bytes @ 0x17
   484  000097                     	ds	2
   485  000099                     ??_OpenUSART:
   486  000099                     ??_init_queue:
   487  000099                     ??_check_msg:
   488  000099                     ??_start_i2c_slave_reply:
   489  000099                     ?_in_low_int:
   490                           	opt stack 0
   491  000099                     uart_retrieve_buffer@msgbuffer:
   492                           	opt stack 0
   493  000099                     timer0_lthread@msgtype:
   494                           	opt stack 0
   495  000099                     WriteTimer1@timer:
   496                           	opt stack 0
   497  000099                     ___lwmod@divisor:
   498                           	opt stack 0
   499  000099                     memcpy@s1:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x19
   503  000099                     	ds	1
   504  00009A                     init_queue@i:
   505                           	opt stack 0
   506                           
   507                           ; 1 bytes @ 0x1A
   508  00009A                     	ds	1
   509  00009B                     ??_init_queues:
   510  00009B                     ??___lwmod:
   511  00009B                     ?_in_main:
   512                           	opt stack 0
   513  00009B                     start_i2c_slave_reply@length:
   514                           	opt stack 0
   515  00009B                     timer0_lthread@length:
   516                           	opt stack 0
   517  00009B                     memcpy@n:
   518                           	opt stack 0
   519                           
   520                           ; 2 bytes @ 0x1B
   521  00009B                     	ds	1
   522  00009C                     OpenUSART@config:
   523                           	opt stack 0
   524  00009C                     ___lwmod@counter:
   525                           	opt stack 0
   526  00009C                     uart_lthread@uptr:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x1C
   530  00009C                     	ds	1
   531  00009D                     ??_block_on_To_msgqueues:
   532  00009D                     timer0_lthread@msgbuffer:
   533                           	opt stack 0
   534  00009D                     memcpy@d:
   535                           	opt stack 0
   536                           
   537                           ; 2 bytes @ 0x1D
   538  00009D                     	ds	1
   539  00009E                     uart_lthread@msgtype:
   540                           	opt stack 0
   541                           
   542                           ; 2 bytes @ 0x1E
   543  00009E                     	ds	1
   544  00009F                     timer0_lthread@msgval:
   545                           	opt stack 0
   546  00009F                     memcpy@s:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x1F
   550  00009F                     	ds	1
   551  0000A0                     uart_lthread@length:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x20
   555  0000A0                     	ds	1
   556  0000A1                     send_msg@qptr:
   557                           	opt stack 0
   558  0000A1                     recv_msg@qptr:
   559                           	opt stack 0
   560                           
   561                           ; 2 bytes @ 0x21
   562  0000A1                     	ds	1
   563  0000A2                     uart_lthread@msgbuffer:
   564                           	opt stack 0
   565                           
   566                           ; 2 bytes @ 0x22
   567  0000A2                     	ds	1
   568  0000A3                     send_msg@length:
   569                           	opt stack 0
   570  0000A3                     recv_msg@maxlength:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x23
   574  0000A3                     	ds	1
   575  0000A4                     ??_uart_lthread:
   576  0000A4                     send_msg@msgtype:
   577                           	opt stack 0
   578  0000A4                     recv_msg@msgtype:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0x24
   582  0000A4                     	ds	1
   583  0000A5                     send_msg@data:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x25
   587  0000A5                     	ds	1
   588  0000A6                     recv_msg@data:
   589                           	opt stack 0
   590                           
   591                           ; 2 bytes @ 0x26
   592  0000A6                     	ds	1
   593  0000A7                     ??_send_msg:
   594                           
   595                           ; 0 bytes @ 0x27
   596  0000A7                     	ds	1
   597  0000A8                     ??_recv_msg:
   598  0000A8                     send_msg@tlength:
   599                           	opt stack 0
   600                           
   601                           ; 2 bytes @ 0x28
   602  0000A8                     	ds	2
   603  0000AA                     send_msg@slot:
   604                           	opt stack 0
   605  0000AA                     recv_msg@slot:
   606                           	opt stack 0
   607                           
   608                           ; 1 bytes @ 0x2A
   609  0000AA                     	ds	1
   610  0000AB                     send_msg@qmsg:
   611                           	opt stack 0
   612  0000AB                     recv_msg@tlength:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0x2B
   616  0000AB                     	ds	2
   617  0000AD                     FromMainHigh_sendmsg@msgtype:
   618                           	opt stack 0
   619  0000AD                     recv_msg@qmsg:
   620                           	opt stack 0
   621                           
   622                           ; 2 bytes @ 0x2D
   623  0000AD                     	ds	1
   624  0000AE                     FromMainHigh_sendmsg@data:
   625                           	opt stack 0
   626                           
   627                           ; 2 bytes @ 0x2E
   628  0000AE                     	ds	1
   629  0000AF                     ToMainLow_recvmsg@msgtype:
   630                           	opt stack 0
   631  0000AF                     ToMainHigh_recvmsg@msgtype:
   632                           	opt stack 0
   633                           
   634                           ; 2 bytes @ 0x2F
   635  0000AF                     	ds	1
   636  0000B0                     FromMainHigh_sendmsg@length:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0x30
   640  0000B0                     	ds	1
   641  0000B1                     ToMainLow_recvmsg@data:
   642                           	opt stack 0
   643  0000B1                     ToMainHigh_recvmsg@data:
   644                           	opt stack 0
   645  0000B1                     timer1_lthread@tptr:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0x31
   649  0000B1                     	ds	2
   650  0000B3                     ToMainLow_recvmsg@maxlength:
   651                           	opt stack 0
   652  0000B3                     ToMainHigh_recvmsg@maxlength:
   653                           	opt stack 0
   654  0000B3                     timer1_lthread@msgtype:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x33
   658  0000B3                     	ds	2
   659  0000B5                     timer1_lthread@length:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0x35
   663  0000B5                     	ds	2
   664  0000B7                     timer1_lthread@msgbuffer:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0x37
   668  0000B7                     	ds	2
   669  0000B9                     ??_timer1_lthread:
   670                           
   671                           ; 0 bytes @ 0x39
   672  0000B9                     	ds	1
   673  0000BA                     timer1_lthread@retval:
   674                           	opt stack 0
   675                           
   676                           ; 1 bytes @ 0x3A
   677  0000BA                     	ds	1
   678  0000BB                     ??_main:
   679                           
   680                           ; 0 bytes @ 0x3B
   681  0000BB                     	ds	1
   682                           tblptru	equ	0xFF8
   683                           tblptrh	equ	0xFF7
   684                           tblptrl	equ	0xFF6
   685                           tablat	equ	0xFF5
   686                           postinc0	equ	0xFEE
   687                           wreg	equ	0xFE8
   688                           postdec1	equ	0xFE5
   689                           fsr1l	equ	0xFE1
   690                           
   691                           	psect	cstackCOMRAM
   692  000001                     __pcstackCOMRAM:
   693                           	opt stack 0
   694  000001                     WriteUSART@data:
   695                           	opt stack 0
   696  000001                     i1WriteTimer1@timer1:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0x0
   700  000001                     	ds	1
   701  000002                     ??_uart_send_int_handler:
   702                           
   703                           ; 0 bytes @ 0x1
   704  000002                     	ds	1
   705  000003                     i1WriteTimer1@timer:
   706                           	opt stack 0
   707                           
   708                           ; 2 bytes @ 0x2
   709  000003                     	ds	2
   710  000005                     ??_timer1_int_handler:
   711                           
   712                           ; 0 bytes @ 0x4
   713  000005                     	ds	1
   714  000006                     ??_InterruptHandlerLow:
   715                           
   716                           ; 0 bytes @ 0x5
   717  000006                     	ds	17
   718  000017                     ?i2_in_high_int:
   719                           	opt stack 0
   720  000017                     handle_start@data_read:
   721                           	opt stack 0
   722  000017                     WriteTimer0@timer0:
   723                           	opt stack 0
   724  000017                     i2check_msg@qptr:
   725                           	opt stack 0
   726  000017                     i2start_i2c_slave_reply@msg:
   727                           	opt stack 0
   728  000017                     i2memcpy@d1:
   729                           	opt stack 0
   730                           
   731                           ; 2 bytes @ 0x16
   732  000017                     	ds	2
   733  000019                     ??i2_check_msg:
   734  000019                     ??i2_start_i2c_slave_reply:
   735  000019                     ?i2_in_low_int:
   736                           	opt stack 0
   737  000019                     WriteTimer0@timer:
   738                           	opt stack 0
   739  000019                     i2memcpy@s1:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x18
   743  000019                     	ds	2
   744  00001B                     ??_timer0_int_handler:
   745  00001B                     i2start_i2c_slave_reply@length:
   746                           	opt stack 0
   747  00001B                     i2memcpy@n:
   748                           	opt stack 0
   749                           
   750                           ; 2 bytes @ 0x1A
   751  00001B                     	ds	1
   752  00001C                     ??_readMessages:
   753                           
   754                           ; 0 bytes @ 0x1B
   755  00001C                     	ds	1
   756  00001D                     i2memcpy@d:
   757                           	opt stack 0
   758  00001D                     readMessages@buf:
   759                           	opt stack 0
   760                           
   761                           ; 4 bytes @ 0x1C
   762  00001D                     	ds	2
   763  00001F                     i2memcpy@s:
   764                           	opt stack 0
   765                           
   766                           ; 2 bytes @ 0x1E
   767  00001F                     	ds	2
   768  000021                     i2send_msg@qptr:
   769                           	opt stack 0
   770                           
   771                           ; 2 bytes @ 0x20
   772  000021                     	ds	2
   773  000023                     i2send_msg@length:
   774                           	opt stack 0
   775                           
   776                           ; 1 bytes @ 0x22
   777  000023                     	ds	1
   778  000024                     i2send_msg@msgtype:
   779                           	opt stack 0
   780                           
   781                           ; 1 bytes @ 0x23
   782  000024                     	ds	1
   783  000025                     i2send_msg@data:
   784                           	opt stack 0
   785                           
   786                           ; 2 bytes @ 0x24
   787  000025                     	ds	2
   788  000027                     ??i2_send_msg:
   789                           
   790                           ; 0 bytes @ 0x26
   791  000027                     	ds	1
   792  000028                     i2send_msg@tlength:
   793                           	opt stack 0
   794                           
   795                           ; 2 bytes @ 0x27
   796  000028                     	ds	2
   797  00002A                     i2send_msg@slot:
   798                           	opt stack 0
   799                           
   800                           ; 1 bytes @ 0x29
   801  00002A                     	ds	1
   802  00002B                     i2send_msg@qmsg:
   803                           	opt stack 0
   804                           
   805                           ; 2 bytes @ 0x2A
   806  00002B                     	ds	2
   807  00002D                     ToMainHigh_sendmsg@msgtype:
   808                           	opt stack 0
   809                           
   810                           ; 1 bytes @ 0x2C
   811  00002D                     	ds	1
   812  00002E                     ToMainHigh_sendmsg@data:
   813                           	opt stack 0
   814                           
   815                           ; 2 bytes @ 0x2D
   816  00002E                     	ds	2
   817  000030                     ToMainHigh_sendmsg@length:
   818                           	opt stack 0
   819                           
   820                           ; 1 bytes @ 0x2F
   821  000030                     	ds	1
   822  000031                     ??_i2c_int_handler:
   823                           
   824                           ; 0 bytes @ 0x30
   825  000031                     	ds	2
   826                           tblptru	equ	0xFF8
   827                           tblptrh	equ	0xFF7
   828                           tblptrl	equ	0xFF6
   829                           tablat	equ	0xFF5
   830                           postinc0	equ	0xFEE
   831                           wreg	equ	0xFE8
   832                           postdec1	equ	0xFE5
   833                           fsr1l	equ	0xFE1
   834                           
   835 ;;
   836 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   837 ;;
   838 ;; *************** function _main *****************
   839 ;; Defined at:
   840 ;;		line 189 in file "../src/main.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;		None
   843 ;; Auto vars:     Size  Location     Type
   844 ;;  ic             28   34[BANK2 ] struct __i2c_comm
   845 ;;  uc             12   20[BANK2 ] struct __uart_comm
   846 ;;  msgbuffer      11    0[BANK2 ] unsigned char [11]
   847 ;;  t1thread_dat    2   18[BANK2 ] struct __timer1_thread_s
   848 ;;  t0thread_dat    2   16[BANK2 ] struct __timer0_thread_s
   849 ;;  uthread_data    2   14[BANK2 ] struct __uart_thread_str
   850 ;;  msgtype         1   33[BANK2 ] unsigned char 
   851 ;;  length          1   32[BANK2 ] char 
   852 ;;  portconfig      1   13[BANK2 ] unsigned char 
   853 ;;  config2         1   12[BANK2 ] unsigned char 
   854 ;;  config1         1   11[BANK2 ] unsigned char 
   855 ;;  i               1    0        unsigned char 
   856 ;;  last_reg_rec    1    0        unsigned char 
   857 ;;  c               1    0        unsigned char 
   858 ;; Return value:  Size  Location     Type
   859 ;;		None               void
   860 ;; Registers used:
   861 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   867 ;;      Params:         0       0       0       0       0
   868 ;;      Locals:         0       0       0      62       0
   869 ;;      Temps:          0       1       0       0       0
   870 ;;      Totals:         0       1       0      62       0
   871 ;;Total ram usage:       63 bytes
   872 ;; Hardware stack levels required when called:   12
   873 ;; This function calls:
   874 ;;		_OpenTimer0
   875 ;;		_OpenTimer1
   876 ;;		_OpenUSART
   877 ;;		_ToMainHigh_recvmsg
   878 ;;		_ToMainLow_recvmsg
   879 ;;		_WriteTimer1
   880 ;;		_block_on_To_msgqueues
   881 ;;		_enable_interrupts
   882 ;;		_i2c_configure_slave
   883 ;;		_init_i2c
   884 ;;		_init_queues
   885 ;;		_init_timer1_lthread
   886 ;;		_init_uart_recv
   887 ;;		_timer0_lthread
   888 ;;		_timer1_lthread
   889 ;;		_uart_lthread
   890 ;; This function is called by:
   891 ;;		Startup code after reset
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	text0
   896  0009C4                     __ptext0:
   897                           	opt stack 0
   898  0009C4                     _main:
   899                           	opt stack 19
   900                           
   901                           ;main.c: 190: char c;
   902                           ;main.c: 191: signed char length;
   903                           ;main.c: 192: unsigned char msgtype;
   904                           ;main.c: 193: unsigned char last_reg_recvd;
   905                           ;main.c: 194: uart_comm uc;
   906                           ;main.c: 195: i2c_comm ic;
   907                           ;main.c: 196: unsigned char msgbuffer[10 + 1];
   908                           ;main.c: 197: unsigned char i;
   909                           ;main.c: 198: uart_thread_struct uthread_data;
   910                           ;main.c: 199: timer1_thread_struct t1thread_data;
   911                           ;main.c: 200: timer0_thread_struct t0thread_data;
   912                           ;main.c: 203: unsigned char config1 = 0x00, config2 = 0x00, portconfig = 0x00;
   913                           
   914                           ;incstack = 0
   915  0009C4  0100               	movlb	0	; () banked
   916  0009C6  6FBB               	movwf	??_main& (0+255),b
   917  0009C8  0E00               	movlw	0
   918  0009CA  0102               	movlb	2	; () banked
   919  0009CC  0102               	movlb	2	; () banked
   920  0009CE  6F0B               	movwf	main@config1& (0+255),b
   921  0009D0  0100               	movlb	0	; () banked
   922  0009D2  51BB               	movf	??_main& (0+255),w,b
   923  0009D4  0100               	movlb	0	; () banked
   924  0009D6  6FBB               	movwf	??_main& (0+255),b
   925  0009D8  0E00               	movlw	0
   926  0009DA  0102               	movlb	2	; () banked
   927  0009DC  0102               	movlb	2	; () banked
   928  0009DE  6F0C               	movwf	main@config2& (0+255),b
   929  0009E0  0100               	movlb	0	; () banked
   930  0009E2  51BB               	movf	??_main& (0+255),w,b
   931  0009E4  0100               	movlb	0	; () banked
   932  0009E6  6FBB               	movwf	??_main& (0+255),b
   933  0009E8  0E00               	movlw	0
   934  0009EA  0102               	movlb	2	; () banked
   935  0009EC  0102               	movlb	2	; () banked
   936  0009EE  6F0D               	movwf	main@portconfig& (0+255),b
   937  0009F0  0100               	movlb	0	; () banked
   938  0009F2  51BB               	movf	??_main& (0+255),w,b
   939                           
   940                           ; BSR set to: 0
   941                           ;main.c: 211: OSCCON = 0x82;
   942  0009F4  0E82               	movlw	130
   943  0009F6  6ED3               	movwf	4051,c	;volatile
   944                           
   945                           ; BSR set to: 0
   946                           ;main.c: 212: OSCTUNEbits.PLLEN = 1;
   947  0009F8  8C9B               	bsf	3995,6,c	;volatile
   948                           
   949                           ; BSR set to: 0
   950                           ;main.c: 231: init_uart_recv(&uc);
   951  0009FA  0102               	movlb	2	; () banked
   952  0009FC  0E02               	movlw	high main@uc
   953  0009FE  0100               	movlb	0	; () banked
   954  000A00  0100               	movlb	0	; () banked
   955  000A02  6F98               	movwf	(init_uart_recv@uc+1)& (0+255),b
   956  000A04  0102               	movlb	2	; () banked
   957  000A06  0E14               	movlw	low main@uc
   958  000A08  0100               	movlb	0	; () banked
   959  000A0A  0100               	movlb	0	; () banked
   960  000A0C  6F97               	movwf	init_uart_recv@uc& (0+255),b
   961  000A0E  ECEE  F00D         	call	_init_uart_recv	;wreg free
   962                           
   963                           ;main.c: 234: init_i2c(&ic);
   964  000A12  0102               	movlb	2	; () banked
   965  000A14  0E02               	movlw	high main@ic
   966  000A16  0100               	movlb	0	; () banked
   967  000A18  0100               	movlb	0	; () banked
   968  000A1A  6F98               	movwf	(init_i2c@ic+1)& (0+255),b
   969  000A1C  0102               	movlb	2	; () banked
   970  000A1E  0E22               	movlw	low main@ic
   971  000A20  0100               	movlb	0	; () banked
   972  000A22  0100               	movlb	0	; () banked
   973  000A24  6F97               	movwf	init_i2c@ic& (0+255),b
   974  000A26  ECCF  F00B         	call	_init_i2c	;wreg free
   975                           
   976                           ;main.c: 237: init_timer1_lthread(&t1thread_data);
   977  000A2A  0102               	movlb	2	; () banked
   978  000A2C  0E02               	movlw	high main@t1thread_data
   979  000A2E  0100               	movlb	0	; () banked
   980  000A30  0100               	movlb	0	; () banked
   981  000A32  6F98               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   982  000A34  0102               	movlb	2	; () banked
   983  000A36  0E12               	movlw	low main@t1thread_data
   984  000A38  0100               	movlb	0	; () banked
   985  000A3A  0100               	movlb	0	; () banked
   986  000A3C  6F97               	movwf	init_timer1_lthread@tptr& (0+255),b
   987  000A3E  EC59  F00E         	call	_init_timer1_lthread	;wreg free
   988                           
   989                           ;main.c: 240: init_queues();
   990  000A42  EC98  F00B         	call	_init_queues	;wreg free
   991                           
   992                           ;main.c: 247: PORTB = 0xFF;
   993  000A46  6881               	setf	3969,c	;volatile
   994                           
   995                           ;main.c: 252: TRISA = 0x0;
   996  000A48  0E00               	movlw	0
   997  000A4A  6E92               	movwf	3986,c	;volatile
   998                           
   999                           ;main.c: 253: LATA = 0x0;
  1000  000A4C  0E00               	movlw	0
  1001  000A4E  6E89               	movwf	3977,c	;volatile
  1002                           
  1003                           ;main.c: 267: OpenTimer0(0b11111111 & 0b11111111 & 0b11111111 & 0b11111111);
  1004  000A50  0EFF               	movlw	255
  1005  000A52  ECAF  F00D         	call	_OpenTimer0
  1006                           
  1007                           ;main.c: 276: OpenTimer1(0b11111111 & 0b11001111 & 0b11111111 & 0b11111111 & 0b11110111 
      +                          & 0b11111111);
  1008  000A56  0EC7               	movlw	199
  1009  000A58  EC46  F00D         	call	_OpenTimer1
  1010                           
  1011                           ;main.c: 277: WriteTimer1(0xFFCF);
  1012  000A5C  0EFF               	movlw	255
  1013  000A5E  0100               	movlb	0	; () banked
  1014  000A60  0100               	movlb	0	; () banked
  1015  000A62  6F98               	movwf	(WriteTimer1@timer1+1)& (0+255),b
  1016  000A64  0ECF               	movlw	207
  1017  000A66  0100               	movlb	0	; () banked
  1018  000A68  6F97               	movwf	WriteTimer1@timer1& (0+255),b
  1019  000A6A  EC6B  F00E         	call	_WriteTimer1	;wreg free
  1020                           
  1021                           ;main.c: 286: IPR1bits.TMR1IP = 0;
  1022  000A6E  909F               	bcf	3999,0,c	;volatile
  1023                           
  1024                           ;main.c: 288: IPR1bits.TXIP = 0;
  1025  000A70  989F               	bcf	3999,4,c	;volatile
  1026                           
  1027                           ;main.c: 290: IPR1bits.SSPIP = 1;
  1028  000A72  869F               	bsf	3999,3,c	;volatile
  1029                           
  1030                           ;main.c: 299: i2c_configure_slave(0x9E);
  1031  000A74  0E9E               	movlw	158
  1032  000A76  EC02  F00E         	call	_i2c_configure_slave
  1033                           
  1034                           ;main.c: 314: PIE1bits.SSPIE = 1;
  1035  000A7A  869D               	bsf	3997,3,c	;volatile
  1036                           
  1037                           ;main.c: 315: PIE1bits.RCIE = 1;
  1038  000A7C  8A9D               	bsf	3997,5,c	;volatile
  1039                           
  1040                           ;main.c: 330: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1041                           ;main.c: 331: 0b11111111 & 0b11111111, 155);
  1042  000A7E  0E00               	movlw	0
  1043  000A80  0100               	movlb	0	; () banked
  1044  000A82  0100               	movlb	0	; () banked
  1045  000A84  6F98               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1046  000A86  0E9B               	movlw	155
  1047  000A88  0100               	movlb	0	; () banked
  1048  000A8A  6F97               	movwf	OpenUSART@spbrg& (0+255),b
  1049  000A8C  0E7C               	movlw	124
  1050  000A8E  ECCD  F009         	call	_OpenUSART
  1051                           
  1052                           ;main.c: 332: BAUDCONbits.BRG16 = 0;
  1053  000A92  96B8               	bcf	4024,3,c	;volatile
  1054                           
  1055                           ;main.c: 333: RCSTAbits.SPEN = 1;
  1056  000A94  8EAB               	bsf	4011,7,c	;volatile
  1057                           
  1058                           ;main.c: 334: RCSTAbits.CREN = 1;
  1059  000A96  88AB               	bsf	4011,4,c	;volatile
  1060                           
  1061                           ;main.c: 339: bufferFlag = 0x0;
  1062  000A98  0E00               	movlw	0
  1063  000A9A  0100               	movlb	0	; () banked
  1064  000A9C  0100               	movlb	0	; () banked
  1065  000A9E  6FBD               	movwf	(_bufferFlag+1)& (0+255),b
  1066  000AA0  0E00               	movlw	0
  1067  000AA2  0100               	movlb	0	; () banked
  1068  000AA4  6FBC               	movwf	_bufferFlag& (0+255),b
  1069                           
  1070                           ; BSR set to: 0
  1071                           ;main.c: 342: enable_interrupts();
  1072  000AA6  EC93  F00E         	call	_enable_interrupts	;wreg free
  1073  000AAA                     l3129:
  1074                           
  1075                           ;main.c: 356: block_on_To_msgqueues();
  1076  000AAA  ECE3  F00A         	call	_block_on_To_msgqueues	;wreg free
  1077                           
  1078                           ;main.c: 363: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1079  000AAE  0102               	movlb	2	; () banked
  1080  000AB0  0E02               	movlw	high main@msgtype
  1081  000AB2  0100               	movlb	0	; () banked
  1082  000AB4  0100               	movlb	0	; () banked
  1083  000AB6  6FB0               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1084  000AB8  0102               	movlb	2	; () banked
  1085  000ABA  0E21               	movlw	low main@msgtype
  1086  000ABC  0100               	movlb	0	; () banked
  1087  000ABE  0100               	movlb	0	; () banked
  1088  000AC0  6FAF               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1089  000AC2  0102               	movlb	2	; () banked
  1090  000AC4  0E02               	movlw	high main@msgbuffer
  1091  000AC6  0100               	movlb	0	; () banked
  1092  000AC8  0100               	movlb	0	; () banked
  1093  000ACA  6FB2               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1094  000ACC  0102               	movlb	2	; () banked
  1095  000ACE  0E00               	movlw	low main@msgbuffer
  1096  000AD0  0100               	movlb	0	; () banked
  1097  000AD2  0100               	movlb	0	; () banked
  1098  000AD4  6FB1               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1099  000AD6  0E0A               	movlw	10
  1100  000AD8  ECE7  F00C         	call	_ToMainHigh_recvmsg
  1101  000ADC  0102               	movlb	2	; () banked
  1102  000ADE  0102               	movlb	2	; () banked
  1103  000AE0  6F20               	movwf	main@length& (0+255),b
  1104                           
  1105                           ; BSR set to: 2
  1106                           ;main.c: 364: if (length < 0) {
  1107  000AE2  0102               	movlb	2	; () banked
  1108  000AE4  0102               	movlb	2	; () banked
  1109  000AE6  BF20               	btfsc	main@length& (0+255),7,b
  1110  000AE8  D05C               	goto	l3145
  1111  000AEA  D052               	goto	l3143
  1112  000AEC                     l3137:
  1113                           
  1114                           ; BSR set to: 2
  1115                           ;main.c: 372: {
  1116                           ;main.c: 373: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1117  000AEC  0102               	movlb	2	; () banked
  1118  000AEE  0E02               	movlw	high main@t0thread_data
  1119  000AF0  0100               	movlb	0	; () banked
  1120  000AF2  0100               	movlb	0	; () banked
  1121  000AF4  6F98               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1122  000AF6  0102               	movlb	2	; () banked
  1123  000AF8  0E10               	movlw	low main@t0thread_data
  1124  000AFA  0100               	movlb	0	; () banked
  1125  000AFC  0100               	movlb	0	; () banked
  1126  000AFE  6F97               	movwf	timer0_lthread@tptr& (0+255),b
  1127  000B00  0102               	movlb	2	; () banked
  1128  000B02  0100               	movlb	0	; () banked
  1129  000B04  C221  F099         	movff	main@msgtype,timer0_lthread@msgtype
  1130  000B08  0100               	movlb	0	; () banked
  1131  000B0A  0100               	movlb	0	; () banked
  1132  000B0C  6B9A               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1133  000B0E  0102               	movlb	2	; () banked
  1134  000B10  0102               	movlb	2	; () banked
  1135  000B12  5120               	movf	main@length& (0+255),w,b
  1136  000B14  0100               	movlb	0	; () banked
  1137  000B16  0100               	movlb	0	; () banked
  1138  000B18  6F9B               	movwf	timer0_lthread@length& (0+255),b
  1139  000B1A  0100               	movlb	0	; () banked
  1140  000B1C  6B9C               	clrf	(timer0_lthread@length+1)& (0+255),b
  1141  000B1E  0100               	movlb	0	; () banked
  1142  000B20  BF9B               	btfsc	timer0_lthread@length& (0+255),7,b
  1143  000B22  079C               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1144  000B24  0102               	movlb	2	; () banked
  1145  000B26  0E02               	movlw	high main@msgbuffer
  1146  000B28  0100               	movlb	0	; () banked
  1147  000B2A  0100               	movlb	0	; () banked
  1148  000B2C  6F9E               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1149  000B2E  0102               	movlb	2	; () banked
  1150  000B30  0E00               	movlw	low main@msgbuffer
  1151  000B32  0100               	movlb	0	; () banked
  1152  000B34  0100               	movlb	0	; () banked
  1153  000B36  6F9D               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1154  000B38  EC50  F00E         	call	_timer0_lthread	;wreg free
  1155                           
  1156                           ;main.c: 374: break;
  1157  000B3C  D032               	goto	l3145
  1158  000B3E                     l3139:
  1159                           
  1160                           ;main.c: 377: {
  1161                           ;main.c: 378: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1162  000B3E  0102               	movlb	2	; () banked
  1163  000B40  0E02               	movlw	high main@uthread_data
  1164  000B42  0100               	movlb	0	; () banked
  1165  000B44  0100               	movlb	0	; () banked
  1166  000B46  6F9D               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1167  000B48  0102               	movlb	2	; () banked
  1168  000B4A  0E0E               	movlw	low main@uthread_data
  1169  000B4C  0100               	movlb	0	; () banked
  1170  000B4E  0100               	movlb	0	; () banked
  1171  000B50  6F9C               	movwf	uart_lthread@uptr& (0+255),b
  1172  000B52  0102               	movlb	2	; () banked
  1173  000B54  0100               	movlb	0	; () banked
  1174  000B56  C221  F09E         	movff	main@msgtype,uart_lthread@msgtype
  1175  000B5A  0100               	movlb	0	; () banked
  1176  000B5C  0100               	movlb	0	; () banked
  1177  000B5E  6B9F               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1178  000B60  0102               	movlb	2	; () banked
  1179  000B62  0102               	movlb	2	; () banked
  1180  000B64  5120               	movf	main@length& (0+255),w,b
  1181  000B66  0100               	movlb	0	; () banked
  1182  000B68  0100               	movlb	0	; () banked
  1183  000B6A  6FA0               	movwf	uart_lthread@length& (0+255),b
  1184  000B6C  0100               	movlb	0	; () banked
  1185  000B6E  6BA1               	clrf	(uart_lthread@length+1)& (0+255),b
  1186  000B70  0100               	movlb	0	; () banked
  1187  000B72  BFA0               	btfsc	uart_lthread@length& (0+255),7,b
  1188  000B74  07A1               	decf	(uart_lthread@length+1)& (0+255),f,b
  1189  000B76  0102               	movlb	2	; () banked
  1190  000B78  0E02               	movlw	high main@msgbuffer
  1191  000B7A  0100               	movlb	0	; () banked
  1192  000B7C  0100               	movlb	0	; () banked
  1193  000B7E  6FA3               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1194  000B80  0102               	movlb	2	; () banked
  1195  000B82  0E00               	movlw	low main@msgbuffer
  1196  000B84  0100               	movlb	0	; () banked
  1197  000B86  0100               	movlb	0	; () banked
  1198  000B88  6FA2               	movwf	uart_lthread@msgbuffer& (0+255),b
  1199  000B8A  ECB0  F008         	call	_uart_lthread	;wreg free
  1200                           
  1201                           ;main.c: 379: break;
  1202  000B8E  D009               	goto	l3145
  1203  000B90                     l3143:
  1204  000B90  0102               	movlb	2	; () banked
  1205  000B92  0102               	movlb	2	; () banked
  1206  000B94  5121               	movf	main@msgtype& (0+255),w,b
  1207                           
  1208                           ; Switch size 1, requested type "space"
  1209                           ; Number of cases is 2, Range of values is 10 to 40
  1210                           ; switch strategies available:
  1211                           ; Name         Instructions Cycles
  1212                           ; simple_byte            7     4 (average)
  1213                           ;	Chosen strategy is simple_byte
  1214  000B96  0A0A               	xorlw	10	; case 10
  1215  000B98  B4D8               	btfsc	status,2,c
  1216  000B9A  D7A8               	goto	l3137
  1217  000B9C  0A22               	xorlw	34	; case 40
  1218  000B9E  B4D8               	btfsc	status,2,c
  1219  000BA0  D7CE               	goto	l3139
  1220  000BA2                     l3145:
  1221                           
  1222                           ;main.c: 387: }
  1223                           ;main.c: 390: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1224  000BA2  0102               	movlb	2	; () banked
  1225  000BA4  0E02               	movlw	high main@msgtype
  1226  000BA6  0100               	movlb	0	; () banked
  1227  000BA8  0100               	movlb	0	; () banked
  1228  000BAA  6FB0               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1229  000BAC  0102               	movlb	2	; () banked
  1230  000BAE  0E21               	movlw	low main@msgtype
  1231  000BB0  0100               	movlb	0	; () banked
  1232  000BB2  0100               	movlb	0	; () banked
  1233  000BB4  6FAF               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1234  000BB6  0102               	movlb	2	; () banked
  1235  000BB8  0E02               	movlw	high main@msgbuffer
  1236  000BBA  0100               	movlb	0	; () banked
  1237  000BBC  0100               	movlb	0	; () banked
  1238  000BBE  6FB2               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1239  000BC0  0102               	movlb	2	; () banked
  1240  000BC2  0E00               	movlw	low main@msgbuffer
  1241  000BC4  0100               	movlb	0	; () banked
  1242  000BC6  0100               	movlb	0	; () banked
  1243  000BC8  6FB1               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1244  000BCA  0E0A               	movlw	10
  1245  000BCC  ECC6  F00C         	call	_ToMainLow_recvmsg
  1246  000BD0  0102               	movlb	2	; () banked
  1247  000BD2  0102               	movlb	2	; () banked
  1248  000BD4  6F20               	movwf	main@length& (0+255),b
  1249                           
  1250                           ; BSR set to: 2
  1251                           ;main.c: 391: if (length < 0) {
  1252  000BD6  0102               	movlb	2	; () banked
  1253  000BD8  0102               	movlb	2	; () banked
  1254  000BDA  BF20               	btfsc	main@length& (0+255),7,b
  1255  000BDC  D766               	goto	l3129
  1256  000BDE  D029               	goto	l3155
  1257  000BE0                     l3151:
  1258                           
  1259                           ; BSR set to: 2
  1260                           ;main.c: 399: {
  1261                           ;main.c: 400: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1262  000BE0  0102               	movlb	2	; () banked
  1263  000BE2  0E02               	movlw	high main@t1thread_data
  1264  000BE4  0100               	movlb	0	; () banked
  1265  000BE6  0100               	movlb	0	; () banked
  1266  000BE8  6FB2               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1267  000BEA  0102               	movlb	2	; () banked
  1268  000BEC  0E12               	movlw	low main@t1thread_data
  1269  000BEE  0100               	movlb	0	; () banked
  1270  000BF0  0100               	movlb	0	; () banked
  1271  000BF2  6FB1               	movwf	timer1_lthread@tptr& (0+255),b
  1272  000BF4  0102               	movlb	2	; () banked
  1273  000BF6  0100               	movlb	0	; () banked
  1274  000BF8  C221  F0B3         	movff	main@msgtype,timer1_lthread@msgtype
  1275  000BFC  0100               	movlb	0	; () banked
  1276  000BFE  0100               	movlb	0	; () banked
  1277  000C00  6BB4               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1278  000C02  0102               	movlb	2	; () banked
  1279  000C04  0102               	movlb	2	; () banked
  1280  000C06  5120               	movf	main@length& (0+255),w,b
  1281  000C08  0100               	movlb	0	; () banked
  1282  000C0A  0100               	movlb	0	; () banked
  1283  000C0C  6FB5               	movwf	timer1_lthread@length& (0+255),b
  1284  000C0E  0100               	movlb	0	; () banked
  1285  000C10  6BB6               	clrf	(timer1_lthread@length+1)& (0+255),b
  1286  000C12  0100               	movlb	0	; () banked
  1287  000C14  BFB5               	btfsc	timer1_lthread@length& (0+255),7,b
  1288  000C16  07B6               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1289  000C18  0102               	movlb	2	; () banked
  1290  000C1A  0E02               	movlw	high main@msgbuffer
  1291  000C1C  0100               	movlb	0	; () banked
  1292  000C1E  0100               	movlb	0	; () banked
  1293  000C20  6FB8               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1294  000C22  0102               	movlb	2	; () banked
  1295  000C24  0E00               	movlw	low main@msgbuffer
  1296  000C26  0100               	movlb	0	; () banked
  1297  000C28  0100               	movlb	0	; () banked
  1298  000C2A  6FB7               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1299  000C2C  EC5F  F00B         	call	_timer1_lthread	;wreg free
  1300                           
  1301                           ;main.c: 401: break;
  1302  000C30  D73C               	goto	l3129
  1303  000C32                     l3155:
  1304  000C32  0102               	movlb	2	; () banked
  1305  000C34  0102               	movlb	2	; () banked
  1306  000C36  5121               	movf	main@msgtype& (0+255),w,b
  1307                           
  1308                           ; Switch size 1, requested type "space"
  1309                           ; Number of cases is 2, Range of values is 11 to 30
  1310                           ; switch strategies available:
  1311                           ; Name         Instructions Cycles
  1312                           ; simple_byte            7     4 (average)
  1313                           ;	Chosen strategy is simple_byte
  1314  000C38  0A0B               	xorlw	11	; case 11
  1315  000C3A  B4D8               	btfsc	status,2,c
  1316  000C3C  D7D1               	goto	l3151
  1317  000C3E  0A15               	xorlw	21	; case 30
  1318  000C40  D734               	goto	l3129
  1319  000C42                     __end_of_main:
  1320                           	opt stack 0
  1321                           tblptru	equ	0xFF8
  1322                           tblptrh	equ	0xFF7
  1323                           tblptrl	equ	0xFF6
  1324                           tablat	equ	0xFF5
  1325                           postinc0	equ	0xFEE
  1326                           wreg	equ	0xFE8
  1327                           postdec1	equ	0xFE5
  1328                           fsr1l	equ	0xFE1
  1329                           status	equ	0xFD8
  1330                           
  1331 ;; *************** function _uart_lthread *****************
  1332 ;; Defined at:
  1333 ;;		line 13 in file "../src/uart_thread.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;  uptr            2   28[BANK0 ] PTR struct __uart_thread
  1336 ;;		 -> main@uthread_data(2), 
  1337 ;;  msgtype         2   30[BANK0 ] int 
  1338 ;;  length          2   32[BANK0 ] int 
  1339 ;;  msgbuffer       2   34[BANK0 ] PTR unsigned char 
  1340 ;;		 -> main@msgbuffer(11), 
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;		None
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  2   28[BANK0 ] int 
  1345 ;; Registers used:
  1346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1352 ;;      Params:         0       8       0       0       0
  1353 ;;      Locals:         0       0       0       0       0
  1354 ;;      Temps:          0       1       0       0       0
  1355 ;;      Totals:         0       9       0       0       0
  1356 ;;Total ram usage:        9 bytes
  1357 ;; Hardware stack levels used:    1
  1358 ;; Hardware stack levels required when called:    9
  1359 ;; This function calls:
  1360 ;;		_start_i2c_slave_reply
  1361 ;;		_uart_retrieve_buffer
  1362 ;; This function is called by:
  1363 ;;		_main
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           	psect	text1
  1368  001160                     __ptext1:
  1369                           	opt stack 0
  1370  001160                     _uart_lthread:
  1371                           	opt stack 21
  1372                           
  1373                           ;uart_thread.c: 14: if (msgtype == 30) {
  1374                           
  1375                           ; BSR set to: 2
  1376                           ;incstack = 0
  1377  001160  0100               	movlb	0	; () banked
  1378  001162  0100               	movlb	0	; () banked
  1379  001164  519E               	movf	uart_lthread@msgtype& (0+255),w,b
  1380  001166  0A1E               	xorlw	30
  1381  001168  119F               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1382  00116A  B4D8               	btfsc	status,2,c
  1383  00116C  0012               	return	
  1384                           
  1385                           ; BSR set to: 0
  1386                           
  1387                           ; BSR set to: 0
  1388                           
  1389                           ; BSR set to: 0
  1390                           ;uart_thread.c: 16: } else if (msgtype == 40) {
  1391  00116E  0100               	movlb	0	; () banked
  1392  001170  0100               	movlb	0	; () banked
  1393  001172  519E               	movf	uart_lthread@msgtype& (0+255),w,b
  1394  001174  0A28               	xorlw	40
  1395  001176  119F               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1396  001178  A4D8               	btfss	status,2,c
  1397  00117A  0012               	return	
  1398                           
  1399                           ; BSR set to: 0
  1400                           ;uart_thread.c: 18: if (msgbuffer[0] != 0x13) {
  1401  00117C  C0A2  FFD9         	movff	uart_lthread@msgbuffer,fsr2l
  1402  001180  C0A3  FFDA         	movff	uart_lthread@msgbuffer+1,fsr2h
  1403  001184  50DF               	movf	indf2,w,c
  1404  001186  0A13               	xorlw	19
  1405  001188  B4D8               	btfsc	status,2,c
  1406  00118A  D012               	goto	l504
  1407                           
  1408                           ; BSR set to: 0
  1409                           ;uart_thread.c: 19: { LATAbits.LATA1 = 1; };
  1410  00118C  8289               	bsf	3977,1,c	;volatile
  1411                           
  1412                           ;uart_thread.c: 20: { LATAbits.LATA1 = 0; };
  1413  00118E  9289               	bcf	3977,1,c	;volatile
  1414                           
  1415                           ; BSR set to: 0
  1416                           ;uart_thread.c: 22: uart_retrieve_buffer(length, msgbuffer);
  1417  001190  C0A0  F097         	movff	uart_lthread@length,uart_retrieve_buffer@length
  1418  001194  C0A1  F098         	movff	uart_lthread@length+1,uart_retrieve_buffer@length+1
  1419  001198  0100               	movlb	0	; () banked
  1420  00119A  0100               	movlb	0	; () banked
  1421  00119C  C0A3  F09A         	movff	uart_lthread@msgbuffer+1,uart_retrieve_buffer@msgbuffer+1
  1422  0011A0  0100               	movlb	0	; () banked
  1423  0011A2  0100               	movlb	0	; () banked
  1424  0011A4  C0A2  F099         	movff	uart_lthread@msgbuffer,uart_retrieve_buffer@msgbuffer
  1425  0011A8  EC3F  F008         	call	_uart_retrieve_buffer	;wreg free
  1426                           
  1427                           ;uart_thread.c: 24: PIE1bits.TX1IE = 0x1;
  1428  0011AC  889D               	bsf	3997,4,c	;volatile
  1429                           
  1430                           ;uart_thread.c: 25: } else {
  1431  0011AE  0012               	return	
  1432  0011B0                     l504:
  1433                           
  1434                           ; BSR set to: 0
  1435                           ;uart_thread.c: 26: { LATAbits.LATA1 = 1; };
  1436  0011B0  8289               	bsf	3977,1,c	;volatile
  1437                           
  1438                           ;uart_thread.c: 27: { LATAbits.LATA1 = 0; };
  1439  0011B2  9289               	bcf	3977,1,c	;volatile
  1440                           
  1441                           ;uart_thread.c: 28: { LATAbits.LATA1 = 1; };
  1442  0011B4  8289               	bsf	3977,1,c	;volatile
  1443                           
  1444                           ;uart_thread.c: 29: { LATAbits.LATA1 = 0; };
  1445  0011B6  9289               	bcf	3977,1,c	;volatile
  1446                           
  1447                           ; BSR set to: 0
  1448                           ;uart_thread.c: 31: motorEncoderBuffer[0] = 0x07;
  1449  0011B8  0100               	movlb	0	; () banked
  1450  0011BA  6FA4               	movwf	??_uart_lthread& (0+255),b
  1451  0011BC  0E07               	movlw	7
  1452  0011BE  0100               	movlb	0	; () banked
  1453  0011C0  0100               	movlb	0	; () banked
  1454  0011C2  6FBE               	movwf	_motorEncoderBuffer& (0+255),b
  1455  0011C4  0100               	movlb	0	; () banked
  1456  0011C6  51A4               	movf	??_uart_lthread& (0+255),w,b
  1457                           
  1458                           ;uart_thread.c: 32: motorEncoderBuffer[1] = 0x02;
  1459  0011C8  0100               	movlb	0	; () banked
  1460  0011CA  6FA4               	movwf	??_uart_lthread& (0+255),b
  1461  0011CC  0E02               	movlw	2
  1462  0011CE  0100               	movlb	0	; () banked
  1463  0011D0  0100               	movlb	0	; () banked
  1464  0011D2  6FBF               	movwf	(_motorEncoderBuffer+1)& (0+255),b
  1465  0011D4  0100               	movlb	0	; () banked
  1466  0011D6  51A4               	movf	??_uart_lthread& (0+255),w,b
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;uart_thread.c: 33: motorEncoderBuffer[2] = timer0Counter;
  1470  0011D8  C053  F0C0         	movff	_timer0Counter,_motorEncoderBuffer+2
  1471                           
  1472                           ; BSR set to: 0
  1473                           ;uart_thread.c: 34: motorEncoderBuffer[3] = timer1Counter;
  1474  0011DC  C055  F0C1         	movff	_timer1Counter,_motorEncoderBuffer+3
  1475                           
  1476                           ; BSR set to: 0
  1477                           ;uart_thread.c: 35: motorEncoderBuffer[4] = timer0Counter ^ timer1Counter;
  1478  0011E0  5053               	movf	_timer0Counter,w,c
  1479  0011E2  1855               	xorwf	_timer1Counter,w,c
  1480  0011E4  0100               	movlb	0	; () banked
  1481  0011E6  0100               	movlb	0	; () banked
  1482  0011E8  6FC2               	movwf	(_motorEncoderBuffer+4)& (0+255),b
  1483                           
  1484                           ; BSR set to: 0
  1485                           ;uart_thread.c: 36: length = 5;
  1486  0011EA  0E00               	movlw	0
  1487  0011EC  0100               	movlb	0	; () banked
  1488  0011EE  0100               	movlb	0	; () banked
  1489  0011F0  6FA1               	movwf	(uart_lthread@length+1)& (0+255),b
  1490  0011F2  0E05               	movlw	5
  1491  0011F4  0100               	movlb	0	; () banked
  1492  0011F6  6FA0               	movwf	uart_lthread@length& (0+255),b
  1493                           
  1494                           ; BSR set to: 0
  1495                           ;uart_thread.c: 37: start_i2c_slave_reply(length, motorEncoderBuffer);
  1496  0011F8  0100               	movlb	0	; () banked
  1497  0011FA  0E00               	movlw	high _motorEncoderBuffer
  1498  0011FC  0100               	movlb	0	; () banked
  1499  0011FE  0100               	movlb	0	; () banked
  1500  001200  6F98               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1501  001202  0100               	movlb	0	; () banked
  1502  001204  0EBE               	movlw	low _motorEncoderBuffer
  1503  001206  0100               	movlb	0	; () banked
  1504  001208  0100               	movlb	0	; () banked
  1505  00120A  6F97               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1506  00120C  0100               	movlb	0	; () banked
  1507  00120E  0100               	movlb	0	; () banked
  1508  001210  51A0               	movf	uart_lthread@length& (0+255),w,b
  1509  001212  ECBC  F006         	call	_start_i2c_slave_reply
  1510                           
  1511                           ;uart_thread.c: 39: timer0Counter = 0;
  1512  001216  0E00               	movlw	0
  1513  001218  6E54               	movwf	_timer0Counter+1,c
  1514  00121A  0E00               	movlw	0
  1515  00121C  6E53               	movwf	_timer0Counter,c
  1516                           
  1517                           ;uart_thread.c: 40: timer1Counter = 0;
  1518  00121E  0E00               	movlw	0
  1519  001220  6E56               	movwf	_timer1Counter+1,c
  1520  001222  0E00               	movlw	0
  1521  001224  6E55               	movwf	_timer1Counter,c
  1522  001226  0012               	return	
  1523  001228                     __end_of_uart_lthread:
  1524                           	opt stack 0
  1525                           tblptru	equ	0xFF8
  1526                           tblptrh	equ	0xFF7
  1527                           tblptrl	equ	0xFF6
  1528                           tablat	equ	0xFF5
  1529                           postinc0	equ	0xFEE
  1530                           wreg	equ	0xFE8
  1531                           postdec1	equ	0xFE5
  1532                           fsr1l	equ	0xFE1
  1533                           indf2	equ	0xFDF
  1534                           fsr2h	equ	0xFDA
  1535                           fsr2l	equ	0xFD9
  1536                           status	equ	0xFD8
  1537                           
  1538 ;; *************** function _uart_retrieve_buffer *****************
  1539 ;; Defined at:
  1540 ;;		line 28 in file "../src/my_uart.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  length          2   23[BANK0 ] int 
  1543 ;;  msgbuffer       2   25[BANK0 ] PTR unsigned char 
  1544 ;;		 -> main@msgbuffer(11), 
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;		None
  1547 ;; Return value:  Size  Location     Type
  1548 ;;		None               void
  1549 ;; Registers used:
  1550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1556 ;;      Params:         0       4       0       0       0
  1557 ;;      Locals:         0       0       0       0       0
  1558 ;;      Temps:          0       0       0       0       0
  1559 ;;      Totals:         0       4       0       0       0
  1560 ;;Total ram usage:        4 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; Hardware stack levels required when called:    8
  1563 ;; This function calls:
  1564 ;;		Nothing
  1565 ;; This function is called by:
  1566 ;;		_uart_lthread
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           	psect	text2
  1571  00107E                     __ptext2:
  1572                           	opt stack 0
  1573  00107E                     _uart_retrieve_buffer:
  1574                           	opt stack 21
  1575                           
  1576                           ;my_uart.c: 30: uc_ptr->Tx_buflen = 0;
  1577                           
  1578                           ;incstack = 0
  1579  00107E  0100               	movlb	0	; () banked
  1580  001080  EE20 F00A          	lfsr	2,10
  1581  001084  0100               	movlb	0	; () banked
  1582  001086  51C5               	movf	_uc_ptr& (0+255),w,b
  1583  001088  26D9               	addwf	fsr2l,f,c
  1584  00108A  0100               	movlb	0	; () banked
  1585  00108C  51C6               	movf	(_uc_ptr+1)& (0+255),w,b
  1586  00108E  22DA               	addwfc	fsr2h,f,c
  1587  001090  0E00               	movlw	0
  1588  001092  6EDF               	movwf	indf2,c
  1589                           
  1590                           ; BSR set to: 0
  1591                           ;my_uart.c: 33: if (msgbuffer[0] == 0x01 && msgbuffer[4] == 0) {
  1592  001094  0E01               	movlw	1
  1593  001096  C099  FFD9         	movff	uart_retrieve_buffer@msgbuffer,fsr2l
  1594  00109A  C09A  FFDA         	movff	uart_retrieve_buffer@msgbuffer+1,fsr2h
  1595  00109E  62DF               	cpfseq	indf2,c
  1596  0010A0  D03B               	goto	l3515
  1597                           
  1598                           ; BSR set to: 0
  1599  0010A2  0100               	movlb	0	; () banked
  1600  0010A4  EE20 F004          	lfsr	2,4
  1601  0010A8  0100               	movlb	0	; () banked
  1602  0010AA  5199               	movf	uart_retrieve_buffer@msgbuffer& (0+255),w,b
  1603  0010AC  26D9               	addwf	fsr2l,f,c
  1604  0010AE  0100               	movlb	0	; () banked
  1605  0010B0  519A               	movf	(uart_retrieve_buffer@msgbuffer+1)& (0+255),w,b
  1606  0010B2  22DA               	addwfc	fsr2h,f,c
  1607  0010B4  50DF               	movf	indf2,w,c
  1608  0010B6  A4D8               	btfss	status,2,c
  1609  0010B8  D02F               	goto	l3515
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;my_uart.c: 35: uc_ptr->msg_length = 2;
  1613  0010BA  0100               	movlb	0	; () banked
  1614  0010BC  EE20 F00B          	lfsr	2,11
  1615  0010C0  0100               	movlb	0	; () banked
  1616  0010C2  51C5               	movf	_uc_ptr& (0+255),w,b
  1617  0010C4  26D9               	addwf	fsr2l,f,c
  1618  0010C6  0100               	movlb	0	; () banked
  1619  0010C8  51C6               	movf	(_uc_ptr+1)& (0+255),w,b
  1620  0010CA  22DA               	addwfc	fsr2h,f,c
  1621  0010CC  0E02               	movlw	2
  1622  0010CE  6EDF               	movwf	indf2,c
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;my_uart.c: 36: uc_ptr->Tx_buffer[0] = msgbuffer[2];
  1626  0010D0  0100               	movlb	0	; () banked
  1627  0010D2  EE20 F002          	lfsr	2,2
  1628  0010D6  0100               	movlb	0	; () banked
  1629  0010D8  5199               	movf	uart_retrieve_buffer@msgbuffer& (0+255),w,b
  1630  0010DA  26D9               	addwf	fsr2l,f,c
  1631  0010DC  0100               	movlb	0	; () banked
  1632  0010DE  519A               	movf	(uart_retrieve_buffer@msgbuffer+1)& (0+255),w,b
  1633  0010E0  22DA               	addwfc	fsr2h,f,c
  1634  0010E2  C0C5  FFE1         	movff	_uc_ptr,fsr1l
  1635  0010E6  C0C6  FFE2         	movff	_uc_ptr+1,fsr1h
  1636  0010EA  CFDF FFE7          	movff	indf2,indf1
  1637                           
  1638                           ; BSR set to: 0
  1639                           ;my_uart.c: 37: uc_ptr->Tx_buffer[1] = msgbuffer[3];
  1640  0010EE  0100               	movlb	0	; () banked
  1641  0010F0  EE20 F003          	lfsr	2,3
  1642  0010F4  0100               	movlb	0	; () banked
  1643  0010F6  5199               	movf	uart_retrieve_buffer@msgbuffer& (0+255),w,b
  1644  0010F8  26D9               	addwf	fsr2l,f,c
  1645  0010FA  0100               	movlb	0	; () banked
  1646  0010FC  519A               	movf	(uart_retrieve_buffer@msgbuffer+1)& (0+255),w,b
  1647  0010FE  22DA               	addwfc	fsr2h,f,c
  1648  001100  0100               	movlb	0	; () banked
  1649  001102  EE10 F001          	lfsr	1,1
  1650  001106  0100               	movlb	0	; () banked
  1651  001108  51C5               	movf	_uc_ptr& (0+255),w,b
  1652  00110A  26E1               	addwf	fsr1l,f,c
  1653  00110C  0100               	movlb	0	; () banked
  1654  00110E  51C6               	movf	(_uc_ptr+1)& (0+255),w,b
  1655  001110  22E2               	addwfc	fsr1h,f,c
  1656  001112  CFDF FFE7          	movff	indf2,indf1
  1657                           
  1658                           ;my_uart.c: 38: } else if (msgbuffer[0] == 0x05) {
  1659  001116  0012               	return	
  1660  001118                     l3515:
  1661                           
  1662                           ; BSR set to: 0
  1663  001118  0E05               	movlw	5
  1664  00111A  C099  FFD9         	movff	uart_retrieve_buffer@msgbuffer,fsr2l
  1665  00111E  C09A  FFDA         	movff	uart_retrieve_buffer@msgbuffer+1,fsr2h
  1666  001122  62DF               	cpfseq	indf2,c
  1667  001124  0012               	return	
  1668                           
  1669                           ; BSR set to: 0
  1670                           ;my_uart.c: 40: uc_ptr->msg_length = 2;
  1671  001126  0100               	movlb	0	; () banked
  1672  001128  EE20 F00B          	lfsr	2,11
  1673  00112C  0100               	movlb	0	; () banked
  1674  00112E  51C5               	movf	_uc_ptr& (0+255),w,b
  1675  001130  26D9               	addwf	fsr2l,f,c
  1676  001132  0100               	movlb	0	; () banked
  1677  001134  51C6               	movf	(_uc_ptr+1)& (0+255),w,b
  1678  001136  22DA               	addwfc	fsr2h,f,c
  1679  001138  0E02               	movlw	2
  1680  00113A  6EDF               	movwf	indf2,c
  1681                           
  1682                           ; BSR set to: 0
  1683                           ;my_uart.c: 41: uc_ptr->Tx_buffer[0] = 0x00;
  1684  00113C  C0C5  FFD9         	movff	_uc_ptr,fsr2l
  1685  001140  C0C6  FFDA         	movff	_uc_ptr+1,fsr2h
  1686  001144  0E00               	movlw	0
  1687  001146  6EDF               	movwf	indf2,c
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;my_uart.c: 42: uc_ptr->Tx_buffer[1] = 0x00;
  1691  001148  0100               	movlb	0	; () banked
  1692  00114A  EE20 F001          	lfsr	2,1
  1693  00114E  0100               	movlb	0	; () banked
  1694  001150  51C5               	movf	_uc_ptr& (0+255),w,b
  1695  001152  26D9               	addwf	fsr2l,f,c
  1696  001154  0100               	movlb	0	; () banked
  1697  001156  51C6               	movf	(_uc_ptr+1)& (0+255),w,b
  1698  001158  22DA               	addwfc	fsr2h,f,c
  1699  00115A  0E00               	movlw	0
  1700  00115C  6EDF               	movwf	indf2,c
  1701  00115E  0012               	return	
  1702  001160                     __end_of_uart_retrieve_buffer:
  1703                           	opt stack 0
  1704                           tblptru	equ	0xFF8
  1705                           tblptrh	equ	0xFF7
  1706                           tblptrl	equ	0xFF6
  1707                           tablat	equ	0xFF5
  1708                           postinc0	equ	0xFEE
  1709                           wreg	equ	0xFE8
  1710                           indf1	equ	0xFE7
  1711                           postdec1	equ	0xFE5
  1712                           fsr1h	equ	0xFE2
  1713                           fsr1l	equ	0xFE1
  1714                           indf2	equ	0xFDF
  1715                           fsr2h	equ	0xFDA
  1716                           fsr2l	equ	0xFD9
  1717                           status	equ	0xFD8
  1718                           
  1719 ;; *************** function _start_i2c_slave_reply *****************
  1720 ;; Defined at:
  1721 ;;		line 25 in file "../src/my_i2c.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;  length          1    wreg     unsigned char 
  1724 ;;  msg             2   23[BANK0 ] PTR unsigned char 
  1725 ;;		 -> motorEncoderBuffer(5), readMessages@buf(4), 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  length          1   27[BANK0 ] unsigned char 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;		None               void
  1730 ;; Registers used:
  1731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1737 ;;      Params:         0       2       0       0       0
  1738 ;;      Locals:         0       1       0       0       0
  1739 ;;      Temps:          0       2       0       0       0
  1740 ;;      Totals:         0       5       0       0       0
  1741 ;;Total ram usage:        5 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    8
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_uart_lthread
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text3
  1752  000D78                     __ptext3:
  1753                           	opt stack 0
  1754  000D78                     _start_i2c_slave_reply:
  1755                           	opt stack 21
  1756                           
  1757                           ; BSR set to: 0
  1758                           ;incstack = 0
  1759                           ;start_i2c_slave_reply@length stored from wreg
  1760  000D78  CFE8 F09B          	movff	wreg,start_i2c_slave_reply@length
  1761                           
  1762                           ;my_i2c.c: 27: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  1763  000D7C  0100               	movlb	0	; () banked
  1764  000D7E  EE20 F019          	lfsr	2,25
  1765  000D82  0100               	movlb	0	; () banked
  1766  000D84  51C3               	movf	_ic_ptr& (0+255),w,b
  1767  000D86  26D9               	addwf	fsr2l,f,c
  1768  000D88  0100               	movlb	0	; () banked
  1769  000D8A  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  1770  000D8C  22DA               	addwfc	fsr2h,f,c
  1771  000D8E  0E00               	movlw	0
  1772  000D90  6EDF               	movwf	indf2,c
  1773  000D92  D042               	goto	l3469
  1774  000D94                     l3465:
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;my_i2c.c: 28: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  1778  000D94  0100               	movlb	0	; () banked
  1779  000D96  EE20 F019          	lfsr	2,25
  1780  000D9A  0100               	movlb	0	; () banked
  1781  000D9C  51C3               	movf	_ic_ptr& (0+255),w,b
  1782  000D9E  26D9               	addwf	fsr2l,f,c
  1783  000DA0  0100               	movlb	0	; () banked
  1784  000DA2  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  1785  000DA4  22DA               	addwfc	fsr2h,f,c
  1786  000DA6  50DF               	movf	indf2,w,c
  1787  000DA8  0100               	movlb	0	; () banked
  1788  000DAA  6F99               	movwf	??_start_i2c_slave_reply& (0+255),b
  1789  000DAC  0100               	movlb	0	; () banked
  1790  000DAE  5199               	movf	??_start_i2c_slave_reply& (0+255),w,b
  1791  000DB0  0D01               	mullw	1
  1792  000DB2  50F3               	movf	prodl,w,c
  1793  000DB4  0100               	movlb	0	; () banked
  1794  000DB6  0100               	movlb	0	; () banked
  1795  000DB8  2597               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  1796  000DBA  6ED9               	movwf	fsr2l,c
  1797  000DBC  50F4               	movf	prodh,w,c
  1798  000DBE  0100               	movlb	0	; () banked
  1799  000DC0  0100               	movlb	0	; () banked
  1800  000DC2  2198               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  1801  000DC4  6EDA               	movwf	fsr2h,c
  1802  000DC6  0100               	movlb	0	; () banked
  1803  000DC8  EE10 F019          	lfsr	1,25
  1804  000DCC  0100               	movlb	0	; () banked
  1805  000DCE  51C3               	movf	_ic_ptr& (0+255),w,b
  1806  000DD0  26E1               	addwf	fsr1l,f,c
  1807  000DD2  0100               	movlb	0	; () banked
  1808  000DD4  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  1809  000DD6  22E2               	addwfc	fsr1h,f,c
  1810  000DD8  50E7               	movf	indf1,w,c
  1811  000DDA  0100               	movlb	0	; () banked
  1812  000DDC  6F9A               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  1813  000DDE  0100               	movlb	0	; () banked
  1814  000DE0  519A               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  1815  000DE2  0D01               	mullw	1
  1816  000DE4  0E0F               	movlw	15
  1817  000DE6  26F3               	addwf	prodl,f,c
  1818  000DE8  0E00               	movlw	0
  1819  000DEA  22F4               	addwfc	prodh,f,c
  1820  000DEC  50F3               	movf	prodl,w,c
  1821  000DEE  0100               	movlb	0	; () banked
  1822  000DF0  0100               	movlb	0	; () banked
  1823  000DF2  25C3               	addwf	_ic_ptr& (0+255),w,b
  1824  000DF4  6EE1               	movwf	fsr1l,c
  1825  000DF6  50F4               	movf	prodh,w,c
  1826  000DF8  0100               	movlb	0	; () banked
  1827  000DFA  0100               	movlb	0	; () banked
  1828  000DFC  21C4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  1829  000DFE  6EE2               	movwf	fsr1h,c
  1830  000E00  CFDF FFE7          	movff	indf2,indf1
  1831                           
  1832                           ; BSR set to: 0
  1833  000E04  0100               	movlb	0	; () banked
  1834  000E06  EE20 F019          	lfsr	2,25
  1835  000E0A  0100               	movlb	0	; () banked
  1836  000E0C  51C3               	movf	_ic_ptr& (0+255),w,b
  1837  000E0E  26D9               	addwf	fsr2l,f,c
  1838  000E10  0100               	movlb	0	; () banked
  1839  000E12  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  1840  000E14  22DA               	addwfc	fsr2h,f,c
  1841  000E16  2ADF               	incf	indf2,f,c
  1842  000E18                     l3469:
  1843                           
  1844                           ; BSR set to: 0
  1845  000E18  0100               	movlb	0	; () banked
  1846  000E1A  EE20 F019          	lfsr	2,25
  1847  000E1E  0100               	movlb	0	; () banked
  1848  000E20  51C3               	movf	_ic_ptr& (0+255),w,b
  1849  000E22  26D9               	addwf	fsr2l,f,c
  1850  000E24  0100               	movlb	0	; () banked
  1851  000E26  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  1852  000E28  22DA               	addwfc	fsr2h,f,c
  1853  000E2A  50DF               	movf	indf2,w,c
  1854  000E2C  0100               	movlb	0	; () banked
  1855  000E2E  6F99               	movwf	??_start_i2c_slave_reply& (0+255),b
  1856  000E30  0100               	movlb	0	; () banked
  1857  000E32  0100               	movlb	0	; () banked
  1858  000E34  519B               	movf	start_i2c_slave_reply@length& (0+255),w,b
  1859  000E36  0100               	movlb	0	; () banked
  1860  000E38  5D99               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  1861  000E3A  A0D8               	btfss	status,0,c
  1862  000E3C  D7AB               	goto	l3465
  1863                           
  1864                           ; BSR set to: 0
  1865                           ;my_i2c.c: 29: }
  1866                           ;my_i2c.c: 30: ic_ptr->outbuflen = length;
  1867                           
  1868                           ; BSR set to: 0
  1869  000E3E  0100               	movlb	0	; () banked
  1870  000E40  EE20 F019          	lfsr	2,25
  1871  000E44  0100               	movlb	0	; () banked
  1872  000E46  51C3               	movf	_ic_ptr& (0+255),w,b
  1873  000E48  26D9               	addwf	fsr2l,f,c
  1874  000E4A  0100               	movlb	0	; () banked
  1875  000E4C  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  1876  000E4E  22DA               	addwfc	fsr2h,f,c
  1877  000E50  0100               	movlb	0	; () banked
  1878  000E52  C09B  FFDF         	movff	start_i2c_slave_reply@length,indf2
  1879                           
  1880                           ;my_i2c.c: 31: ic_ptr->outbufind = 1;
  1881  000E56  0100               	movlb	0	; () banked
  1882  000E58  EE20 F01A          	lfsr	2,26
  1883  000E5C  0100               	movlb	0	; () banked
  1884  000E5E  51C3               	movf	_ic_ptr& (0+255),w,b
  1885  000E60  26D9               	addwf	fsr2l,f,c
  1886  000E62  0100               	movlb	0	; () banked
  1887  000E64  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  1888  000E66  22DA               	addwfc	fsr2h,f,c
  1889  000E68  0E01               	movlw	1
  1890  000E6A  6EDF               	movwf	indf2,c
  1891                           
  1892                           ;my_i2c.c: 34: SSPBUF = ic_ptr->outbuffer[0];
  1893  000E6C  0100               	movlb	0	; () banked
  1894  000E6E  EE20 F00F          	lfsr	2,15
  1895  000E72  0100               	movlb	0	; () banked
  1896  000E74  51C3               	movf	_ic_ptr& (0+255),w,b
  1897  000E76  26D9               	addwf	fsr2l,f,c
  1898  000E78  0100               	movlb	0	; () banked
  1899  000E7A  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  1900  000E7C  22DA               	addwfc	fsr2h,f,c
  1901  000E7E  50DF               	movf	indf2,w,c
  1902  000E80  6EC9               	movwf	4041,c	;volatile
  1903                           
  1904                           ; BSR set to: 0
  1905                           ;my_i2c.c: 37: SSPCON1bits.CKP = 1;
  1906  000E82  88C6               	bsf	4038,4,c	;volatile
  1907                           
  1908                           ; BSR set to: 0
  1909  000E84  0012               	return	
  1910  000E86                     __end_of_start_i2c_slave_reply:
  1911                           	opt stack 0
  1912                           tblptru	equ	0xFF8
  1913                           tblptrh	equ	0xFF7
  1914                           tblptrl	equ	0xFF6
  1915                           tablat	equ	0xFF5
  1916                           prodh	equ	0xFF4
  1917                           prodl	equ	0xFF3
  1918                           postinc0	equ	0xFEE
  1919                           wreg	equ	0xFE8
  1920                           indf1	equ	0xFE7
  1921                           postdec1	equ	0xFE5
  1922                           fsr1h	equ	0xFE2
  1923                           fsr1l	equ	0xFE1
  1924                           indf2	equ	0xFDF
  1925                           fsr2h	equ	0xFDA
  1926                           fsr2l	equ	0xFD9
  1927                           status	equ	0xFD8
  1928                           
  1929 ;; *************** function _timer1_lthread *****************
  1930 ;; Defined at:
  1931 ;;		line 14 in file "../src/timer1_thread.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;  tptr            2   49[BANK0 ] PTR struct __timer1_thre
  1934 ;;		 -> main@t1thread_data(2), 
  1935 ;;  msgtype         2   51[BANK0 ] int 
  1936 ;;  length          2   53[BANK0 ] int 
  1937 ;;  msgbuffer       2   55[BANK0 ] PTR unsigned char 
  1938 ;;		 -> main@msgbuffer(11), 
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;  retval          1   58[BANK0 ] char 
  1941 ;; Return value:  Size  Location     Type
  1942 ;;                  2   49[BANK0 ] int 
  1943 ;; Registers used:
  1944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1945 ;; Tracked objects:
  1946 ;;		On entry : 0/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1950 ;;      Params:         0       8       0       0       0
  1951 ;;      Locals:         0       1       0       0       0
  1952 ;;      Temps:          0       1       0       0       0
  1953 ;;      Totals:         0      10       0       0       0
  1954 ;;Total ram usage:       10 bytes
  1955 ;; Hardware stack levels used:    1
  1956 ;; Hardware stack levels required when called:   11
  1957 ;; This function calls:
  1958 ;;		_FromMainHigh_sendmsg
  1959 ;;		___lwmod
  1960 ;; This function is called by:
  1961 ;;		_main
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           	psect	text4
  1966  0016BE                     __ptext4:
  1967                           	opt stack 0
  1968  0016BE                     _timer1_lthread:
  1969                           	opt stack 19
  1970                           
  1971                           ;timer1_thread.c: 15: signed char retval;
  1972                           ;timer1_thread.c: 17: tptr->msgcount++;
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;incstack = 0
  1976  0016BE  C0B1  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1977  0016C2  C0B2  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1978  0016C6  2ADE               	incf	postinc2,f,c
  1979  0016C8  0E00               	movlw	0
  1980  0016CA  22DD               	addwfc	postdec2,f,c
  1981                           
  1982                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1983  0016CC  C0B1  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1984  0016D0  C0B2  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1985  0016D4  0100               	movlb	0	; () banked
  1986  0016D6  CFDE F097          	movff	postinc2,___lwmod@dividend
  1987  0016DA  0100               	movlb	0	; () banked
  1988  0016DC  CFDD F098          	movff	postdec2,___lwmod@dividend+1
  1989  0016E0  0E00               	movlw	0
  1990  0016E2  0100               	movlb	0	; () banked
  1991  0016E4  0100               	movlb	0	; () banked
  1992  0016E6  6F9A               	movwf	(___lwmod@divisor+1)& (0+255),b
  1993  0016E8  0E0A               	movlw	10
  1994  0016EA  0100               	movlb	0	; () banked
  1995  0016EC  6F99               	movwf	___lwmod@divisor& (0+255),b
  1996  0016EE  EC5D  F00A         	call	___lwmod	;wreg free
  1997  0016F2  0100               	movlb	0	; () banked
  1998  0016F4  0100               	movlb	0	; () banked
  1999  0016F6  5197               	movf	?___lwmod& (0+255),w,b
  2000  0016F8  0A09               	xorlw	9
  2001  0016FA  0100               	movlb	0	; () banked
  2002  0016FC  1198               	iorwf	(?___lwmod+1)& (0+255),w,b
  2003  0016FE  A4D8               	btfss	status,2,c
  2004  001700  0012               	return	
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  2008  001702  0100               	movlb	0	; () banked
  2009  001704  6FB9               	movwf	??_timer1_lthread& (0+255),b
  2010  001706  0E14               	movlw	20
  2011  001708  0100               	movlb	0	; () banked
  2012  00170A  0100               	movlb	0	; () banked
  2013  00170C  6FAD               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  2014  00170E  0100               	movlb	0	; () banked
  2015  001710  51B9               	movf	??_timer1_lthread& (0+255),w,b
  2016  001712  0100               	movlb	0	; () banked
  2017  001714  0100               	movlb	0	; () banked
  2018  001716  C0B2  F0AF         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  2019  00171A  0100               	movlb	0	; () banked
  2020  00171C  0100               	movlb	0	; () banked
  2021  00171E  C0B1  F0AE         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  2022  001722  0E02               	movlw	2
  2023  001724  EC62  F00D         	call	_FromMainHigh_sendmsg
  2024  001728  0100               	movlb	0	; () banked
  2025  00172A  0100               	movlb	0	; () banked
  2026  00172C  6FBA               	movwf	timer1_lthread@retval& (0+255),b
  2027  00172E  0012               	return	
  2028  001730                     __end_of_timer1_lthread:
  2029                           	opt stack 0
  2030                           tblptru	equ	0xFF8
  2031                           tblptrh	equ	0xFF7
  2032                           tblptrl	equ	0xFF6
  2033                           tablat	equ	0xFF5
  2034                           prodh	equ	0xFF4
  2035                           prodl	equ	0xFF3
  2036                           postinc0	equ	0xFEE
  2037                           wreg	equ	0xFE8
  2038                           indf1	equ	0xFE7
  2039                           postdec1	equ	0xFE5
  2040                           fsr1h	equ	0xFE2
  2041                           fsr1l	equ	0xFE1
  2042                           indf2	equ	0xFDF
  2043                           postinc2	equ	0xFDE
  2044                           postdec2	equ	0xFDD
  2045                           fsr2h	equ	0xFDA
  2046                           fsr2l	equ	0xFD9
  2047                           status	equ	0xFD8
  2048                           
  2049 ;; *************** function ___lwmod *****************
  2050 ;; Defined at:
  2051 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\lwmod.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;  dividend        2   23[BANK0 ] unsigned int 
  2054 ;;  divisor         2   25[BANK0 ] unsigned int 
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;  counter         1   28[BANK0 ] unsigned char 
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  2   23[BANK0 ] unsigned int 
  2059 ;; Registers used:
  2060 ;;		wreg, status,2, status,0
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2066 ;;      Params:         0       4       0       0       0
  2067 ;;      Locals:         0       1       0       0       0
  2068 ;;      Temps:          0       1       0       0       0
  2069 ;;      Totals:         0       6       0       0       0
  2070 ;;Total ram usage:        6 bytes
  2071 ;; Hardware stack levels used:    1
  2072 ;; Hardware stack levels required when called:    8
  2073 ;; This function calls:
  2074 ;;		Nothing
  2075 ;; This function is called by:
  2076 ;;		_timer1_lthread
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080                           	psect	text5
  2081  0014BA                     __ptext5:
  2082                           	opt stack 0
  2083  0014BA                     ___lwmod:
  2084                           	opt stack 21
  2085                           
  2086                           ; BSR set to: 0
  2087                           ;incstack = 0
  2088  0014BA  0100               	movlb	0	; () banked
  2089  0014BC  0100               	movlb	0	; () banked
  2090  0014BE  519A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2091  0014C0  1199               	iorwf	___lwmod@divisor& (0+255),w,b
  2092  0014C2  B4D8               	btfsc	status,2,c
  2093  0014C4  D03A               	goto	l1121
  2094                           
  2095                           ; BSR set to: 0
  2096  0014C6  0100               	movlb	0	; () banked
  2097  0014C8  6F9B               	movwf	??___lwmod& (0+255),b
  2098  0014CA  0E01               	movlw	1
  2099  0014CC  0100               	movlb	0	; () banked
  2100  0014CE  0100               	movlb	0	; () banked
  2101  0014D0  6F9C               	movwf	___lwmod@counter& (0+255),b
  2102  0014D2  0100               	movlb	0	; () banked
  2103  0014D4  519B               	movf	??___lwmod& (0+255),w,b
  2104  0014D6  D009               	goto	l3529
  2105  0014D8                     l3527:
  2106                           
  2107                           ; BSR set to: 0
  2108  0014D8  0100               	movlb	0	; () banked
  2109  0014DA  0100               	movlb	0	; () banked
  2110  0014DC  0100               	movlb	0	; () banked
  2111  0014DE  90D8               	bcf	status,0,c
  2112  0014E0  3799               	rlcf	___lwmod@divisor& (0+255),f,b
  2113  0014E2  379A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2114  0014E4  0100               	movlb	0	; () banked
  2115  0014E6  0100               	movlb	0	; () banked
  2116  0014E8  2B9C               	incf	___lwmod@counter& (0+255),f,b
  2117  0014EA                     l3529:
  2118                           
  2119                           ; BSR set to: 0
  2120  0014EA  0100               	movlb	0	; () banked
  2121  0014EC  0100               	movlb	0	; () banked
  2122  0014EE  AF9A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2123  0014F0  D7F3               	goto	l3527
  2124  0014F2                     l3531:
  2125                           
  2126                           ; BSR set to: 0
  2127  0014F2  0100               	movlb	0	; () banked
  2128  0014F4  0100               	movlb	0	; () banked
  2129  0014F6  5199               	movf	___lwmod@divisor& (0+255),w,b
  2130  0014F8  0100               	movlb	0	; () banked
  2131  0014FA  0100               	movlb	0	; () banked
  2132  0014FC  5D97               	subwf	___lwmod@dividend& (0+255),w,b
  2133  0014FE  0100               	movlb	0	; () banked
  2134  001500  0100               	movlb	0	; () banked
  2135  001502  519A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2136  001504  0100               	movlb	0	; () banked
  2137  001506  0100               	movlb	0	; () banked
  2138  001508  5998               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2139  00150A  A0D8               	btfss	status,0,c
  2140  00150C  D00C               	goto	l3535
  2141                           
  2142                           ; BSR set to: 0
  2143  00150E  0100               	movlb	0	; () banked
  2144  001510  0100               	movlb	0	; () banked
  2145  001512  5199               	movf	___lwmod@divisor& (0+255),w,b
  2146  001514  0100               	movlb	0	; () banked
  2147  001516  0100               	movlb	0	; () banked
  2148  001518  5F97               	subwf	___lwmod@dividend& (0+255),f,b
  2149  00151A  0100               	movlb	0	; () banked
  2150  00151C  0100               	movlb	0	; () banked
  2151  00151E  519A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2152  001520  0100               	movlb	0	; () banked
  2153  001522  0100               	movlb	0	; () banked
  2154  001524  5B98               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2155  001526                     l3535:
  2156                           
  2157                           ; BSR set to: 0
  2158  001526  0100               	movlb	0	; () banked
  2159  001528  0100               	movlb	0	; () banked
  2160  00152A  0100               	movlb	0	; () banked
  2161  00152C  90D8               	bcf	status,0,c
  2162  00152E  339A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2163  001530  3399               	rrcf	___lwmod@divisor& (0+255),f,b
  2164                           
  2165                           ; BSR set to: 0
  2166  001532  0100               	movlb	0	; () banked
  2167  001534  0100               	movlb	0	; () banked
  2168  001536  2F9C               	decfsz	___lwmod@counter& (0+255),f,b
  2169  001538  D7DC               	goto	l3531
  2170  00153A                     l1121:
  2171                           
  2172                           ; BSR set to: 0
  2173  00153A  C097  F097         	movff	___lwmod@dividend,?___lwmod
  2174  00153E  C098  F098         	movff	___lwmod@dividend+1,?___lwmod+1
  2175                           
  2176                           ; BSR set to: 0
  2177  001542  0012               	return	
  2178  001544                     __end_of___lwmod:
  2179                           	opt stack 0
  2180                           tblptru	equ	0xFF8
  2181                           tblptrh	equ	0xFF7
  2182                           tblptrl	equ	0xFF6
  2183                           tablat	equ	0xFF5
  2184                           prodh	equ	0xFF4
  2185                           prodl	equ	0xFF3
  2186                           postinc0	equ	0xFEE
  2187                           wreg	equ	0xFE8
  2188                           indf1	equ	0xFE7
  2189                           postdec1	equ	0xFE5
  2190                           fsr1h	equ	0xFE2
  2191                           fsr1l	equ	0xFE1
  2192                           indf2	equ	0xFDF
  2193                           postinc2	equ	0xFDE
  2194                           postdec2	equ	0xFDD
  2195                           fsr2h	equ	0xFDA
  2196                           fsr2l	equ	0xFD9
  2197                           status	equ	0xFD8
  2198                           
  2199 ;; *************** function _FromMainHigh_sendmsg *****************
  2200 ;; Defined at:
  2201 ;;		line 174 in file "../src/messages.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;  length          1    wreg     unsigned char 
  2204 ;;  msgtype         1   45[BANK0 ] unsigned char 
  2205 ;;  data            2   46[BANK0 ] PTR void 
  2206 ;;		 -> main@t1thread_data(2), 
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;  length          1   48[BANK0 ] unsigned char 
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  1    wreg      char 
  2211 ;; Registers used:
  2212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2218 ;;      Params:         0       3       0       0       0
  2219 ;;      Locals:         0       1       0       0       0
  2220 ;;      Temps:          0       0       0       0       0
  2221 ;;      Totals:         0       4       0       0       0
  2222 ;;Total ram usage:        4 bytes
  2223 ;; Hardware stack levels used:    1
  2224 ;; Hardware stack levels required when called:   10
  2225 ;; This function calls:
  2226 ;;		_send_msg
  2227 ;; This function is called by:
  2228 ;;		_timer1_lthread
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           	psect	text6
  2233  001AC4                     __ptext6:
  2234                           	opt stack 0
  2235  001AC4                     _FromMainHigh_sendmsg:
  2236                           	opt stack 19
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;incstack = 0
  2240                           ;FromMainHigh_sendmsg@length stored from wreg
  2241  001AC4  CFE8 F0B0          	movff	wreg,FromMainHigh_sendmsg@length
  2242                           
  2243                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2244  001AC8  0101               	movlb	1	; () banked
  2245  001ACA  0E01               	movlw	high _FromMainHigh_MQ
  2246  001ACC  0100               	movlb	0	; () banked
  2247  001ACE  0100               	movlb	0	; () banked
  2248  001AD0  6FA2               	movwf	(send_msg@qptr+1)& (0+255),b
  2249  001AD2  0101               	movlb	1	; () banked
  2250  001AD4  0E00               	movlw	low _FromMainHigh_MQ
  2251  001AD6  0100               	movlb	0	; () banked
  2252  001AD8  0100               	movlb	0	; () banked
  2253  001ADA  6FA1               	movwf	send_msg@qptr& (0+255),b
  2254  001ADC  C0B0  F0A3         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2255  001AE0  C0AD  F0A4         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2256  001AE4  0100               	movlb	0	; () banked
  2257  001AE6  0100               	movlb	0	; () banked
  2258  001AE8  C0AF  F0A6         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2259  001AEC  0100               	movlb	0	; () banked
  2260  001AEE  0100               	movlb	0	; () banked
  2261  001AF0  C0AE  F0A5         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2262  001AF4  EC43  F007         	call	_send_msg	;wreg free
  2263  001AF8  0012               	return	
  2264  001AFA                     __end_of_FromMainHigh_sendmsg:
  2265                           	opt stack 0
  2266                           tblptru	equ	0xFF8
  2267                           tblptrh	equ	0xFF7
  2268                           tblptrl	equ	0xFF6
  2269                           tablat	equ	0xFF5
  2270                           prodh	equ	0xFF4
  2271                           prodl	equ	0xFF3
  2272                           postinc0	equ	0xFEE
  2273                           wreg	equ	0xFE8
  2274                           indf1	equ	0xFE7
  2275                           postdec1	equ	0xFE5
  2276                           fsr1h	equ	0xFE2
  2277                           fsr1l	equ	0xFE1
  2278                           indf2	equ	0xFDF
  2279                           postinc2	equ	0xFDE
  2280                           postdec2	equ	0xFDD
  2281                           fsr2h	equ	0xFDA
  2282                           fsr2l	equ	0xFD9
  2283                           status	equ	0xFD8
  2284                           
  2285 ;; *************** function _send_msg *****************
  2286 ;; Defined at:
  2287 ;;		line 24 in file "../src/messages.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;  qptr            2   33[BANK0 ] PTR struct __msg_queue
  2290 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2291 ;;  length          1   35[BANK0 ] unsigned char 
  2292 ;;  msgtype         1   36[BANK0 ] unsigned char 
  2293 ;;  data            2   37[BANK0 ] PTR void 
  2294 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), main@t1thread_data(2), main@ic(28), 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;  qmsg            2   43[BANK0 ] PTR struct __msg
  2297 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2298 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2299 ;;  tlength         2   40[BANK0 ] unsigned int 
  2300 ;;  slot            1   42[BANK0 ] unsigned char 
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  1    wreg      char 
  2303 ;; Registers used:
  2304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2310 ;;      Params:         0       6       0       0       0
  2311 ;;      Locals:         0       5       0       0       0
  2312 ;;      Temps:          0       1       0       0       0
  2313 ;;      Totals:         0      12       0       0       0
  2314 ;;Total ram usage:       12 bytes
  2315 ;; Hardware stack levels used:    1
  2316 ;; Hardware stack levels required when called:    9
  2317 ;; This function calls:
  2318 ;;		_memcpy
  2319 ;; This function is called by:
  2320 ;;		_FromMainHigh_sendmsg
  2321 ;;		_ToMainLow_sendmsg
  2322 ;;		_FromMainLow_sendmsg
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           	psect	text7
  2327  000E86                     __ptext7:
  2328                           	opt stack 0
  2329  000E86                     _send_msg:
  2330                           	opt stack 19
  2331                           
  2332                           ;messages.c: 25: unsigned char slot;
  2333                           ;messages.c: 27: msg *qmsg;
  2334                           ;messages.c: 28: size_t tlength = length;
  2335                           
  2336                           ;incstack = 0
  2337  000E86  0100               	movlb	0	; () banked
  2338  000E88  0100               	movlb	0	; () banked
  2339  000E8A  C0A3  F0A8         	movff	send_msg@length,send_msg@tlength
  2340  000E8E  0100               	movlb	0	; () banked
  2341  000E90  0100               	movlb	0	; () banked
  2342  000E92  6BA9               	clrf	(send_msg@tlength+1)& (0+255),b
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2346  000E94  0100               	movlb	0	; () banked
  2347  000E96  EE20 F034          	lfsr	2,52
  2348  000E9A  0100               	movlb	0	; () banked
  2349  000E9C  51A1               	movf	send_msg@qptr& (0+255),w,b
  2350  000E9E  26D9               	addwf	fsr2l,f,c
  2351  000EA0  0100               	movlb	0	; () banked
  2352  000EA2  51A2               	movf	(send_msg@qptr+1)& (0+255),w,b
  2353  000EA4  22DA               	addwfc	fsr2h,f,c
  2354  000EA6  50DF               	movf	indf2,w,c
  2355  000EA8  0100               	movlb	0	; () banked
  2356  000EAA  0100               	movlb	0	; () banked
  2357  000EAC  6FAA               	movwf	send_msg@slot& (0+255),b
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2361  000EAE  0100               	movlb	0	; () banked
  2362  000EB0  0100               	movlb	0	; () banked
  2363  000EB2  51AA               	movf	send_msg@slot& (0+255),w,b
  2364  000EB4  0D0D               	mullw	13
  2365  000EB6  50F3               	movf	prodl,w,c
  2366  000EB8  0100               	movlb	0	; () banked
  2367  000EBA  0100               	movlb	0	; () banked
  2368  000EBC  25A1               	addwf	send_msg@qptr& (0+255),w,b
  2369  000EBE  0100               	movlb	0	; () banked
  2370  000EC0  0100               	movlb	0	; () banked
  2371  000EC2  6FAB               	movwf	send_msg@qmsg& (0+255),b
  2372  000EC4  50F4               	movf	prodh,w,c
  2373  000EC6  0100               	movlb	0	; () banked
  2374  000EC8  0100               	movlb	0	; () banked
  2375  000ECA  21A2               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2376  000ECC  0100               	movlb	0	; () banked
  2377  000ECE  6FAC               	movwf	(send_msg@qmsg+1)& (0+255),b
  2378                           
  2379                           ; BSR set to: 0
  2380                           ;messages.c: 41: if (qmsg->full != 0) {
  2381  000ED0  C0AB  FFD9         	movff	send_msg@qmsg,fsr2l
  2382  000ED4  C0AC  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2383  000ED8  50DF               	movf	indf2,w,c
  2384  000EDA  B4D8               	btfsc	status,2,c
  2385  000EDC  D002               	goto	l3377
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;messages.c: 42: return (-1);
  2389  000EDE  0EFF               	movlw	255
  2390  000EE0  0012               	return	
  2391  000EE2                     l3377:
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;messages.c: 43: }
  2395                           ;messages.c: 46: qmsg->length = length;
  2396  000EE2  0100               	movlb	0	; () banked
  2397  000EE4  EE20 F001          	lfsr	2,1
  2398  000EE8  0100               	movlb	0	; () banked
  2399  000EEA  51AB               	movf	send_msg@qmsg& (0+255),w,b
  2400  000EEC  26D9               	addwf	fsr2l,f,c
  2401  000EEE  0100               	movlb	0	; () banked
  2402  000EF0  51AC               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2403  000EF2  22DA               	addwfc	fsr2h,f,c
  2404  000EF4  0100               	movlb	0	; () banked
  2405  000EF6  C0A3  FFDF         	movff	send_msg@length,indf2
  2406                           
  2407                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2408  000EFA  0100               	movlb	0	; () banked
  2409  000EFC  EE20 F002          	lfsr	2,2
  2410  000F00  0100               	movlb	0	; () banked
  2411  000F02  51AB               	movf	send_msg@qmsg& (0+255),w,b
  2412  000F04  26D9               	addwf	fsr2l,f,c
  2413  000F06  0100               	movlb	0	; () banked
  2414  000F08  51AC               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2415  000F0A  22DA               	addwfc	fsr2h,f,c
  2416  000F0C  0100               	movlb	0	; () banked
  2417  000F0E  C0A4  FFDF         	movff	send_msg@msgtype,indf2
  2418                           
  2419                           ; BSR set to: 0
  2420                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2421  000F12  0E03               	movlw	3
  2422  000F14  0100               	movlb	0	; () banked
  2423  000F16  0100               	movlb	0	; () banked
  2424  000F18  25AB               	addwf	send_msg@qmsg& (0+255),w,b
  2425  000F1A  0100               	movlb	0	; () banked
  2426  000F1C  0100               	movlb	0	; () banked
  2427  000F1E  6F97               	movwf	memcpy@d1& (0+255),b
  2428  000F20  0E00               	movlw	0
  2429  000F22  0100               	movlb	0	; () banked
  2430  000F24  0100               	movlb	0	; () banked
  2431  000F26  21AC               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2432  000F28  0100               	movlb	0	; () banked
  2433  000F2A  6F98               	movwf	(memcpy@d1+1)& (0+255),b
  2434  000F2C  0100               	movlb	0	; () banked
  2435  000F2E  0100               	movlb	0	; () banked
  2436  000F30  C0A6  F09A         	movff	send_msg@data+1,memcpy@s1+1
  2437  000F34  0100               	movlb	0	; () banked
  2438  000F36  0100               	movlb	0	; () banked
  2439  000F38  C0A5  F099         	movff	send_msg@data,memcpy@s1
  2440  000F3C  C0A8  F09B         	movff	send_msg@tlength,memcpy@n
  2441  000F40  C0A9  F09C         	movff	send_msg@tlength+1,memcpy@n+1
  2442  000F44  EC04  F00C         	call	_memcpy	;wreg free
  2443                           
  2444                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2445  000F48  0100               	movlb	0	; () banked
  2446  000F4A  EE20 F034          	lfsr	2,52
  2447  000F4E  0100               	movlb	0	; () banked
  2448  000F50  51A1               	movf	send_msg@qptr& (0+255),w,b
  2449  000F52  26D9               	addwf	fsr2l,f,c
  2450  000F54  0100               	movlb	0	; () banked
  2451  000F56  51A2               	movf	(send_msg@qptr+1)& (0+255),w,b
  2452  000F58  22DA               	addwfc	fsr2h,f,c
  2453  000F5A  0100               	movlb	0	; () banked
  2454  000F5C  EE10 F034          	lfsr	1,52
  2455  000F60  0100               	movlb	0	; () banked
  2456  000F62  51A1               	movf	send_msg@qptr& (0+255),w,b
  2457  000F64  26E1               	addwf	fsr1l,f,c
  2458  000F66  0100               	movlb	0	; () banked
  2459  000F68  51A2               	movf	(send_msg@qptr+1)& (0+255),w,b
  2460  000F6A  22E2               	addwfc	fsr1h,f,c
  2461  000F6C  50E7               	movf	indf1,w,c
  2462  000F6E  0100               	movlb	0	; () banked
  2463  000F70  6FA7               	movwf	??_send_msg& (0+255),b
  2464  000F72  0100               	movlb	0	; () banked
  2465  000F74  29A7               	incf	??_send_msg& (0+255),w,b
  2466  000F76  0B03               	andlw	3
  2467  000F78  6EDF               	movwf	indf2,c
  2468                           
  2469                           ; BSR set to: 0
  2470                           ;messages.c: 59: qmsg->full = 1;
  2471  000F7A  C0AB  FFD9         	movff	send_msg@qmsg,fsr2l
  2472  000F7E  C0AC  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2473  000F82  0E01               	movlw	1
  2474  000F84  6EDF               	movwf	indf2,c
  2475                           
  2476                           ; BSR set to: 0
  2477                           ;messages.c: 60: return (1);
  2478  000F86  0E01               	movlw	1
  2479  000F88  0012               	return	
  2480  000F8A                     __end_of_send_msg:
  2481                           	opt stack 0
  2482                           tblptru	equ	0xFF8
  2483                           tblptrh	equ	0xFF7
  2484                           tblptrl	equ	0xFF6
  2485                           tablat	equ	0xFF5
  2486                           prodh	equ	0xFF4
  2487                           prodl	equ	0xFF3
  2488                           postinc0	equ	0xFEE
  2489                           wreg	equ	0xFE8
  2490                           indf1	equ	0xFE7
  2491                           postdec1	equ	0xFE5
  2492                           fsr1h	equ	0xFE2
  2493                           fsr1l	equ	0xFE1
  2494                           indf2	equ	0xFDF
  2495                           postinc2	equ	0xFDE
  2496                           postdec2	equ	0xFDD
  2497                           fsr2h	equ	0xFDA
  2498                           fsr2l	equ	0xFD9
  2499                           status	equ	0xFD8
  2500                           
  2501 ;; *************** function _timer0_lthread *****************
  2502 ;; Defined at:
  2503 ;;		line 10 in file "../src/timer0_thread.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  tptr            2   23[BANK0 ] PTR struct __timer0_thre
  2506 ;;		 -> main@t0thread_data(2), 
  2507 ;;  msgtype         2   25[BANK0 ] int 
  2508 ;;  length          2   27[BANK0 ] int 
  2509 ;;  msgbuffer       2   29[BANK0 ] PTR unsigned char 
  2510 ;;		 -> main@msgbuffer(11), 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  msgval          2   31[BANK0 ] PTR unsigned int 
  2513 ;;		 -> main@msgbuffer(11), 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  2   23[BANK0 ] int 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2, status,0
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2523 ;;      Params:         0       8       0       0       0
  2524 ;;      Locals:         0       2       0       0       0
  2525 ;;      Temps:          0       0       0       0       0
  2526 ;;      Totals:         0      10       0       0       0
  2527 ;;Total ram usage:       10 bytes
  2528 ;; Hardware stack levels used:    1
  2529 ;; Hardware stack levels required when called:    8
  2530 ;; This function calls:
  2531 ;;		Nothing
  2532 ;; This function is called by:
  2533 ;;		_main
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           	psect	text8
  2538  001CA0                     __ptext8:
  2539                           	opt stack 0
  2540  001CA0                     _timer0_lthread:
  2541                           	opt stack 22
  2542                           
  2543                           ;timer0_thread.c: 11: unsigned int *msgval;
  2544                           ;timer0_thread.c: 13: msgval = (unsigned int *) msgbuffer;
  2545                           
  2546                           ; BSR set to: 0
  2547                           ;incstack = 0
  2548  001CA0  0100               	movlb	0	; () banked
  2549  001CA2  0100               	movlb	0	; () banked
  2550  001CA4  C09E  F0A0         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2551  001CA8  0100               	movlb	0	; () banked
  2552  001CAA  0100               	movlb	0	; () banked
  2553  001CAC  C09D  F09F         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2554                           
  2555                           ; BSR set to: 0
  2556  001CB0  0012               	return	
  2557  001CB2                     __end_of_timer0_lthread:
  2558                           	opt stack 0
  2559                           tblptru	equ	0xFF8
  2560                           tblptrh	equ	0xFF7
  2561                           tblptrl	equ	0xFF6
  2562                           tablat	equ	0xFF5
  2563                           prodh	equ	0xFF4
  2564                           prodl	equ	0xFF3
  2565                           postinc0	equ	0xFEE
  2566                           wreg	equ	0xFE8
  2567                           indf1	equ	0xFE7
  2568                           postdec1	equ	0xFE5
  2569                           fsr1h	equ	0xFE2
  2570                           fsr1l	equ	0xFE1
  2571                           indf2	equ	0xFDF
  2572                           postinc2	equ	0xFDE
  2573                           postdec2	equ	0xFDD
  2574                           fsr2h	equ	0xFDA
  2575                           fsr2l	equ	0xFD9
  2576                           status	equ	0xFD8
  2577                           
  2578 ;; *************** function _init_uart_recv *****************
  2579 ;; Defined at:
  2580 ;;		line 12 in file "../src/my_uart.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;  uc              2   23[BANK0 ] PTR struct __uart_comm
  2583 ;;		 -> main@uc(12), 
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;		None
  2586 ;; Return value:  Size  Location     Type
  2587 ;;		None               void
  2588 ;; Registers used:
  2589 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2595 ;;      Params:         0       2       0       0       0
  2596 ;;      Locals:         0       0       0       0       0
  2597 ;;      Temps:          0       0       0       0       0
  2598 ;;      Totals:         0       2       0       0       0
  2599 ;;Total ram usage:        2 bytes
  2600 ;; Hardware stack levels used:    1
  2601 ;; Hardware stack levels required when called:    8
  2602 ;; This function calls:
  2603 ;;		Nothing
  2604 ;; This function is called by:
  2605 ;;		_main
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608                           
  2609                           	psect	text9
  2610  001BDC                     __ptext9:
  2611                           	opt stack 0
  2612  001BDC                     _init_uart_recv:
  2613                           	opt stack 22
  2614                           
  2615                           ;my_uart.c: 13: uc_ptr = uc;
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;incstack = 0
  2619  001BDC  0100               	movlb	0	; () banked
  2620  001BDE  0100               	movlb	0	; () banked
  2621  001BE0  C098  F0C6         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2622  001BE4  0100               	movlb	0	; () banked
  2623  001BE6  0100               	movlb	0	; () banked
  2624  001BE8  C097  F0C5         	movff	init_uart_recv@uc,_uc_ptr
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;my_uart.c: 14: uc_ptr->Tx_buflen = 0;
  2628  001BEC  0100               	movlb	0	; () banked
  2629  001BEE  EE20 F00A          	lfsr	2,10
  2630  001BF2  0100               	movlb	0	; () banked
  2631  001BF4  51C5               	movf	_uc_ptr& (0+255),w,b
  2632  001BF6  26D9               	addwf	fsr2l,f,c
  2633  001BF8  0100               	movlb	0	; () banked
  2634  001BFA  51C6               	movf	(_uc_ptr+1)& (0+255),w,b
  2635  001BFC  22DA               	addwfc	fsr2h,f,c
  2636  001BFE  0E00               	movlw	0
  2637  001C00  6EDF               	movwf	indf2,c
  2638                           
  2639                           ; BSR set to: 0
  2640  001C02  0012               	return	
  2641  001C04                     __end_of_init_uart_recv:
  2642                           	opt stack 0
  2643                           tblptru	equ	0xFF8
  2644                           tblptrh	equ	0xFF7
  2645                           tblptrl	equ	0xFF6
  2646                           tablat	equ	0xFF5
  2647                           prodh	equ	0xFF4
  2648                           prodl	equ	0xFF3
  2649                           postinc0	equ	0xFEE
  2650                           wreg	equ	0xFE8
  2651                           indf1	equ	0xFE7
  2652                           postdec1	equ	0xFE5
  2653                           fsr1h	equ	0xFE2
  2654                           fsr1l	equ	0xFE1
  2655                           indf2	equ	0xFDF
  2656                           postinc2	equ	0xFDE
  2657                           postdec2	equ	0xFDD
  2658                           fsr2h	equ	0xFDA
  2659                           fsr2l	equ	0xFD9
  2660                           status	equ	0xFD8
  2661                           
  2662 ;; *************** function _init_timer1_lthread *****************
  2663 ;; Defined at:
  2664 ;;		line 6 in file "../src/timer1_thread.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;  tptr            2   23[BANK0 ] PTR struct __timer1_thre
  2667 ;;		 -> main@t1thread_data(2), 
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;		None
  2670 ;; Return value:  Size  Location     Type
  2671 ;;		None               void
  2672 ;; Registers used:
  2673 ;;		wreg, fsr2l, fsr2h
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2679 ;;      Params:         0       2       0       0       0
  2680 ;;      Locals:         0       0       0       0       0
  2681 ;;      Temps:          0       0       0       0       0
  2682 ;;      Totals:         0       2       0       0       0
  2683 ;;Total ram usage:        2 bytes
  2684 ;; Hardware stack levels used:    1
  2685 ;; Hardware stack levels required when called:    8
  2686 ;; This function calls:
  2687 ;;		Nothing
  2688 ;; This function is called by:
  2689 ;;		_main
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           	psect	text10
  2694  001CB2                     __ptext10:
  2695                           	opt stack 0
  2696  001CB2                     _init_timer1_lthread:
  2697                           	opt stack 22
  2698                           
  2699                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2700                           
  2701                           ; BSR set to: 0
  2702                           ;incstack = 0
  2703  001CB2  C097  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2704  001CB6  C098  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2705  001CBA  0E00               	movlw	0
  2706  001CBC  6EDE               	movwf	postinc2,c
  2707  001CBE  0E00               	movlw	0
  2708  001CC0  6EDD               	movwf	postdec2,c
  2709  001CC2  0012               	return	
  2710  001CC4                     __end_of_init_timer1_lthread:
  2711                           	opt stack 0
  2712                           tblptru	equ	0xFF8
  2713                           tblptrh	equ	0xFF7
  2714                           tblptrl	equ	0xFF6
  2715                           tablat	equ	0xFF5
  2716                           prodh	equ	0xFF4
  2717                           prodl	equ	0xFF3
  2718                           postinc0	equ	0xFEE
  2719                           wreg	equ	0xFE8
  2720                           indf1	equ	0xFE7
  2721                           postdec1	equ	0xFE5
  2722                           fsr1h	equ	0xFE2
  2723                           fsr1l	equ	0xFE1
  2724                           indf2	equ	0xFDF
  2725                           postinc2	equ	0xFDE
  2726                           postdec2	equ	0xFDD
  2727                           fsr2h	equ	0xFDA
  2728                           fsr2l	equ	0xFD9
  2729                           status	equ	0xFD8
  2730                           
  2731 ;; *************** function _init_queues *****************
  2732 ;; Defined at:
  2733 ;;		line 194 in file "../src/messages.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;		None
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;		None
  2738 ;; Return value:  Size  Location     Type
  2739 ;;		None               void
  2740 ;; Registers used:
  2741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2747 ;;      Params:         0       0       0       0       0
  2748 ;;      Locals:         0       0       0       0       0
  2749 ;;      Temps:          0       1       0       0       0
  2750 ;;      Totals:         0       1       0       0       0
  2751 ;;Total ram usage:        1 bytes
  2752 ;; Hardware stack levels used:    1
  2753 ;; Hardware stack levels required when called:    9
  2754 ;; This function calls:
  2755 ;;		_init_queue
  2756 ;; This function is called by:
  2757 ;;		_main
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           	psect	text11
  2762  001730                     __ptext11:
  2763                           	opt stack 0
  2764  001730                     _init_queues:
  2765                           	opt stack 21
  2766                           
  2767                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2768                           
  2769                           ;incstack = 0
  2770  001730  0100               	movlb	0	; () banked
  2771  001732  6F9B               	movwf	??_init_queues& (0+255),b
  2772  001734  0E00               	movlw	0
  2773  001736  6E57               	movwf	_MQ_Main_Willing_to_block,c
  2774  001738  0100               	movlb	0	; () banked
  2775  00173A  519B               	movf	??_init_queues& (0+255),w,b
  2776                           
  2777                           ; BSR set to: 0
  2778                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2779  00173C  0101               	movlb	1	; () banked
  2780  00173E  0E01               	movlw	high _ToMainLow_MQ
  2781  001740  0100               	movlb	0	; () banked
  2782  001742  0100               	movlb	0	; () banked
  2783  001744  6F98               	movwf	(init_queue@qptr+1)& (0+255),b
  2784  001746  0101               	movlb	1	; () banked
  2785  001748  0EA2               	movlw	low _ToMainLow_MQ
  2786  00174A  0100               	movlb	0	; () banked
  2787  00174C  0100               	movlb	0	; () banked
  2788  00174E  6F97               	movwf	init_queue@qptr& (0+255),b
  2789  001750  EC22  F00B         	call	_init_queue	;wreg free
  2790                           
  2791                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2792  001754  0101               	movlb	1	; () banked
  2793  001756  0E01               	movlw	high _ToMainHigh_MQ
  2794  001758  0100               	movlb	0	; () banked
  2795  00175A  0100               	movlb	0	; () banked
  2796  00175C  6F98               	movwf	(init_queue@qptr+1)& (0+255),b
  2797  00175E  0101               	movlb	1	; () banked
  2798  001760  0E6C               	movlw	low _ToMainHigh_MQ
  2799  001762  0100               	movlb	0	; () banked
  2800  001764  0100               	movlb	0	; () banked
  2801  001766  6F97               	movwf	init_queue@qptr& (0+255),b
  2802  001768  EC22  F00B         	call	_init_queue	;wreg free
  2803                           
  2804                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2805  00176C  0101               	movlb	1	; () banked
  2806  00176E  0E01               	movlw	high _FromMainLow_MQ
  2807  001770  0100               	movlb	0	; () banked
  2808  001772  0100               	movlb	0	; () banked
  2809  001774  6F98               	movwf	(init_queue@qptr+1)& (0+255),b
  2810  001776  0101               	movlb	1	; () banked
  2811  001778  0E36               	movlw	low _FromMainLow_MQ
  2812  00177A  0100               	movlb	0	; () banked
  2813  00177C  0100               	movlb	0	; () banked
  2814  00177E  6F97               	movwf	init_queue@qptr& (0+255),b
  2815  001780  EC22  F00B         	call	_init_queue	;wreg free
  2816                           
  2817                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2818  001784  0101               	movlb	1	; () banked
  2819  001786  0E01               	movlw	high _FromMainHigh_MQ
  2820  001788  0100               	movlb	0	; () banked
  2821  00178A  0100               	movlb	0	; () banked
  2822  00178C  6F98               	movwf	(init_queue@qptr+1)& (0+255),b
  2823  00178E  0101               	movlb	1	; () banked
  2824  001790  0E00               	movlw	low _FromMainHigh_MQ
  2825  001792  0100               	movlb	0	; () banked
  2826  001794  0100               	movlb	0	; () banked
  2827  001796  6F97               	movwf	init_queue@qptr& (0+255),b
  2828  001798  EC22  F00B         	call	_init_queue	;wreg free
  2829  00179C  0012               	return	
  2830  00179E                     __end_of_init_queues:
  2831                           	opt stack 0
  2832                           tblptru	equ	0xFF8
  2833                           tblptrh	equ	0xFF7
  2834                           tblptrl	equ	0xFF6
  2835                           tablat	equ	0xFF5
  2836                           prodh	equ	0xFF4
  2837                           prodl	equ	0xFF3
  2838                           postinc0	equ	0xFEE
  2839                           wreg	equ	0xFE8
  2840                           indf1	equ	0xFE7
  2841                           postdec1	equ	0xFE5
  2842                           fsr1h	equ	0xFE2
  2843                           fsr1l	equ	0xFE1
  2844                           indf2	equ	0xFDF
  2845                           postinc2	equ	0xFDE
  2846                           postdec2	equ	0xFDD
  2847                           fsr2h	equ	0xFDA
  2848                           fsr2l	equ	0xFD9
  2849                           status	equ	0xFD8
  2850                           
  2851 ;; *************** function _init_queue *****************
  2852 ;; Defined at:
  2853 ;;		line 14 in file "../src/messages.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  qptr            2   23[BANK0 ] PTR struct __msg_queue
  2856 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;  i               1   26[BANK0 ] unsigned char 
  2859 ;; Return value:  Size  Location     Type
  2860 ;;		None               void
  2861 ;; Registers used:
  2862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2868 ;;      Params:         0       2       0       0       0
  2869 ;;      Locals:         0       1       0       0       0
  2870 ;;      Temps:          0       1       0       0       0
  2871 ;;      Totals:         0       4       0       0       0
  2872 ;;Total ram usage:        4 bytes
  2873 ;; Hardware stack levels used:    1
  2874 ;; Hardware stack levels required when called:    8
  2875 ;; This function calls:
  2876 ;;		Nothing
  2877 ;; This function is called by:
  2878 ;;		_init_queues
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           	psect	text12
  2883  001644                     __ptext12:
  2884                           	opt stack 0
  2885  001644                     _init_queue:
  2886                           	opt stack 21
  2887                           
  2888                           ;messages.c: 15: unsigned char i;
  2889                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2890                           
  2891                           ;incstack = 0
  2892  001644  0100               	movlb	0	; () banked
  2893  001646  EE20 F034          	lfsr	2,52
  2894  00164A  0100               	movlb	0	; () banked
  2895  00164C  5197               	movf	init_queue@qptr& (0+255),w,b
  2896  00164E  26D9               	addwf	fsr2l,f,c
  2897  001650  0100               	movlb	0	; () banked
  2898  001652  5198               	movf	(init_queue@qptr+1)& (0+255),w,b
  2899  001654  22DA               	addwfc	fsr2h,f,c
  2900  001656  0E00               	movlw	0
  2901  001658  6EDF               	movwf	indf2,c
  2902                           
  2903                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2904  00165A  0100               	movlb	0	; () banked
  2905  00165C  EE20 F035          	lfsr	2,53
  2906  001660  0100               	movlb	0	; () banked
  2907  001662  5197               	movf	init_queue@qptr& (0+255),w,b
  2908  001664  26D9               	addwf	fsr2l,f,c
  2909  001666  0100               	movlb	0	; () banked
  2910  001668  5198               	movf	(init_queue@qptr+1)& (0+255),w,b
  2911  00166A  22DA               	addwfc	fsr2h,f,c
  2912  00166C  0E00               	movlw	0
  2913  00166E  6EDF               	movwf	indf2,c
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2917  001670  0100               	movlb	0	; () banked
  2918  001672  6F99               	movwf	??_init_queue& (0+255),b
  2919  001674  0E00               	movlw	0
  2920  001676  0100               	movlb	0	; () banked
  2921  001678  0100               	movlb	0	; () banked
  2922  00167A  6F9A               	movwf	init_queue@i& (0+255),b
  2923  00167C  0100               	movlb	0	; () banked
  2924  00167E  5199               	movf	??_init_queue& (0+255),w,b
  2925                           
  2926                           ; BSR set to: 0
  2927  001680  0E03               	movlw	3
  2928  001682  0100               	movlb	0	; () banked
  2929  001684  0100               	movlb	0	; () banked
  2930  001686  659A               	cpfsgt	init_queue@i& (0+255),b
  2931  001688  D001               	goto	l3359
  2932  00168A  0012               	return	
  2933  00168C                     l3359:
  2934                           
  2935                           ; BSR set to: 0
  2936                           ;messages.c: 20: qptr->queue[i].full = 0;
  2937  00168C  0100               	movlb	0	; () banked
  2938  00168E  0100               	movlb	0	; () banked
  2939  001690  519A               	movf	init_queue@i& (0+255),w,b
  2940  001692  0D0D               	mullw	13
  2941  001694  50F3               	movf	prodl,w,c
  2942  001696  0100               	movlb	0	; () banked
  2943  001698  0100               	movlb	0	; () banked
  2944  00169A  2597               	addwf	init_queue@qptr& (0+255),w,b
  2945  00169C  6ED9               	movwf	fsr2l,c
  2946  00169E  50F4               	movf	prodh,w,c
  2947  0016A0  0100               	movlb	0	; () banked
  2948  0016A2  0100               	movlb	0	; () banked
  2949  0016A4  2198               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2950  0016A6  6EDA               	movwf	fsr2h,c
  2951  0016A8  0E00               	movlw	0
  2952  0016AA  6EDF               	movwf	indf2,c
  2953                           
  2954                           ; BSR set to: 0
  2955  0016AC  0100               	movlb	0	; () banked
  2956  0016AE  0100               	movlb	0	; () banked
  2957  0016B0  2B9A               	incf	init_queue@i& (0+255),f,b
  2958                           
  2959                           ; BSR set to: 0
  2960  0016B2  0E03               	movlw	3
  2961  0016B4  0100               	movlb	0	; () banked
  2962  0016B6  0100               	movlb	0	; () banked
  2963  0016B8  659A               	cpfsgt	init_queue@i& (0+255),b
  2964  0016BA  D7E8               	goto	l3359
  2965  0016BC  0012               	return	
  2966  0016BE                     __end_of_init_queue:
  2967                           	opt stack 0
  2968                           tblptru	equ	0xFF8
  2969                           tblptrh	equ	0xFF7
  2970                           tblptrl	equ	0xFF6
  2971                           tablat	equ	0xFF5
  2972                           prodh	equ	0xFF4
  2973                           prodl	equ	0xFF3
  2974                           postinc0	equ	0xFEE
  2975                           wreg	equ	0xFE8
  2976                           indf1	equ	0xFE7
  2977                           postdec1	equ	0xFE5
  2978                           fsr1h	equ	0xFE2
  2979                           fsr1l	equ	0xFE1
  2980                           indf2	equ	0xFDF
  2981                           postinc2	equ	0xFDE
  2982                           postdec2	equ	0xFDD
  2983                           fsr2h	equ	0xFDA
  2984                           fsr2l	equ	0xFD9
  2985                           status	equ	0xFD8
  2986                           
  2987 ;; *************** function _init_i2c *****************
  2988 ;; Defined at:
  2989 ;;		line 242 in file "../src/my_i2c.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;  ic              2   23[BANK0 ] PTR struct __i2c_comm
  2992 ;;		 -> main@ic(28), 
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;		None
  2995 ;; Return value:  Size  Location     Type
  2996 ;;		None               void
  2997 ;; Registers used:
  2998 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3004 ;;      Params:         0       2       0       0       0
  3005 ;;      Locals:         0       0       0       0       0
  3006 ;;      Temps:          0       0       0       0       0
  3007 ;;      Totals:         0       2       0       0       0
  3008 ;;Total ram usage:        2 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    8
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_main
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text13
  3019  00179E                     __ptext13:
  3020                           	opt stack 0
  3021  00179E                     _init_i2c:
  3022                           	opt stack 22
  3023                           
  3024                           ;my_i2c.c: 243: ic_ptr = ic;
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;incstack = 0
  3028  00179E  0100               	movlb	0	; () banked
  3029  0017A0  0100               	movlb	0	; () banked
  3030  0017A2  C098  F0C4         	movff	init_i2c@ic+1,_ic_ptr+1
  3031  0017A6  0100               	movlb	0	; () banked
  3032  0017A8  0100               	movlb	0	; () banked
  3033  0017AA  C097  F0C3         	movff	init_i2c@ic,_ic_ptr
  3034                           
  3035                           ; BSR set to: 0
  3036                           ;my_i2c.c: 244: ic_ptr->buflen = 0;
  3037  0017AE  0100               	movlb	0	; () banked
  3038  0017B0  EE20 F00A          	lfsr	2,10
  3039  0017B4  0100               	movlb	0	; () banked
  3040  0017B6  51C3               	movf	_ic_ptr& (0+255),w,b
  3041  0017B8  26D9               	addwf	fsr2l,f,c
  3042  0017BA  0100               	movlb	0	; () banked
  3043  0017BC  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  3044  0017BE  22DA               	addwfc	fsr2h,f,c
  3045  0017C0  0E00               	movlw	0
  3046  0017C2  6EDF               	movwf	indf2,c
  3047                           
  3048                           ; BSR set to: 0
  3049                           ;my_i2c.c: 245: ic_ptr->event_count = 0;
  3050  0017C4  0100               	movlb	0	; () banked
  3051  0017C6  EE20 F00B          	lfsr	2,11
  3052  0017CA  0100               	movlb	0	; () banked
  3053  0017CC  51C3               	movf	_ic_ptr& (0+255),w,b
  3054  0017CE  26D9               	addwf	fsr2l,f,c
  3055  0017D0  0100               	movlb	0	; () banked
  3056  0017D2  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  3057  0017D4  22DA               	addwfc	fsr2h,f,c
  3058  0017D6  0E00               	movlw	0
  3059  0017D8  6EDF               	movwf	indf2,c
  3060                           
  3061                           ; BSR set to: 0
  3062                           ;my_i2c.c: 246: ic_ptr->status = 0x5;
  3063  0017DA  0100               	movlb	0	; () banked
  3064  0017DC  EE20 F00C          	lfsr	2,12
  3065  0017E0  0100               	movlb	0	; () banked
  3066  0017E2  51C3               	movf	_ic_ptr& (0+255),w,b
  3067  0017E4  26D9               	addwf	fsr2l,f,c
  3068  0017E6  0100               	movlb	0	; () banked
  3069  0017E8  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  3070  0017EA  22DA               	addwfc	fsr2h,f,c
  3071  0017EC  0E05               	movlw	5
  3072  0017EE  6EDF               	movwf	indf2,c
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;my_i2c.c: 247: ic_ptr->error_count = 0;
  3076  0017F0  0100               	movlb	0	; () banked
  3077  0017F2  EE20 F00E          	lfsr	2,14
  3078  0017F6  0100               	movlb	0	; () banked
  3079  0017F8  51C3               	movf	_ic_ptr& (0+255),w,b
  3080  0017FA  26D9               	addwf	fsr2l,f,c
  3081  0017FC  0100               	movlb	0	; () banked
  3082  0017FE  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  3083  001800  22DA               	addwfc	fsr2h,f,c
  3084  001802  0E00               	movlw	0
  3085  001804  6EDF               	movwf	indf2,c
  3086                           
  3087                           ; BSR set to: 0
  3088  001806  0012               	return	
  3089  001808                     __end_of_init_i2c:
  3090                           	opt stack 0
  3091                           tblptru	equ	0xFF8
  3092                           tblptrh	equ	0xFF7
  3093                           tblptrl	equ	0xFF6
  3094                           tablat	equ	0xFF5
  3095                           prodh	equ	0xFF4
  3096                           prodl	equ	0xFF3
  3097                           postinc0	equ	0xFEE
  3098                           wreg	equ	0xFE8
  3099                           indf1	equ	0xFE7
  3100                           postdec1	equ	0xFE5
  3101                           fsr1h	equ	0xFE2
  3102                           fsr1l	equ	0xFE1
  3103                           indf2	equ	0xFDF
  3104                           postinc2	equ	0xFDE
  3105                           postdec2	equ	0xFDD
  3106                           fsr2h	equ	0xFDA
  3107                           fsr2l	equ	0xFD9
  3108                           status	equ	0xFD8
  3109                           
  3110 ;; *************** function _i2c_configure_slave *****************
  3111 ;; Defined at:
  3112 ;;		line 253 in file "../src/my_i2c.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;  addr            1    wreg     unsigned char 
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;  addr            1   23[BANK0 ] unsigned char 
  3117 ;; Return value:  Size  Location     Type
  3118 ;;		None               void
  3119 ;; Registers used:
  3120 ;;		wreg, status,2, status,0
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3126 ;;      Params:         0       0       0       0       0
  3127 ;;      Locals:         0       1       0       0       0
  3128 ;;      Temps:          0       0       0       0       0
  3129 ;;      Totals:         0       1       0       0       0
  3130 ;;Total ram usage:        1 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; Hardware stack levels required when called:    8
  3133 ;; This function calls:
  3134 ;;		Nothing
  3135 ;; This function is called by:
  3136 ;;		_main
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           	psect	text14
  3141  001C04                     __ptext14:
  3142                           	opt stack 0
  3143  001C04                     _i2c_configure_slave:
  3144                           	opt stack 22
  3145                           
  3146                           ; BSR set to: 0
  3147                           ;incstack = 0
  3148                           ;i2c_configure_slave@addr stored from wreg
  3149  001C04  CFE8 F097          	movff	wreg,i2c_configure_slave@addr
  3150                           
  3151                           ;my_i2c.c: 265: TRISCbits.TRISC3 = 1;
  3152  001C08  8694               	bsf	3988,3,c	;volatile
  3153                           
  3154                           ;my_i2c.c: 266: TRISCbits.TRISC4 = 1;
  3155  001C0A  8894               	bsf	3988,4,c	;volatile
  3156                           
  3157                           ;my_i2c.c: 271: SSPADD = addr;
  3158  001C0C  C097  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3159                           
  3160                           ;my_i2c.c: 273: SSPSTAT = 0x0;
  3161  001C10  0E00               	movlw	0
  3162  001C12  6EC7               	movwf	4039,c	;volatile
  3163                           
  3164                           ;my_i2c.c: 274: SSPCON1 = 0x0;
  3165  001C14  0E00               	movlw	0
  3166  001C16  6EC6               	movwf	4038,c	;volatile
  3167                           
  3168                           ;my_i2c.c: 275: SSPCON2 = 0x0;
  3169  001C18  0E00               	movlw	0
  3170  001C1A  6EC5               	movwf	4037,c	;volatile
  3171                           
  3172                           ;my_i2c.c: 276: SSPCON1 |= 0x0E;
  3173  001C1C  0E0E               	movlw	14
  3174  001C1E  12C6               	iorwf	4038,f,c	;volatile
  3175                           
  3176                           ;my_i2c.c: 277: SSPSTAT |= 0b10000000;
  3177  001C20  8EC7               	bsf	4039,7,c	;volatile
  3178                           
  3179                           ;my_i2c.c: 280: TRISCbits.TRISC3 = 1;
  3180  001C22  8694               	bsf	3988,3,c	;volatile
  3181                           
  3182                           ;my_i2c.c: 281: TRISCbits.TRISC4 = 1;
  3183  001C24  8894               	bsf	3988,4,c	;volatile
  3184                           
  3185                           ;my_i2c.c: 302: SSPCON2bits.SEN = 1;
  3186  001C26  80C5               	bsf	4037,0,c	;volatile
  3187                           
  3188                           ;my_i2c.c: 303: SSPCON1 |= 0b00100000;
  3189  001C28  8AC6               	bsf	4038,5,c	;volatile
  3190  001C2A  0012               	return	
  3191  001C2C                     __end_of_i2c_configure_slave:
  3192                           	opt stack 0
  3193                           tblptru	equ	0xFF8
  3194                           tblptrh	equ	0xFF7
  3195                           tblptrl	equ	0xFF6
  3196                           tablat	equ	0xFF5
  3197                           prodh	equ	0xFF4
  3198                           prodl	equ	0xFF3
  3199                           postinc0	equ	0xFEE
  3200                           wreg	equ	0xFE8
  3201                           indf1	equ	0xFE7
  3202                           postdec1	equ	0xFE5
  3203                           fsr1h	equ	0xFE2
  3204                           fsr1l	equ	0xFE1
  3205                           indf2	equ	0xFDF
  3206                           postinc2	equ	0xFDE
  3207                           postdec2	equ	0xFDD
  3208                           fsr2h	equ	0xFDA
  3209                           fsr2l	equ	0xFD9
  3210                           status	equ	0xFD8
  3211                           
  3212 ;; *************** function _enable_interrupts *****************
  3213 ;; Defined at:
  3214 ;;		line 15 in file "../src/interrupts.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;		None
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;		None
  3219 ;; Return value:  Size  Location     Type
  3220 ;;		None               void
  3221 ;; Registers used:
  3222 ;;		None
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3228 ;;      Params:         0       0       0       0       0
  3229 ;;      Locals:         0       0       0       0       0
  3230 ;;      Temps:          0       0       0       0       0
  3231 ;;      Totals:         0       0       0       0       0
  3232 ;;Total ram usage:        0 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:    8
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		_main
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           	psect	text15
  3243  001D26                     __ptext15:
  3244                           	opt stack 0
  3245  001D26                     _enable_interrupts:
  3246                           	opt stack 22
  3247                           
  3248                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  3249                           
  3250                           ;incstack = 0
  3251  001D26  8ED0               	bsf	4048,7,c	;volatile
  3252                           
  3253                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  3254  001D28  8EF2               	bsf	intcon,7,c	;volatile
  3255                           
  3256                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3257  001D2A  8CF2               	bsf	intcon,6,c	;volatile
  3258  001D2C  0012               	return	
  3259  001D2E                     __end_of_enable_interrupts:
  3260                           	opt stack 0
  3261                           tblptru	equ	0xFF8
  3262                           tblptrh	equ	0xFF7
  3263                           tblptrl	equ	0xFF6
  3264                           tablat	equ	0xFF5
  3265                           prodh	equ	0xFF4
  3266                           prodl	equ	0xFF3
  3267                           intcon	equ	0xFF2
  3268                           postinc0	equ	0xFEE
  3269                           wreg	equ	0xFE8
  3270                           indf1	equ	0xFE7
  3271                           postdec1	equ	0xFE5
  3272                           fsr1h	equ	0xFE2
  3273                           fsr1l	equ	0xFE1
  3274                           indf2	equ	0xFDF
  3275                           postinc2	equ	0xFDE
  3276                           postdec2	equ	0xFDD
  3277                           fsr2h	equ	0xFDA
  3278                           fsr2l	equ	0xFD9
  3279                           status	equ	0xFD8
  3280                           
  3281 ;; *************** function _block_on_To_msgqueues *****************
  3282 ;; Defined at:
  3283 ;;		line 258 in file "../src/messages.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;		None
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;		None
  3288 ;; Return value:  Size  Location     Type
  3289 ;;		None               void
  3290 ;; Registers used:
  3291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3297 ;;      Params:         0       0       0       0       0
  3298 ;;      Locals:         0       0       0       0       0
  3299 ;;      Temps:          0       1       0       0       0
  3300 ;;      Totals:         0       1       0       0       0
  3301 ;;Total ram usage:        1 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; Hardware stack levels required when called:   11
  3304 ;; This function calls:
  3305 ;;		_Delay1KTCYx
  3306 ;;		_check_msg
  3307 ;;		_in_main
  3308 ;; This function is called by:
  3309 ;;		_main
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           	psect	text16
  3314  0015C6                     __ptext16:
  3315                           	opt stack 0
  3316  0015C6                     _block_on_To_msgqueues:
  3317                           	opt stack 19
  3318                           
  3319                           ;messages.c: 259: if (!in_main()) {
  3320                           
  3321                           ;incstack = 0
  3322  0015C6  ECA4  F00C         	call	_in_main	;wreg free
  3323  0015CA  0100               	movlb	0	; () banked
  3324  0015CC  0100               	movlb	0	; () banked
  3325  0015CE  519C               	movf	(?_in_main+1)& (0+255),w,b
  3326  0015D0  0100               	movlb	0	; () banked
  3327  0015D2  119B               	iorwf	?_in_main& (0+255),w,b
  3328  0015D4  B4D8               	btfsc	status,2,c
  3329  0015D6  0012               	return	
  3330                           
  3331                           ; BSR set to: 0
  3332                           ;messages.c: 261: }
  3333                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3334                           
  3335                           ; BSR set to: 0
  3336                           
  3337                           ; BSR set to: 0
  3338                           ;messages.c: 260: return;
  3339  0015D8  0100               	movlb	0	; () banked
  3340  0015DA  6F9D               	movwf	??_block_on_To_msgqueues& (0+255),b
  3341  0015DC  0E01               	movlw	1
  3342  0015DE  6E57               	movwf	_MQ_Main_Willing_to_block,c
  3343  0015E0  0100               	movlb	0	; () banked
  3344  0015E2  519D               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3345  0015E4                     l3289:
  3346                           
  3347                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3348  0015E4  0101               	movlb	1	; () banked
  3349  0015E6  0E01               	movlw	high _ToMainHigh_MQ
  3350  0015E8  0100               	movlb	0	; () banked
  3351  0015EA  0100               	movlb	0	; () banked
  3352  0015EC  6F98               	movwf	(check_msg@qptr+1)& (0+255),b
  3353  0015EE  0101               	movlb	1	; () banked
  3354  0015F0  0E6C               	movlw	low _ToMainHigh_MQ
  3355  0015F2  0100               	movlb	0	; () banked
  3356  0015F4  0100               	movlb	0	; () banked
  3357  0015F6  6F97               	movwf	check_msg@qptr& (0+255),b
  3358  0015F8  EC7D  F00D         	call	_check_msg	;wreg free
  3359  0015FC  0900               	iorlw	0
  3360  0015FE  B4D8               	btfsc	status,2,c
  3361  001600  D007               	goto	l3295
  3362                           
  3363                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3364  001602  0100               	movlb	0	; () banked
  3365  001604  6F9D               	movwf	??_block_on_To_msgqueues& (0+255),b
  3366  001606  0E00               	movlw	0
  3367  001608  6E57               	movwf	_MQ_Main_Willing_to_block,c
  3368  00160A  0100               	movlb	0	; () banked
  3369  00160C  519D               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3370  00160E  0012               	return	
  3371  001610                     l3295:
  3372                           
  3373                           ;messages.c: 271: }
  3374                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3375  001610  0101               	movlb	1	; () banked
  3376  001612  0E01               	movlw	high _ToMainLow_MQ
  3377  001614  0100               	movlb	0	; () banked
  3378  001616  0100               	movlb	0	; () banked
  3379  001618  6F98               	movwf	(check_msg@qptr+1)& (0+255),b
  3380  00161A  0101               	movlb	1	; () banked
  3381  00161C  0EA2               	movlw	low _ToMainLow_MQ
  3382  00161E  0100               	movlb	0	; () banked
  3383  001620  0100               	movlb	0	; () banked
  3384  001622  6F97               	movwf	check_msg@qptr& (0+255),b
  3385  001624  EC7D  F00D         	call	_check_msg	;wreg free
  3386  001628  0900               	iorlw	0
  3387  00162A  B4D8               	btfsc	status,2,c
  3388  00162C  D007               	goto	l3301
  3389                           
  3390                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3391  00162E  0100               	movlb	0	; () banked
  3392  001630  6F9D               	movwf	??_block_on_To_msgqueues& (0+255),b
  3393  001632  0E00               	movlw	0
  3394  001634  6E57               	movwf	_MQ_Main_Willing_to_block,c
  3395  001636  0100               	movlb	0	; () banked
  3396  001638  519D               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3397  00163A  0012               	return	
  3398  00163C                     l3301:
  3399                           
  3400                           ;messages.c: 278: }
  3401                           ;messages.c: 279: Delay1KTCYx(10);
  3402  00163C  0E0A               	movlw	10
  3403  00163E  EC3B  F00E         	call	_Delay1KTCYx
  3404  001642  D7D0               	goto	l3289
  3405  001644                     __end_of_block_on_To_msgqueues:
  3406                           	opt stack 0
  3407                           tblptru	equ	0xFF8
  3408                           tblptrh	equ	0xFF7
  3409                           tblptrl	equ	0xFF6
  3410                           tablat	equ	0xFF5
  3411                           prodh	equ	0xFF4
  3412                           prodl	equ	0xFF3
  3413                           intcon	equ	0xFF2
  3414                           postinc0	equ	0xFEE
  3415                           wreg	equ	0xFE8
  3416                           indf1	equ	0xFE7
  3417                           postdec1	equ	0xFE5
  3418                           fsr1h	equ	0xFE2
  3419                           fsr1l	equ	0xFE1
  3420                           indf2	equ	0xFDF
  3421                           postinc2	equ	0xFDE
  3422                           postdec2	equ	0xFDD
  3423                           fsr2h	equ	0xFDA
  3424                           fsr2l	equ	0xFD9
  3425                           status	equ	0xFD8
  3426                           
  3427 ;; *************** function _in_main *****************
  3428 ;; Defined at:
  3429 ;;		line 43 in file "../src/interrupts.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;		None
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;		None
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  2   27[BANK0 ] int 
  3436 ;; Registers used:
  3437 ;;		wreg, status,2, status,0, cstack
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3443 ;;      Params:         0       2       0       0       0
  3444 ;;      Locals:         0       0       0       0       0
  3445 ;;      Temps:          0       0       0       0       0
  3446 ;;      Totals:         0       2       0       0       0
  3447 ;;Total ram usage:        2 bytes
  3448 ;; Hardware stack levels used:    1
  3449 ;; Hardware stack levels required when called:   10
  3450 ;; This function calls:
  3451 ;;		_in_high_int
  3452 ;;		_in_low_int
  3453 ;; This function is called by:
  3454 ;;		_block_on_To_msgqueues
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text17
  3459  001948                     __ptext17:
  3460                           	opt stack 0
  3461  001948                     _in_main:
  3462                           	opt stack 19
  3463                           
  3464                           ;interrupts.c: 44: if ((!in_low_int()) && (!in_high_int())) {
  3465                           
  3466                           ;incstack = 0
  3467  001948  EC81  F00C         	call	_in_low_int	;wreg free
  3468  00194C  0100               	movlb	0	; () banked
  3469  00194E  0100               	movlb	0	; () banked
  3470  001950  519A               	movf	(?_in_low_int+1)& (0+255),w,b
  3471  001952  0100               	movlb	0	; () banked
  3472  001954  1199               	iorwf	?_in_low_int& (0+255),w,b
  3473  001956  A4D8               	btfss	status,2,c
  3474  001958  D011               	goto	l2919
  3475                           
  3476                           ; BSR set to: 0
  3477  00195A  EC62  F00E         	call	_in_high_int	;wreg free
  3478  00195E  0100               	movlb	0	; () banked
  3479  001960  0100               	movlb	0	; () banked
  3480  001962  5198               	movf	(?_in_high_int+1)& (0+255),w,b
  3481  001964  0100               	movlb	0	; () banked
  3482  001966  1197               	iorwf	?_in_high_int& (0+255),w,b
  3483  001968  A4D8               	btfss	status,2,c
  3484  00196A  D008               	goto	l2919
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;interrupts.c: 45: return (1);
  3488  00196C  0E00               	movlw	0
  3489  00196E  0100               	movlb	0	; () banked
  3490  001970  0100               	movlb	0	; () banked
  3491  001972  6F9C               	movwf	(?_in_main+1)& (0+255),b
  3492  001974  0E01               	movlw	1
  3493  001976  0100               	movlb	0	; () banked
  3494  001978  6F9B               	movwf	?_in_main& (0+255),b
  3495  00197A  0012               	return	
  3496  00197C                     l2919:
  3497                           
  3498                           ; BSR set to: 0
  3499                           ;interrupts.c: 47: return (0);
  3500  00197C  0E00               	movlw	0
  3501  00197E  0100               	movlb	0	; () banked
  3502  001980  0100               	movlb	0	; () banked
  3503  001982  6F9C               	movwf	(?_in_main+1)& (0+255),b
  3504  001984  0E00               	movlw	0
  3505  001986  0100               	movlb	0	; () banked
  3506  001988  6F9B               	movwf	?_in_main& (0+255),b
  3507  00198A  0012               	return	
  3508  00198C                     __end_of_in_main:
  3509                           	opt stack 0
  3510                           tblptru	equ	0xFF8
  3511                           tblptrh	equ	0xFF7
  3512                           tblptrl	equ	0xFF6
  3513                           tablat	equ	0xFF5
  3514                           prodh	equ	0xFF4
  3515                           prodl	equ	0xFF3
  3516                           intcon	equ	0xFF2
  3517                           postinc0	equ	0xFEE
  3518                           wreg	equ	0xFE8
  3519                           indf1	equ	0xFE7
  3520                           postdec1	equ	0xFE5
  3521                           fsr1h	equ	0xFE2
  3522                           fsr1l	equ	0xFE1
  3523                           indf2	equ	0xFDF
  3524                           postinc2	equ	0xFDE
  3525                           postdec2	equ	0xFDD
  3526                           fsr2h	equ	0xFDA
  3527                           fsr2l	equ	0xFD9
  3528                           status	equ	0xFD8
  3529                           
  3530 ;; *************** function _in_low_int *****************
  3531 ;; Defined at:
  3532 ;;		line 32 in file "../src/interrupts.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;		None
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;		None
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  2   25[BANK0 ] int 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0, cstack
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3546 ;;      Params:         0       2       0       0       0
  3547 ;;      Locals:         0       0       0       0       0
  3548 ;;      Temps:          0       0       0       0       0
  3549 ;;      Totals:         0       2       0       0       0
  3550 ;;Total ram usage:        2 bytes
  3551 ;; Hardware stack levels used:    1
  3552 ;; Hardware stack levels required when called:    9
  3553 ;; This function calls:
  3554 ;;		_in_high_int
  3555 ;; This function is called by:
  3556 ;;		_in_main
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           	psect	text18
  3561  001902                     __ptext18:
  3562                           	opt stack 0
  3563  001902                     _in_low_int:
  3564                           	opt stack 19
  3565                           
  3566                           ;interrupts.c: 34: if (INTCONbits.GIEL == 1) {
  3567                           
  3568                           ; BSR set to: 0
  3569                           ;incstack = 0
  3570  001902  ACF2               	btfss	intcon,6,c	;volatile
  3571  001904  D008               	goto	l2897
  3572                           
  3573                           ;interrupts.c: 35: return (0);
  3574  001906  0E00               	movlw	0
  3575  001908  0100               	movlb	0	; () banked
  3576  00190A  0100               	movlb	0	; () banked
  3577  00190C  6F9A               	movwf	(?_in_low_int+1)& (0+255),b
  3578  00190E  0E00               	movlw	0
  3579  001910  0100               	movlb	0	; () banked
  3580  001912  6F99               	movwf	?_in_low_int& (0+255),b
  3581  001914  0012               	return	
  3582  001916                     l2897:
  3583  001916  EC62  F00E         	call	_in_high_int	;wreg free
  3584  00191A  0100               	movlb	0	; () banked
  3585  00191C  0100               	movlb	0	; () banked
  3586  00191E  5198               	movf	(?_in_high_int+1)& (0+255),w,b
  3587  001920  0100               	movlb	0	; () banked
  3588  001922  1197               	iorwf	?_in_high_int& (0+255),w,b
  3589  001924  B4D8               	btfsc	status,2,c
  3590  001926  D008               	goto	l2905
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;interrupts.c: 37: return (0);
  3594  001928  0E00               	movlw	0
  3595  00192A  0100               	movlb	0	; () banked
  3596  00192C  0100               	movlb	0	; () banked
  3597  00192E  6F9A               	movwf	(?_in_low_int+1)& (0+255),b
  3598  001930  0E00               	movlw	0
  3599  001932  0100               	movlb	0	; () banked
  3600  001934  6F99               	movwf	?_in_low_int& (0+255),b
  3601  001936  0012               	return	
  3602  001938                     l2905:
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;interrupts.c: 39: return (1);
  3606  001938  0E00               	movlw	0
  3607  00193A  0100               	movlb	0	; () banked
  3608  00193C  0100               	movlb	0	; () banked
  3609  00193E  6F9A               	movwf	(?_in_low_int+1)& (0+255),b
  3610  001940  0E01               	movlw	1
  3611  001942  0100               	movlb	0	; () banked
  3612  001944  6F99               	movwf	?_in_low_int& (0+255),b
  3613  001946  0012               	return	
  3614  001948                     __end_of_in_low_int:
  3615                           	opt stack 0
  3616                           tblptru	equ	0xFF8
  3617                           tblptrh	equ	0xFF7
  3618                           tblptrl	equ	0xFF6
  3619                           tablat	equ	0xFF5
  3620                           prodh	equ	0xFF4
  3621                           prodl	equ	0xFF3
  3622                           intcon	equ	0xFF2
  3623                           postinc0	equ	0xFEE
  3624                           wreg	equ	0xFE8
  3625                           indf1	equ	0xFE7
  3626                           postdec1	equ	0xFE5
  3627                           fsr1h	equ	0xFE2
  3628                           fsr1l	equ	0xFE1
  3629                           indf2	equ	0xFDF
  3630                           postinc2	equ	0xFDE
  3631                           postdec2	equ	0xFDD
  3632                           fsr2h	equ	0xFDA
  3633                           fsr2l	equ	0xFD9
  3634                           status	equ	0xFD8
  3635                           
  3636 ;; *************** function _in_high_int *****************
  3637 ;; Defined at:
  3638 ;;		line 23 in file "../src/interrupts.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;		None
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;		None
  3643 ;; Return value:  Size  Location     Type
  3644 ;;                  2   23[BANK0 ] int 
  3645 ;; Registers used:
  3646 ;;		wreg, status,2
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3652 ;;      Params:         0       2       0       0       0
  3653 ;;      Locals:         0       0       0       0       0
  3654 ;;      Temps:          0       0       0       0       0
  3655 ;;      Totals:         0       2       0       0       0
  3656 ;;Total ram usage:        2 bytes
  3657 ;; Hardware stack levels used:    1
  3658 ;; Hardware stack levels required when called:    8
  3659 ;; This function calls:
  3660 ;;		Nothing
  3661 ;; This function is called by:
  3662 ;;		_in_low_int
  3663 ;;		_in_main
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666                           
  3667                           	psect	text19
  3668  001CC4                     __ptext19:
  3669                           	opt stack 0
  3670  001CC4                     _in_high_int:
  3671                           	opt stack 19
  3672                           
  3673                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  3674                           
  3675                           ; BSR set to: 0
  3676                           ;incstack = 0
  3677  001CC4  0E00               	movlw	0
  3678  001CC6  AEF2               	btfss	intcon,7,c	;volatile
  3679  001CC8  0E01               	movlw	1
  3680  001CCA  0100               	movlb	0	; () banked
  3681  001CCC  0100               	movlb	0	; () banked
  3682  001CCE  6F97               	movwf	?_in_high_int& (0+255),b
  3683  001CD0  0100               	movlb	0	; () banked
  3684  001CD2  6B98               	clrf	(?_in_high_int+1)& (0+255),b
  3685  001CD4  0012               	return	
  3686  001CD6                     __end_of_in_high_int:
  3687                           	opt stack 0
  3688                           tblptru	equ	0xFF8
  3689                           tblptrh	equ	0xFF7
  3690                           tblptrl	equ	0xFF6
  3691                           tablat	equ	0xFF5
  3692                           prodh	equ	0xFF4
  3693                           prodl	equ	0xFF3
  3694                           intcon	equ	0xFF2
  3695                           postinc0	equ	0xFEE
  3696                           wreg	equ	0xFE8
  3697                           indf1	equ	0xFE7
  3698                           postdec1	equ	0xFE5
  3699                           fsr1h	equ	0xFE2
  3700                           fsr1l	equ	0xFE1
  3701                           indf2	equ	0xFDF
  3702                           postinc2	equ	0xFDE
  3703                           postdec2	equ	0xFDD
  3704                           fsr2h	equ	0xFDA
  3705                           fsr2l	equ	0xFD9
  3706                           status	equ	0xFD8
  3707                           
  3708 ;; *************** function _check_msg *****************
  3709 ;; Defined at:
  3710 ;;		line 222 in file "../src/messages.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;  qptr            2   23[BANK0 ] PTR struct __msg_queue
  3713 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;		None
  3716 ;; Return value:  Size  Location     Type
  3717 ;;                  1    wreg      unsigned char 
  3718 ;; Registers used:
  3719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/0
  3722 ;;		On exit  : 0/0
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3725 ;;      Params:         0       2       0       0       0
  3726 ;;      Locals:         0       0       0       0       0
  3727 ;;      Temps:          0       1       0       0       0
  3728 ;;      Totals:         0       3       0       0       0
  3729 ;;Total ram usage:        3 bytes
  3730 ;; Hardware stack levels used:    1
  3731 ;; Hardware stack levels required when called:    8
  3732 ;; This function calls:
  3733 ;;		Nothing
  3734 ;; This function is called by:
  3735 ;;		_block_on_To_msgqueues
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           	psect	text20
  3740  001AFA                     __ptext20:
  3741                           	opt stack 0
  3742  001AFA                     _check_msg:
  3743                           	opt stack 21
  3744                           
  3745                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;incstack = 0
  3749  001AFA  0100               	movlb	0	; () banked
  3750  001AFC  EE20 F035          	lfsr	2,53
  3751  001B00  0100               	movlb	0	; () banked
  3752  001B02  5197               	movf	check_msg@qptr& (0+255),w,b
  3753  001B04  26D9               	addwf	fsr2l,f,c
  3754  001B06  0100               	movlb	0	; () banked
  3755  001B08  5198               	movf	(check_msg@qptr+1)& (0+255),w,b
  3756  001B0A  22DA               	addwfc	fsr2h,f,c
  3757  001B0C  50DF               	movf	indf2,w,c
  3758  001B0E  0100               	movlb	0	; () banked
  3759  001B10  6F99               	movwf	??_check_msg& (0+255),b
  3760  001B12  0100               	movlb	0	; () banked
  3761  001B14  5199               	movf	??_check_msg& (0+255),w,b
  3762  001B16  0D0D               	mullw	13
  3763  001B18  50F3               	movf	prodl,w,c
  3764  001B1A  0100               	movlb	0	; () banked
  3765  001B1C  0100               	movlb	0	; () banked
  3766  001B1E  2597               	addwf	check_msg@qptr& (0+255),w,b
  3767  001B20  6ED9               	movwf	fsr2l,c
  3768  001B22  50F4               	movf	prodh,w,c
  3769  001B24  0100               	movlb	0	; () banked
  3770  001B26  0100               	movlb	0	; () banked
  3771  001B28  2198               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3772  001B2A  6EDA               	movwf	fsr2h,c
  3773  001B2C  50DF               	movf	indf2,w,c
  3774  001B2E  0012               	return	
  3775  001B30                     __end_of_check_msg:
  3776                           	opt stack 0
  3777                           tblptru	equ	0xFF8
  3778                           tblptrh	equ	0xFF7
  3779                           tblptrl	equ	0xFF6
  3780                           tablat	equ	0xFF5
  3781                           prodh	equ	0xFF4
  3782                           prodl	equ	0xFF3
  3783                           intcon	equ	0xFF2
  3784                           postinc0	equ	0xFEE
  3785                           wreg	equ	0xFE8
  3786                           indf1	equ	0xFE7
  3787                           postdec1	equ	0xFE5
  3788                           fsr1h	equ	0xFE2
  3789                           fsr1l	equ	0xFE1
  3790                           indf2	equ	0xFDF
  3791                           postinc2	equ	0xFDE
  3792                           postdec2	equ	0xFDD
  3793                           fsr2h	equ	0xFDA
  3794                           fsr2l	equ	0xFD9
  3795                           status	equ	0xFD8
  3796                           
  3797 ;; *************** function _Delay1KTCYx *****************
  3798 ;; Defined at:
  3799 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;  unit            1    wreg     unsigned char 
  3802 ;; Auto vars:     Size  Location     Type
  3803 ;;  unit            1   23[BANK0 ] unsigned char 
  3804 ;; Return value:  Size  Location     Type
  3805 ;;		None               void
  3806 ;; Registers used:
  3807 ;;		wreg
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3813 ;;      Params:         0       0       0       0       0
  3814 ;;      Locals:         0       1       0       0       0
  3815 ;;      Temps:          0       0       0       0       0
  3816 ;;      Totals:         0       1       0       0       0
  3817 ;;Total ram usage:        1 bytes
  3818 ;; Hardware stack levels used:    1
  3819 ;; Hardware stack levels required when called:    8
  3820 ;; This function calls:
  3821 ;;		Nothing
  3822 ;; This function is called by:
  3823 ;;		_block_on_To_msgqueues
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text21
  3828  001C76                     __ptext21:
  3829                           	opt stack 0
  3830  001C76                     _Delay1KTCYx:
  3831                           	opt stack 21
  3832                           
  3833                           ; BSR set to: 0
  3834                           ;incstack = 0
  3835                           ;Delay1KTCYx@unit stored from wreg
  3836  001C76  CFE8 F097          	movff	wreg,Delay1KTCYx@unit
  3837  001C7A                     l809:
  3838  001C7A  0EFA               	movlw	250
  3839  001C7C                     u2607:
  3840  001C7C  F000               	nop	
  3841  001C7E  2EE8               	decfsz	wreg,f,c
  3842  001C80  D7FD               	goto	u2607
  3843  001C82  0100               	movlb	0	; () banked
  3844  001C84  0100               	movlb	0	; () banked
  3845  001C86  2F97               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3846  001C88  D7F8               	goto	l809
  3847  001C8A  0012               	return	
  3848  001C8C                     __end_of_Delay1KTCYx:
  3849                           	opt stack 0
  3850                           tblptru	equ	0xFF8
  3851                           tblptrh	equ	0xFF7
  3852                           tblptrl	equ	0xFF6
  3853                           tablat	equ	0xFF5
  3854                           prodh	equ	0xFF4
  3855                           prodl	equ	0xFF3
  3856                           intcon	equ	0xFF2
  3857                           postinc0	equ	0xFEE
  3858                           wreg	equ	0xFE8
  3859                           indf1	equ	0xFE7
  3860                           postdec1	equ	0xFE5
  3861                           fsr1h	equ	0xFE2
  3862                           fsr1l	equ	0xFE1
  3863                           indf2	equ	0xFDF
  3864                           postinc2	equ	0xFDE
  3865                           postdec2	equ	0xFDD
  3866                           fsr2h	equ	0xFDA
  3867                           fsr2l	equ	0xFD9
  3868                           status	equ	0xFD8
  3869                           
  3870 ;; *************** function _WriteTimer1 *****************
  3871 ;; Defined at:
  3872 ;;		line 14 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;  timer1          2   23[BANK0 ] unsigned int 
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;  timer           2   25[BANK0 ] struct Timers
  3877 ;; Return value:  Size  Location     Type
  3878 ;;		None               void
  3879 ;; Registers used:
  3880 ;;		None
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3886 ;;      Params:         0       2       0       0       0
  3887 ;;      Locals:         0       2       0       0       0
  3888 ;;      Temps:          0       0       0       0       0
  3889 ;;      Totals:         0       4       0       0       0
  3890 ;;Total ram usage:        4 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:    8
  3893 ;; This function calls:
  3894 ;;		Nothing
  3895 ;; This function is called by:
  3896 ;;		_main
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           	psect	text22
  3901  001CD6                     __ptext22:
  3902                           	opt stack 0
  3903  001CD6                     _WriteTimer1:
  3904                           	opt stack 22
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;incstack = 0
  3908  001CD6  C097  F099         	movff	WriteTimer1@timer1,WriteTimer1@timer
  3909  001CDA  C098  F09A         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  3910  001CDE  C09A  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  3911  001CE2  C099  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  3912  001CE6  0012               	return	
  3913  001CE8                     __end_of_WriteTimer1:
  3914                           	opt stack 0
  3915                           tblptru	equ	0xFF8
  3916                           tblptrh	equ	0xFF7
  3917                           tblptrl	equ	0xFF6
  3918                           tablat	equ	0xFF5
  3919                           prodh	equ	0xFF4
  3920                           prodl	equ	0xFF3
  3921                           intcon	equ	0xFF2
  3922                           postinc0	equ	0xFEE
  3923                           wreg	equ	0xFE8
  3924                           indf1	equ	0xFE7
  3925                           postdec1	equ	0xFE5
  3926                           fsr1h	equ	0xFE2
  3927                           fsr1l	equ	0xFE1
  3928                           indf2	equ	0xFDF
  3929                           postinc2	equ	0xFDE
  3930                           postdec2	equ	0xFDD
  3931                           fsr2h	equ	0xFDA
  3932                           fsr2l	equ	0xFD9
  3933                           status	equ	0xFD8
  3934                           
  3935 ;; *************** function _ToMainLow_recvmsg *****************
  3936 ;; Defined at:
  3937 ;;		line 112 in file "../src/messages.c"
  3938 ;; Parameters:    Size  Location     Type
  3939 ;;  maxlength       1    wreg     unsigned char 
  3940 ;;  msgtype         2   47[BANK0 ] PTR unsigned char 
  3941 ;;		 -> main@msgtype(1), 
  3942 ;;  data            2   49[BANK0 ] PTR void 
  3943 ;;		 -> main@msgbuffer(11), 
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;  maxlength       1   51[BANK0 ] unsigned char 
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  1    wreg      char 
  3948 ;; Registers used:
  3949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3955 ;;      Params:         0       4       0       0       0
  3956 ;;      Locals:         0       1       0       0       0
  3957 ;;      Temps:          0       0       0       0       0
  3958 ;;      Totals:         0       5       0       0       0
  3959 ;;Total ram usage:        5 bytes
  3960 ;; Hardware stack levels used:    1
  3961 ;; Hardware stack levels required when called:   10
  3962 ;; This function calls:
  3963 ;;		_recv_msg
  3964 ;; This function is called by:
  3965 ;;		_main
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969                           	psect	text23
  3970  00198C                     __ptext23:
  3971                           	opt stack 0
  3972  00198C                     _ToMainLow_recvmsg:
  3973                           	opt stack 20
  3974                           
  3975                           ;incstack = 0
  3976                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3977  00198C  CFE8 F0B3          	movff	wreg,ToMainLow_recvmsg@maxlength
  3978                           
  3979                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3980  001990  0101               	movlb	1	; () banked
  3981  001992  0E01               	movlw	high _ToMainLow_MQ
  3982  001994  0100               	movlb	0	; () banked
  3983  001996  0100               	movlb	0	; () banked
  3984  001998  6FA2               	movwf	(recv_msg@qptr+1)& (0+255),b
  3985  00199A  0101               	movlb	1	; () banked
  3986  00199C  0EA2               	movlw	low _ToMainLow_MQ
  3987  00199E  0100               	movlb	0	; () banked
  3988  0019A0  0100               	movlb	0	; () banked
  3989  0019A2  6FA1               	movwf	recv_msg@qptr& (0+255),b
  3990  0019A4  C0B3  F0A3         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3991  0019A8  0100               	movlb	0	; () banked
  3992  0019AA  0100               	movlb	0	; () banked
  3993  0019AC  C0B0  F0A5         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3994  0019B0  0100               	movlb	0	; () banked
  3995  0019B2  0100               	movlb	0	; () banked
  3996  0019B4  C0AF  F0A4         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3997  0019B8  0100               	movlb	0	; () banked
  3998  0019BA  0100               	movlb	0	; () banked
  3999  0019BC  C0B2  F0A7         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4000  0019C0  0100               	movlb	0	; () banked
  4001  0019C2  0100               	movlb	0	; () banked
  4002  0019C4  C0B1  F0A6         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4003  0019C8  EC21  F006         	call	_recv_msg	;wreg free
  4004  0019CC  0012               	return	
  4005  0019CE                     __end_of_ToMainLow_recvmsg:
  4006                           	opt stack 0
  4007                           tblptru	equ	0xFF8
  4008                           tblptrh	equ	0xFF7
  4009                           tblptrl	equ	0xFF6
  4010                           tablat	equ	0xFF5
  4011                           prodh	equ	0xFF4
  4012                           prodl	equ	0xFF3
  4013                           intcon	equ	0xFF2
  4014                           postinc0	equ	0xFEE
  4015                           wreg	equ	0xFE8
  4016                           indf1	equ	0xFE7
  4017                           postdec1	equ	0xFE5
  4018                           fsr1h	equ	0xFE2
  4019                           fsr1l	equ	0xFE1
  4020                           indf2	equ	0xFDF
  4021                           postinc2	equ	0xFDE
  4022                           postdec2	equ	0xFDD
  4023                           fsr2h	equ	0xFDA
  4024                           fsr2l	equ	0xFD9
  4025                           status	equ	0xFD8
  4026                           
  4027 ;; *************** function _ToMainHigh_recvmsg *****************
  4028 ;; Defined at:
  4029 ;;		line 135 in file "../src/messages.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;  maxlength       1    wreg     unsigned char 
  4032 ;;  msgtype         2   47[BANK0 ] PTR unsigned char 
  4033 ;;		 -> main@msgtype(1), 
  4034 ;;  data            2   49[BANK0 ] PTR void 
  4035 ;;		 -> main@msgbuffer(11), 
  4036 ;; Auto vars:     Size  Location     Type
  4037 ;;  maxlength       1   51[BANK0 ] unsigned char 
  4038 ;; Return value:  Size  Location     Type
  4039 ;;                  1    wreg      char 
  4040 ;; Registers used:
  4041 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4047 ;;      Params:         0       4       0       0       0
  4048 ;;      Locals:         0       1       0       0       0
  4049 ;;      Temps:          0       0       0       0       0
  4050 ;;      Totals:         0       5       0       0       0
  4051 ;;Total ram usage:        5 bytes
  4052 ;; Hardware stack levels used:    1
  4053 ;; Hardware stack levels required when called:   10
  4054 ;; This function calls:
  4055 ;;		_recv_msg
  4056 ;; This function is called by:
  4057 ;;		_main
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           	psect	text24
  4062  0019CE                     __ptext24:
  4063                           	opt stack 0
  4064  0019CE                     _ToMainHigh_recvmsg:
  4065                           	opt stack 20
  4066                           
  4067                           ;incstack = 0
  4068                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4069  0019CE  CFE8 F0B3          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4070                           
  4071                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4072  0019D2  0101               	movlb	1	; () banked
  4073  0019D4  0E01               	movlw	high _ToMainHigh_MQ
  4074  0019D6  0100               	movlb	0	; () banked
  4075  0019D8  0100               	movlb	0	; () banked
  4076  0019DA  6FA2               	movwf	(recv_msg@qptr+1)& (0+255),b
  4077  0019DC  0101               	movlb	1	; () banked
  4078  0019DE  0E6C               	movlw	low _ToMainHigh_MQ
  4079  0019E0  0100               	movlb	0	; () banked
  4080  0019E2  0100               	movlb	0	; () banked
  4081  0019E4  6FA1               	movwf	recv_msg@qptr& (0+255),b
  4082  0019E6  C0B3  F0A3         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4083  0019EA  0100               	movlb	0	; () banked
  4084  0019EC  0100               	movlb	0	; () banked
  4085  0019EE  C0B0  F0A5         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4086  0019F2  0100               	movlb	0	; () banked
  4087  0019F4  0100               	movlb	0	; () banked
  4088  0019F6  C0AF  F0A4         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4089  0019FA  0100               	movlb	0	; () banked
  4090  0019FC  0100               	movlb	0	; () banked
  4091  0019FE  C0B2  F0A7         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4092  001A02  0100               	movlb	0	; () banked
  4093  001A04  0100               	movlb	0	; () banked
  4094  001A06  C0B1  F0A6         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4095  001A0A  EC21  F006         	call	_recv_msg	;wreg free
  4096  001A0E  0012               	return	
  4097  001A10                     __end_of_ToMainHigh_recvmsg:
  4098                           	opt stack 0
  4099                           tblptru	equ	0xFF8
  4100                           tblptrh	equ	0xFF7
  4101                           tblptrl	equ	0xFF6
  4102                           tablat	equ	0xFF5
  4103                           prodh	equ	0xFF4
  4104                           prodl	equ	0xFF3
  4105                           intcon	equ	0xFF2
  4106                           postinc0	equ	0xFEE
  4107                           wreg	equ	0xFE8
  4108                           indf1	equ	0xFE7
  4109                           postdec1	equ	0xFE5
  4110                           fsr1h	equ	0xFE2
  4111                           fsr1l	equ	0xFE1
  4112                           indf2	equ	0xFDF
  4113                           postinc2	equ	0xFDE
  4114                           postdec2	equ	0xFDD
  4115                           fsr2h	equ	0xFDA
  4116                           fsr2l	equ	0xFD9
  4117                           status	equ	0xFD8
  4118                           
  4119 ;; *************** function _recv_msg *****************
  4120 ;; Defined at:
  4121 ;;		line 63 in file "../src/messages.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;  qptr            2   33[BANK0 ] PTR struct __msg_queue
  4124 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4125 ;;  maxlength       1   35[BANK0 ] unsigned char 
  4126 ;;  msgtype         2   36[BANK0 ] PTR unsigned char 
  4127 ;;		 -> main@msgtype(1), 
  4128 ;;  data            2   38[BANK0 ] PTR void 
  4129 ;;		 -> main@msgbuffer(11), 
  4130 ;; Auto vars:     Size  Location     Type
  4131 ;;  qmsg            2   45[BANK0 ] PTR struct __msg
  4132 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4133 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4134 ;;  tlength         2   43[BANK0 ] unsigned int 
  4135 ;;  slot            1   42[BANK0 ] unsigned char 
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  1    wreg      char 
  4138 ;; Registers used:
  4139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4145 ;;      Params:         0       7       0       0       0
  4146 ;;      Locals:         0       5       0       0       0
  4147 ;;      Temps:          0       2       0       0       0
  4148 ;;      Totals:         0      14       0       0       0
  4149 ;;Total ram usage:       14 bytes
  4150 ;; Hardware stack levels used:    1
  4151 ;; Hardware stack levels required when called:    9
  4152 ;; This function calls:
  4153 ;;		_memcpy
  4154 ;; This function is called by:
  4155 ;;		_ToMainLow_recvmsg
  4156 ;;		_ToMainHigh_recvmsg
  4157 ;;		_FromMainLow_recvmsg
  4158 ;;		_FromMainHigh_recvmsg
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           	psect	text25
  4163  000C42                     __ptext25:
  4164                           	opt stack 0
  4165  000C42                     _recv_msg:
  4166                           	opt stack 20
  4167                           
  4168                           ;messages.c: 64: unsigned char slot;
  4169                           ;messages.c: 68: msg *qmsg;
  4170                           ;messages.c: 69: size_t tlength;
  4171                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4172                           
  4173                           ;incstack = 0
  4174  000C42  0100               	movlb	0	; () banked
  4175  000C44  EE20 F035          	lfsr	2,53
  4176  000C48  0100               	movlb	0	; () banked
  4177  000C4A  51A1               	movf	recv_msg@qptr& (0+255),w,b
  4178  000C4C  26D9               	addwf	fsr2l,f,c
  4179  000C4E  0100               	movlb	0	; () banked
  4180  000C50  51A2               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4181  000C52  22DA               	addwfc	fsr2h,f,c
  4182  000C54  50DF               	movf	indf2,w,c
  4183  000C56  0100               	movlb	0	; () banked
  4184  000C58  0100               	movlb	0	; () banked
  4185  000C5A  6FAA               	movwf	recv_msg@slot& (0+255),b
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4189  000C5C  0100               	movlb	0	; () banked
  4190  000C5E  0100               	movlb	0	; () banked
  4191  000C60  51AA               	movf	recv_msg@slot& (0+255),w,b
  4192  000C62  0D0D               	mullw	13
  4193  000C64  50F3               	movf	prodl,w,c
  4194  000C66  0100               	movlb	0	; () banked
  4195  000C68  0100               	movlb	0	; () banked
  4196  000C6A  25A1               	addwf	recv_msg@qptr& (0+255),w,b
  4197  000C6C  0100               	movlb	0	; () banked
  4198  000C6E  0100               	movlb	0	; () banked
  4199  000C70  6FAD               	movwf	recv_msg@qmsg& (0+255),b
  4200  000C72  50F4               	movf	prodh,w,c
  4201  000C74  0100               	movlb	0	; () banked
  4202  000C76  0100               	movlb	0	; () banked
  4203  000C78  21A2               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4204  000C7A  0100               	movlb	0	; () banked
  4205  000C7C  6FAE               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4206                           
  4207                           ; BSR set to: 0
  4208                           ;messages.c: 74: if (qmsg->full == 1) {
  4209  000C7E  0E01               	movlw	1
  4210  000C80  C0AD  FFD9         	movff	recv_msg@qmsg,fsr2l
  4211  000C84  C0AE  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4212  000C88  62DF               	cpfseq	indf2,c
  4213  000C8A  D074               	goto	l3427
  4214                           
  4215                           ; BSR set to: 0
  4216                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4217  000C8C  0100               	movlb	0	; () banked
  4218  000C8E  EE20 F001          	lfsr	2,1
  4219  000C92  0100               	movlb	0	; () banked
  4220  000C94  51AD               	movf	recv_msg@qmsg& (0+255),w,b
  4221  000C96  26D9               	addwf	fsr2l,f,c
  4222  000C98  0100               	movlb	0	; () banked
  4223  000C9A  51AE               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4224  000C9C  22DA               	addwfc	fsr2h,f,c
  4225  000C9E  50DF               	movf	indf2,w,c
  4226  000CA0  0100               	movlb	0	; () banked
  4227  000CA2  0100               	movlb	0	; () banked
  4228  000CA4  5DA3               	subwf	recv_msg@maxlength& (0+255),w,b
  4229  000CA6  B0D8               	btfsc	status,0,c
  4230  000CA8  D002               	goto	l3411
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;messages.c: 77: return (-3);
  4234  000CAA  0EFD               	movlw	253
  4235  000CAC  0012               	return	
  4236  000CAE                     l3411:
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;messages.c: 78: }
  4240                           ;messages.c: 80: tlength = qmsg->length;
  4241  000CAE  0100               	movlb	0	; () banked
  4242  000CB0  EE20 F001          	lfsr	2,1
  4243  000CB4  0100               	movlb	0	; () banked
  4244  000CB6  51AD               	movf	recv_msg@qmsg& (0+255),w,b
  4245  000CB8  26D9               	addwf	fsr2l,f,c
  4246  000CBA  0100               	movlb	0	; () banked
  4247  000CBC  51AE               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4248  000CBE  22DA               	addwfc	fsr2h,f,c
  4249  000CC0  50DF               	movf	indf2,w,c
  4250  000CC2  0100               	movlb	0	; () banked
  4251  000CC4  6FA8               	movwf	??_recv_msg& (0+255),b
  4252  000CC6  0100               	movlb	0	; () banked
  4253  000CC8  51A8               	movf	??_recv_msg& (0+255),w,b
  4254  000CCA  0100               	movlb	0	; () banked
  4255  000CCC  0100               	movlb	0	; () banked
  4256  000CCE  6FAB               	movwf	recv_msg@tlength& (0+255),b
  4257  000CD0  0100               	movlb	0	; () banked
  4258  000CD2  6BAC               	clrf	(recv_msg@tlength+1)& (0+255),b
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4262  000CD4  0100               	movlb	0	; () banked
  4263  000CD6  0100               	movlb	0	; () banked
  4264  000CD8  C0A7  F098         	movff	recv_msg@data+1,memcpy@d1+1
  4265  000CDC  0100               	movlb	0	; () banked
  4266  000CDE  0100               	movlb	0	; () banked
  4267  000CE0  C0A6  F097         	movff	recv_msg@data,memcpy@d1
  4268  000CE4  0E03               	movlw	3
  4269  000CE6  0100               	movlb	0	; () banked
  4270  000CE8  0100               	movlb	0	; () banked
  4271  000CEA  25AD               	addwf	recv_msg@qmsg& (0+255),w,b
  4272  000CEC  0100               	movlb	0	; () banked
  4273  000CEE  6FA8               	movwf	??_recv_msg& (0+255),b
  4274  000CF0  0E00               	movlw	0
  4275  000CF2  0100               	movlb	0	; () banked
  4276  000CF4  0100               	movlb	0	; () banked
  4277  000CF6  21AE               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4278  000CF8  0100               	movlb	0	; () banked
  4279  000CFA  6FA9               	movwf	(??_recv_msg+1)& (0+255),b
  4280  000CFC  C0A8  F099         	movff	??_recv_msg,memcpy@s1
  4281  000D00  C0A9  F09A         	movff	??_recv_msg+1,memcpy@s1+1
  4282  000D04  C0AB  F09B         	movff	recv_msg@tlength,memcpy@n
  4283  000D08  C0AC  F09C         	movff	recv_msg@tlength+1,memcpy@n+1
  4284  000D0C  EC04  F00C         	call	_memcpy	;wreg free
  4285                           
  4286                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4287  000D10  0100               	movlb	0	; () banked
  4288  000D12  EE20 F035          	lfsr	2,53
  4289  000D16  0100               	movlb	0	; () banked
  4290  000D18  51A1               	movf	recv_msg@qptr& (0+255),w,b
  4291  000D1A  26D9               	addwf	fsr2l,f,c
  4292  000D1C  0100               	movlb	0	; () banked
  4293  000D1E  51A2               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4294  000D20  22DA               	addwfc	fsr2h,f,c
  4295  000D22  0100               	movlb	0	; () banked
  4296  000D24  EE10 F035          	lfsr	1,53
  4297  000D28  0100               	movlb	0	; () banked
  4298  000D2A  51A1               	movf	recv_msg@qptr& (0+255),w,b
  4299  000D2C  26E1               	addwf	fsr1l,f,c
  4300  000D2E  0100               	movlb	0	; () banked
  4301  000D30  51A2               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4302  000D32  22E2               	addwfc	fsr1h,f,c
  4303  000D34  50E7               	movf	indf1,w,c
  4304  000D36  0100               	movlb	0	; () banked
  4305  000D38  6FA8               	movwf	??_recv_msg& (0+255),b
  4306  000D3A  0100               	movlb	0	; () banked
  4307  000D3C  29A8               	incf	??_recv_msg& (0+255),w,b
  4308  000D3E  0B03               	andlw	3
  4309  000D40  6EDF               	movwf	indf2,c
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4313  000D42  0100               	movlb	0	; () banked
  4314  000D44  EE20 F002          	lfsr	2,2
  4315  000D48  0100               	movlb	0	; () banked
  4316  000D4A  51AD               	movf	recv_msg@qmsg& (0+255),w,b
  4317  000D4C  26D9               	addwf	fsr2l,f,c
  4318  000D4E  0100               	movlb	0	; () banked
  4319  000D50  51AE               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4320  000D52  22DA               	addwfc	fsr2h,f,c
  4321  000D54  C0A4  FFE1         	movff	recv_msg@msgtype,fsr1l
  4322  000D58  C0A5  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4323  000D5C  CFDF FFE7          	movff	indf2,indf1
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;messages.c: 91: qmsg->full = 0;
  4327  000D60  C0AD  FFD9         	movff	recv_msg@qmsg,fsr2l
  4328  000D64  C0AE  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4329  000D68  0E00               	movlw	0
  4330  000D6A  6EDF               	movwf	indf2,c
  4331                           
  4332                           ; BSR set to: 0
  4333                           ;messages.c: 92: return (tlength);
  4334  000D6C  0100               	movlb	0	; () banked
  4335  000D6E  0100               	movlb	0	; () banked
  4336  000D70  51AB               	movf	recv_msg@tlength& (0+255),w,b
  4337  000D72  0012               	return	
  4338  000D74                     l3427:
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;messages.c: 94: return (-4);
  4342  000D74  0EFC               	movlw	252
  4343  000D76  0012               	return	
  4344  000D78                     __end_of_recv_msg:
  4345                           	opt stack 0
  4346                           tblptru	equ	0xFF8
  4347                           tblptrh	equ	0xFF7
  4348                           tblptrl	equ	0xFF6
  4349                           tablat	equ	0xFF5
  4350                           prodh	equ	0xFF4
  4351                           prodl	equ	0xFF3
  4352                           intcon	equ	0xFF2
  4353                           postinc0	equ	0xFEE
  4354                           wreg	equ	0xFE8
  4355                           indf1	equ	0xFE7
  4356                           postdec1	equ	0xFE5
  4357                           fsr1h	equ	0xFE2
  4358                           fsr1l	equ	0xFE1
  4359                           indf2	equ	0xFDF
  4360                           postinc2	equ	0xFDE
  4361                           postdec2	equ	0xFDD
  4362                           fsr2h	equ	0xFDA
  4363                           fsr2l	equ	0xFD9
  4364                           status	equ	0xFD8
  4365                           
  4366 ;; *************** function _memcpy *****************
  4367 ;; Defined at:
  4368 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;  d1              2   23[BANK0 ] PTR void 
  4371 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4372 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4373 ;;		 -> main@msgbuffer(11), 
  4374 ;;  s1              2   25[BANK0 ] PTR const void 
  4375 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4376 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4377 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4378 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), main@ic(28), 
  4379 ;;  n               2   27[BANK0 ] unsigned int 
  4380 ;; Auto vars:     Size  Location     Type
  4381 ;;  s               2   31[BANK0 ] PTR const unsigned char 
  4382 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4383 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4384 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4385 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), main@ic(28), 
  4386 ;;  d               2   29[BANK0 ] PTR unsigned char 
  4387 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4388 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4389 ;;		 -> main@msgbuffer(11), 
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  2   23[BANK0 ] PTR void 
  4392 ;; Registers used:
  4393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4399 ;;      Params:         0       6       0       0       0
  4400 ;;      Locals:         0       4       0       0       0
  4401 ;;      Temps:          0       0       0       0       0
  4402 ;;      Totals:         0      10       0       0       0
  4403 ;;Total ram usage:       10 bytes
  4404 ;; Hardware stack levels used:    1
  4405 ;; Hardware stack levels required when called:    8
  4406 ;; This function calls:
  4407 ;;		Nothing
  4408 ;; This function is called by:
  4409 ;;		_send_msg
  4410 ;;		_recv_msg
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           	psect	text26
  4415  001808                     __ptext26:
  4416                           	opt stack 0
  4417  001808                     _memcpy:
  4418                           	opt stack 19
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;incstack = 0
  4422  001808  0100               	movlb	0	; () banked
  4423  00180A  0100               	movlb	0	; () banked
  4424  00180C  C09A  F0A0         	movff	memcpy@s1+1,memcpy@s+1
  4425  001810  0100               	movlb	0	; () banked
  4426  001812  0100               	movlb	0	; () banked
  4427  001814  C099  F09F         	movff	memcpy@s1,memcpy@s
  4428  001818  0100               	movlb	0	; () banked
  4429  00181A  0100               	movlb	0	; () banked
  4430  00181C  C098  F09E         	movff	memcpy@d1+1,memcpy@d+1
  4431  001820  0100               	movlb	0	; () banked
  4432  001822  0100               	movlb	0	; () banked
  4433  001824  C097  F09D         	movff	memcpy@d1,memcpy@d
  4434  001828  D012               	goto	l3397
  4435  00182A                     l3391:
  4436                           
  4437                           ; BSR set to: 0
  4438  00182A  C09F  FFD9         	movff	memcpy@s,fsr2l
  4439  00182E  C0A0  FFDA         	movff	memcpy@s+1,fsr2h
  4440  001832  C09D  FFE1         	movff	memcpy@d,fsr1l
  4441  001836  C09E  FFE2         	movff	memcpy@d+1,fsr1h
  4442  00183A  CFDF FFE7          	movff	indf2,indf1
  4443                           
  4444                           ; BSR set to: 0
  4445  00183E  0100               	movlb	0	; () banked
  4446  001840  0100               	movlb	0	; () banked
  4447  001842  4B9F               	infsnz	memcpy@s& (0+255),f,b
  4448  001844  2BA0               	incf	(memcpy@s+1)& (0+255),f,b
  4449                           
  4450                           ; BSR set to: 0
  4451  001846  0100               	movlb	0	; () banked
  4452  001848  0100               	movlb	0	; () banked
  4453  00184A  4B9D               	infsnz	memcpy@d& (0+255),f,b
  4454  00184C  2B9E               	incf	(memcpy@d+1)& (0+255),f,b
  4455  00184E                     l3397:
  4456                           
  4457                           ; BSR set to: 0
  4458  00184E  0100               	movlb	0	; () banked
  4459  001850  0100               	movlb	0	; () banked
  4460  001852  079B               	decf	memcpy@n& (0+255),f,b
  4461  001854  A0D8               	btfss	status,0,c
  4462  001856  079C               	decf	(memcpy@n+1)& (0+255),f,b
  4463  001858  0100               	movlb	0	; () banked
  4464  00185A  299B               	incf	memcpy@n& (0+255),w,b
  4465  00185C  B4D8               	btfsc	status,2,c
  4466  00185E  299C               	incf	(memcpy@n+1)& (0+255),w,b
  4467  001860  B4D8               	btfsc	status,2,c
  4468                           
  4469                           ; BSR set to: 0
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;	Return value of _memcpy is never used
  4473  001862  0012               	return	
  4474  001864  D7E2               	goto	l3391
  4475  001866                     __end_of_memcpy:
  4476                           	opt stack 0
  4477                           tblptru	equ	0xFF8
  4478                           tblptrh	equ	0xFF7
  4479                           tblptrl	equ	0xFF6
  4480                           tablat	equ	0xFF5
  4481                           prodh	equ	0xFF4
  4482                           prodl	equ	0xFF3
  4483                           intcon	equ	0xFF2
  4484                           postinc0	equ	0xFEE
  4485                           wreg	equ	0xFE8
  4486                           indf1	equ	0xFE7
  4487                           postdec1	equ	0xFE5
  4488                           fsr1h	equ	0xFE2
  4489                           fsr1l	equ	0xFE1
  4490                           indf2	equ	0xFDF
  4491                           postinc2	equ	0xFDE
  4492                           postdec2	equ	0xFDD
  4493                           fsr2h	equ	0xFDA
  4494                           fsr2l	equ	0xFD9
  4495                           status	equ	0xFD8
  4496                           
  4497 ;; *************** function _OpenUSART *****************
  4498 ;; Defined at:
  4499 ;;		line 73 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;  config          1    wreg     unsigned char 
  4502 ;;  spbrg           2   23[BANK0 ] unsigned int 
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;  config          1   28[BANK0 ] unsigned char 
  4505 ;; Return value:  Size  Location     Type
  4506 ;;		None               void
  4507 ;; Registers used:
  4508 ;;		wreg, status,2
  4509 ;; Tracked objects:
  4510 ;;		On entry : 0/0
  4511 ;;		On exit  : 0/0
  4512 ;;		Unchanged: 0/0
  4513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4514 ;;      Params:         0       2       0       0       0
  4515 ;;      Locals:         0       1       0       0       0
  4516 ;;      Temps:          0       3       0       0       0
  4517 ;;      Totals:         0       6       0       0       0
  4518 ;;Total ram usage:        6 bytes
  4519 ;; Hardware stack levels used:    1
  4520 ;; Hardware stack levels required when called:    8
  4521 ;; This function calls:
  4522 ;;		Nothing
  4523 ;; This function is called by:
  4524 ;;		_main
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527                           
  4528                           	psect	text27
  4529  00139A                     __ptext27:
  4530                           	opt stack 0
  4531  00139A                     _OpenUSART:
  4532                           	opt stack 22
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;incstack = 0
  4536                           ;OpenUSART@config stored from wreg
  4537  00139A  CFE8 F09C          	movff	wreg,OpenUSART@config
  4538  00139E  0E00               	movlw	0
  4539  0013A0  6EAC               	movwf	4012,c	;volatile
  4540  0013A2  0E00               	movlw	0
  4541  0013A4  6EAB               	movwf	4011,c	;volatile
  4542  0013A6  0100               	movlb	0	; () banked
  4543  0013A8  0100               	movlb	0	; () banked
  4544  0013AA  B19C               	btfsc	OpenUSART@config& (0+255),0,b
  4545                           
  4546                           ; BSR set to: 0
  4547  0013AC  88AC               	bsf	4012,4,c	;volatile
  4548                           
  4549                           ; BSR set to: 0
  4550                           
  4551                           ; BSR set to: 0
  4552  0013AE  0100               	movlb	0	; () banked
  4553  0013B0  0100               	movlb	0	; () banked
  4554  0013B2  A39C               	btfss	OpenUSART@config& (0+255),1,b
  4555  0013B4  D002               	goto	l3243
  4556                           
  4557                           ; BSR set to: 0
  4558  0013B6  8CAC               	bsf	4012,6,c	;volatile
  4559  0013B8  8CAB               	bsf	4011,6,c	;volatile
  4560  0013BA                     l3243:
  4561                           
  4562                           ; BSR set to: 0
  4563  0013BA  0100               	movlb	0	; () banked
  4564  0013BC  0100               	movlb	0	; () banked
  4565  0013BE  B59C               	btfsc	OpenUSART@config& (0+255),2,b
  4566                           
  4567                           ; BSR set to: 0
  4568  0013C0  8EAC               	bsf	4012,7,c	;volatile
  4569                           
  4570                           ; BSR set to: 0
  4571                           
  4572                           ; BSR set to: 0
  4573  0013C2  0100               	movlb	0	; () banked
  4574  0013C4  0100               	movlb	0	; () banked
  4575  0013C6  A79C               	btfss	OpenUSART@config& (0+255),3,b
  4576  0013C8  D002               	goto	l578
  4577                           
  4578                           ; BSR set to: 0
  4579  0013CA  88AB               	bsf	4011,4,c	;volatile
  4580  0013CC  D001               	goto	l3251
  4581  0013CE                     l578:
  4582                           
  4583                           ; BSR set to: 0
  4584  0013CE  8AAB               	bsf	4011,5,c	;volatile
  4585  0013D0                     l3251:
  4586                           
  4587                           ; BSR set to: 0
  4588  0013D0  0100               	movlb	0	; () banked
  4589  0013D2  0100               	movlb	0	; () banked
  4590  0013D4  B99C               	btfsc	OpenUSART@config& (0+255),4,b
  4591                           
  4592                           ; BSR set to: 0
  4593  0013D6  84AC               	bsf	4012,2,c	;volatile
  4594                           
  4595                           ; BSR set to: 0
  4596  0013D8  989E               	bcf	3998,4,c	;volatile
  4597                           
  4598                           ; BSR set to: 0
  4599  0013DA  0100               	movlb	0	; () banked
  4600  0013DC  0100               	movlb	0	; () banked
  4601  0013DE  BB9C               	btfsc	OpenUSART@config& (0+255),5,b
  4602                           
  4603                           ; BSR set to: 0
  4604  0013E0  86AB               	bsf	4011,3,c	;volatile
  4605                           
  4606                           ; BSR set to: 0
  4607                           
  4608                           ; BSR set to: 0
  4609  0013E2  0100               	movlb	0	; () banked
  4610  0013E4  0100               	movlb	0	; () banked
  4611  0013E6  AD9C               	btfss	OpenUSART@config& (0+255),6,b
  4612  0013E8  D002               	goto	l582
  4613                           
  4614                           ; BSR set to: 0
  4615  0013EA  8A9D               	bsf	3997,5,c	;volatile
  4616  0013EC  D001               	goto	l583
  4617  0013EE                     l582:
  4618                           
  4619                           ; BSR set to: 0
  4620  0013EE  9A9D               	bcf	3997,5,c	;volatile
  4621  0013F0                     l583:
  4622                           
  4623                           ; BSR set to: 0
  4624  0013F0  9A9E               	bcf	3998,5,c	;volatile
  4625                           
  4626                           ; BSR set to: 0
  4627  0013F2  0100               	movlb	0	; () banked
  4628  0013F4  0100               	movlb	0	; () banked
  4629  0013F6  AF9C               	btfss	OpenUSART@config& (0+255),7,b
  4630  0013F8  D002               	goto	l584
  4631                           
  4632                           ; BSR set to: 0
  4633  0013FA  889D               	bsf	3997,4,c	;volatile
  4634  0013FC  D001               	goto	l585
  4635  0013FE                     l584:
  4636                           
  4637                           ; BSR set to: 0
  4638  0013FE  989D               	bcf	3997,4,c	;volatile
  4639  001400                     l585:
  4640                           
  4641                           ; BSR set to: 0
  4642  001400  C097  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4643                           
  4644                           ; BSR set to: 0
  4645  001404  0100               	movlb	0	; () banked
  4646  001406  C098  F099         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4647  00140A  C099  F09A         	movff	??_OpenUSART,??_OpenUSART+1
  4648  00140E  0100               	movlb	0	; () banked
  4649  001410  6B9B               	clrf	(??_OpenUSART+2)& (0+255),b
  4650  001412  0100               	movlb	0	; () banked
  4651  001414  519A               	movf	(??_OpenUSART+1)& (0+255),w,b
  4652  001416  6EB0               	movwf	4016,c	;volatile
  4653                           
  4654                           ; BSR set to: 0
  4655  001418  8AAC               	bsf	4012,5,c	;volatile
  4656                           
  4657                           ; BSR set to: 0
  4658  00141A  8EAB               	bsf	4011,7,c	;volatile
  4659                           
  4660                           ; BSR set to: 0
  4661  00141C  9C94               	bcf	3988,6,c	;volatile
  4662                           
  4663                           ; BSR set to: 0
  4664  00141E  8E94               	bsf	3988,7,c	;volatile
  4665                           
  4666                           ; BSR set to: 0
  4667  001420  A8AC               	btfss	4012,4,c	;volatile
  4668  001422  0012               	return	
  4669                           
  4670                           ; BSR set to: 0
  4671  001424  BEAC               	btfsc	4012,7,c	;volatile
  4672  001426  0012               	return	
  4673                           
  4674                           ; BSR set to: 0
  4675  001428  8C94               	bsf	3988,6,c	;volatile
  4676  00142A  0012               	return	
  4677  00142C                     __end_of_OpenUSART:
  4678                           	opt stack 0
  4679                           tblptru	equ	0xFF8
  4680                           tblptrh	equ	0xFF7
  4681                           tblptrl	equ	0xFF6
  4682                           tablat	equ	0xFF5
  4683                           prodh	equ	0xFF4
  4684                           prodl	equ	0xFF3
  4685                           intcon	equ	0xFF2
  4686                           postinc0	equ	0xFEE
  4687                           wreg	equ	0xFE8
  4688                           indf1	equ	0xFE7
  4689                           postdec1	equ	0xFE5
  4690                           fsr1h	equ	0xFE2
  4691                           fsr1l	equ	0xFE1
  4692                           indf2	equ	0xFDF
  4693                           postinc2	equ	0xFDE
  4694                           postdec2	equ	0xFDD
  4695                           fsr2h	equ	0xFDA
  4696                           fsr2l	equ	0xFD9
  4697                           status	equ	0xFD8
  4698                           
  4699 ;; *************** function _OpenTimer1 *****************
  4700 ;; Defined at:
  4701 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;  config          1    wreg     unsigned char 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  config          1   23[BANK0 ] unsigned char 
  4706 ;; Return value:  Size  Location     Type
  4707 ;;		None               void
  4708 ;; Registers used:
  4709 ;;		wreg, status,2, status,0
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4715 ;;      Params:         0       0       0       0       0
  4716 ;;      Locals:         0       1       0       0       0
  4717 ;;      Temps:          0       0       0       0       0
  4718 ;;      Totals:         0       1       0       0       0
  4719 ;;Total ram usage:        1 bytes
  4720 ;; Hardware stack levels used:    1
  4721 ;; Hardware stack levels required when called:    8
  4722 ;; This function calls:
  4723 ;;		Nothing
  4724 ;; This function is called by:
  4725 ;;		_main
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           	psect	text28
  4730  001A8C                     __ptext28:
  4731                           	opt stack 0
  4732  001A8C                     _OpenTimer1:
  4733                           	opt stack 22
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;incstack = 0
  4737                           ;OpenTimer1@config stored from wreg
  4738  001A8C  CFE8 F097          	movff	wreg,OpenTimer1@config
  4739  001A90  0100               	movlb	0	; () banked
  4740  001A92  0100               	movlb	0	; () banked
  4741  001A94  5197               	movf	OpenTimer1@config& (0+255),w,b
  4742  001A96  0B7E               	andlw	126
  4743  001A98  6ECD               	movwf	4045,c	;volatile
  4744                           
  4745                           ; BSR set to: 0
  4746  001A9A  0100               	movlb	0	; () banked
  4747  001A9C  0100               	movlb	0	; () banked
  4748  001A9E  AD97               	btfss	OpenTimer1@config& (0+255),6,b
  4749  001AA0  D002               	goto	l543
  4750                           
  4751                           ; BSR set to: 0
  4752  001AA2  8ECD               	bsf	4045,7,c	;volatile
  4753  001AA4  D001               	goto	l3201
  4754  001AA6                     l543:
  4755                           
  4756                           ; BSR set to: 0
  4757  001AA6  9ECD               	bcf	4045,7,c	;volatile
  4758  001AA8                     l3201:
  4759                           
  4760                           ; BSR set to: 0
  4761  001AA8  0E00               	movlw	0
  4762  001AAA  6ECF               	movwf	4047,c	;volatile
  4763  001AAC  0E00               	movlw	0
  4764  001AAE  6ECE               	movwf	4046,c	;volatile
  4765                           
  4766                           ; BSR set to: 0
  4767  001AB0  909E               	bcf	3998,0,c	;volatile
  4768                           
  4769                           ; BSR set to: 0
  4770  001AB2  0100               	movlb	0	; () banked
  4771  001AB4  0100               	movlb	0	; () banked
  4772  001AB6  AF97               	btfss	OpenTimer1@config& (0+255),7,b
  4773  001AB8  D002               	goto	l545
  4774                           
  4775                           ; BSR set to: 0
  4776  001ABA  809D               	bsf	3997,0,c	;volatile
  4777  001ABC  D001               	goto	l546
  4778  001ABE                     l545:
  4779                           
  4780                           ; BSR set to: 0
  4781  001ABE  909D               	bcf	3997,0,c	;volatile
  4782  001AC0                     l546:
  4783                           
  4784                           ; BSR set to: 0
  4785  001AC0  80CD               	bsf	4045,0,c	;volatile
  4786                           
  4787                           ; BSR set to: 0
  4788  001AC2  0012               	return	
  4789  001AC4                     __end_of_OpenTimer1:
  4790                           	opt stack 0
  4791                           tblptru	equ	0xFF8
  4792                           tblptrh	equ	0xFF7
  4793                           tblptrl	equ	0xFF6
  4794                           tablat	equ	0xFF5
  4795                           prodh	equ	0xFF4
  4796                           prodl	equ	0xFF3
  4797                           intcon	equ	0xFF2
  4798                           postinc0	equ	0xFEE
  4799                           wreg	equ	0xFE8
  4800                           indf1	equ	0xFE7
  4801                           postdec1	equ	0xFE5
  4802                           fsr1h	equ	0xFE2
  4803                           fsr1l	equ	0xFE1
  4804                           indf2	equ	0xFDF
  4805                           postinc2	equ	0xFDE
  4806                           postdec2	equ	0xFDD
  4807                           fsr2h	equ	0xFDA
  4808                           fsr2l	equ	0xFD9
  4809                           status	equ	0xFD8
  4810                           
  4811 ;; *************** function _OpenTimer0 *****************
  4812 ;; Defined at:
  4813 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  config          1    wreg     unsigned char 
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;  config          1   23[BANK0 ] unsigned char 
  4818 ;; Return value:  Size  Location     Type
  4819 ;;		None               void
  4820 ;; Registers used:
  4821 ;;		wreg, status,2, status,0
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4827 ;;      Params:         0       0       0       0       0
  4828 ;;      Locals:         0       1       0       0       0
  4829 ;;      Temps:          0       0       0       0       0
  4830 ;;      Totals:         0       1       0       0       0
  4831 ;;Total ram usage:        1 bytes
  4832 ;; Hardware stack levels used:    1
  4833 ;; Hardware stack levels required when called:    8
  4834 ;; This function calls:
  4835 ;;		Nothing
  4836 ;; This function is called by:
  4837 ;;		_main
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           	psect	text29
  4842  001B5E                     __ptext29:
  4843                           	opt stack 0
  4844  001B5E                     _OpenTimer0:
  4845                           	opt stack 22
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;incstack = 0
  4849                           ;OpenTimer0@config stored from wreg
  4850  001B5E  CFE8 F097          	movff	wreg,OpenTimer0@config
  4851  001B62  0100               	movlb	0	; () banked
  4852  001B64  0100               	movlb	0	; () banked
  4853  001B66  5197               	movf	OpenTimer0@config& (0+255),w,b
  4854  001B68  0B7F               	andlw	127
  4855  001B6A  6ED5               	movwf	4053,c	;volatile
  4856                           
  4857                           ; BSR set to: 0
  4858  001B6C  0E00               	movlw	0
  4859  001B6E  6ED7               	movwf	4055,c	;volatile
  4860                           
  4861                           ; BSR set to: 0
  4862  001B70  0E00               	movlw	0
  4863  001B72  6ED6               	movwf	4054,c	;volatile
  4864                           
  4865                           ; BSR set to: 0
  4866  001B74  94F2               	bcf	intcon,2,c	;volatile
  4867                           
  4868                           ; BSR set to: 0
  4869  001B76  0100               	movlb	0	; () banked
  4870  001B78  0100               	movlb	0	; () banked
  4871  001B7A  AF97               	btfss	OpenTimer0@config& (0+255),7,b
  4872  001B7C  D002               	goto	l519
  4873                           
  4874                           ; BSR set to: 0
  4875  001B7E  8AF2               	bsf	intcon,5,c	;volatile
  4876  001B80  D001               	goto	l520
  4877  001B82                     l519:
  4878                           
  4879                           ; BSR set to: 0
  4880  001B82  9AF2               	bcf	intcon,5,c	;volatile
  4881  001B84                     l520:
  4882                           
  4883                           ; BSR set to: 0
  4884  001B84  8ED5               	bsf	4053,7,c	;volatile
  4885                           
  4886                           ; BSR set to: 0
  4887  001B86  0012               	return	
  4888  001B88                     __end_of_OpenTimer0:
  4889                           	opt stack 0
  4890                           tblptru	equ	0xFF8
  4891                           tblptrh	equ	0xFF7
  4892                           tblptrl	equ	0xFF6
  4893                           tablat	equ	0xFF5
  4894                           prodh	equ	0xFF4
  4895                           prodl	equ	0xFF3
  4896                           intcon	equ	0xFF2
  4897                           postinc0	equ	0xFEE
  4898                           wreg	equ	0xFE8
  4899                           indf1	equ	0xFE7
  4900                           postdec1	equ	0xFE5
  4901                           fsr1h	equ	0xFE2
  4902                           fsr1l	equ	0xFE1
  4903                           indf2	equ	0xFDF
  4904                           postinc2	equ	0xFDE
  4905                           postdec2	equ	0xFDD
  4906                           fsr2h	equ	0xFDA
  4907                           fsr2l	equ	0xFD9
  4908                           status	equ	0xFD8
  4909                           
  4910 ;; *************** function _InterruptHandlerLow *****************
  4911 ;; Defined at:
  4912 ;;		line 125 in file "../src/interrupts.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;		None
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;		None
  4917 ;; Return value:  Size  Location     Type
  4918 ;;		None               void
  4919 ;; Registers used:
  4920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4921 ;; Tracked objects:
  4922 ;;		On entry : 0/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4926 ;;      Params:         0       0       0       0       0
  4927 ;;      Locals:         0       0       0       0       0
  4928 ;;      Temps:         17       0       0       0       0
  4929 ;;      Totals:        17       0       0       0       0
  4930 ;;Total ram usage:       17 bytes
  4931 ;; Hardware stack levels used:    1
  4932 ;; Hardware stack levels required when called:    7
  4933 ;; This function calls:
  4934 ;;		_timer1_int_handler
  4935 ;;		_uart_send_int_handler
  4936 ;; This function is called by:
  4937 ;;		Interrupt level 1
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941                           	psect	intcodelo
  4942  000018                     __pintcodelo:
  4943                           	opt stack 0
  4944  000018                     _InterruptHandlerLow:
  4945                           	opt stack 19
  4946                           
  4947                           ; BSR set to: 0
  4948                           ;incstack = 0
  4949  000018  CFD8 F006          	movff	status,??_InterruptHandlerLow
  4950  00001C  CFE8 F007          	movff	wreg,??_InterruptHandlerLow+1
  4951  000020  CFE0 F008          	movff	bsr,??_InterruptHandlerLow+2
  4952  000024  CFFA F009          	movff	pclath,??_InterruptHandlerLow+3
  4953  000028  CFFB F00A          	movff	pclatu,??_InterruptHandlerLow+4
  4954  00002C  CFE9 F00B          	movff	fsr0l,??_InterruptHandlerLow+5
  4955  000030  CFEA F00C          	movff	fsr0h,??_InterruptHandlerLow+6
  4956  000034  CFE1 F00D          	movff	fsr1l,??_InterruptHandlerLow+7
  4957  000038  CFE2 F00E          	movff	fsr1h,??_InterruptHandlerLow+8
  4958  00003C  CFD9 F00F          	movff	fsr2l,??_InterruptHandlerLow+9
  4959  000040  CFDA F010          	movff	fsr2h,??_InterruptHandlerLow+10
  4960  000044  CFF3 F011          	movff	prodl,??_InterruptHandlerLow+11
  4961  000048  CFF4 F012          	movff	prodh,??_InterruptHandlerLow+12
  4962  00004C  CFF6 F013          	movff	tblptrl,??_InterruptHandlerLow+13
  4963  000050  CFF7 F014          	movff	tblptrh,??_InterruptHandlerLow+14
  4964  000054  CFF8 F015          	movff	tblptru,??_InterruptHandlerLow+15
  4965  000058  CFF5 F016          	movff	tablat,??_InterruptHandlerLow+16
  4966                           
  4967                           ;interrupts.c: 128: if (PIR1bits.TMR1IF) {
  4968  00005C  A09E               	btfss	3998,0,c	;volatile
  4969  00005E  D003               	goto	i1l3601
  4970                           
  4971                           ;interrupts.c: 129: PIR1bits.TMR1IF = 0;
  4972  000060  909E               	bcf	3998,0,c	;volatile
  4973                           
  4974                           ;interrupts.c: 130: timer1_int_handler();
  4975  000062  ECC4  F00D         	call	_timer1_int_handler	;wreg free
  4976  000066                     i1l3601:
  4977                           
  4978                           ;interrupts.c: 131: }
  4979                           ;interrupts.c: 134: if (PIR1bits.TX1IF && PIE1bits.TX1IE) {
  4980  000066  B89E               	btfsc	3998,4,c	;volatile
  4981  000068  A89D               	btfss	3997,4,c	;volatile
  4982  00006A  D002               	goto	i1l53
  4983                           
  4984                           ;interrupts.c: 135: uart_send_int_handler();
  4985  00006C  EC16  F00A         	call	_uart_send_int_handler	;wreg free
  4986  000070                     i1l53:
  4987  000070  C016  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4988  000074  C015  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4989  000078  C014  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4990  00007C  C013  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4991  000080  C012  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4992  000084  C011  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4993  000088  C010  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4994  00008C  C00F  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4995  000090  C00E  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4996  000094  C00D  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4997  000098  C00C  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4998  00009C  C00B  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4999  0000A0  C00A  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5000  0000A4  C009  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5001  0000A8  C008  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5002  0000AC  C007  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5003  0000B0  C006  FFD8         	movff	??_InterruptHandlerLow,status
  5004  0000B4  0010               	retfie	
  5005  0000B6                     __end_of_InterruptHandlerLow:
  5006                           	opt stack 0
  5007                           pclatu	equ	0xFFB
  5008                           pclath	equ	0xFFA
  5009                           tblptru	equ	0xFF8
  5010                           tblptrh	equ	0xFF7
  5011                           tblptrl	equ	0xFF6
  5012                           tablat	equ	0xFF5
  5013                           prodh	equ	0xFF4
  5014                           prodl	equ	0xFF3
  5015                           intcon	equ	0xFF2
  5016                           postinc0	equ	0xFEE
  5017                           fsr0h	equ	0xFEA
  5018                           fsr0l	equ	0xFE9
  5019                           wreg	equ	0xFE8
  5020                           indf1	equ	0xFE7
  5021                           postdec1	equ	0xFE5
  5022                           fsr1h	equ	0xFE2
  5023                           fsr1l	equ	0xFE1
  5024                           bsr	equ	0xFE0
  5025                           indf2	equ	0xFDF
  5026                           postinc2	equ	0xFDE
  5027                           postdec2	equ	0xFDD
  5028                           fsr2h	equ	0xFDA
  5029                           fsr2l	equ	0xFD9
  5030                           status	equ	0xFD8
  5031                           
  5032 ;; *************** function _uart_send_int_handler *****************
  5033 ;; Defined at:
  5034 ;;		line 17 in file "../src/my_uart.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;		None
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;		None
  5039 ;; Return value:  Size  Location     Type
  5040 ;;		None               void
  5041 ;; Registers used:
  5042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5043 ;; Tracked objects:
  5044 ;;		On entry : 0/0
  5045 ;;		On exit  : 0/0
  5046 ;;		Unchanged: 0/0
  5047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5048 ;;      Params:         0       0       0       0       0
  5049 ;;      Locals:         0       0       0       0       0
  5050 ;;      Temps:          1       0       0       0       0
  5051 ;;      Totals:         1       0       0       0       0
  5052 ;;Total ram usage:        1 bytes
  5053 ;; Hardware stack levels used:    1
  5054 ;; Hardware stack levels required when called:    6
  5055 ;; This function calls:
  5056 ;;		_WriteUSART
  5057 ;; This function is called by:
  5058 ;;		_InterruptHandlerLow
  5059 ;; This function uses a non-reentrant model
  5060 ;;
  5061                           
  5062                           	psect	text31
  5063  00142C                     __ptext31:
  5064                           	opt stack 0
  5065  00142C                     _uart_send_int_handler:
  5066                           	opt stack 19
  5067                           
  5068                           ;my_uart.c: 19: if (uc_ptr->Tx_buflen == uc_ptr->msg_length) {
  5069                           
  5070                           ;incstack = 0
  5071  00142C  0100               	movlb	0	; () banked
  5072  00142E  EE20 F00A          	lfsr	2,10
  5073  001432  0100               	movlb	0	; () banked
  5074  001434  51C5               	movf	_uc_ptr& (0+255),w,b
  5075  001436  26D9               	addwf	fsr2l,f,c
  5076  001438  0100               	movlb	0	; () banked
  5077  00143A  51C6               	movf	(_uc_ptr+1)& (0+255),w,b
  5078  00143C  22DA               	addwfc	fsr2h,f,c
  5079  00143E  0100               	movlb	0	; () banked
  5080  001440  EE10 F00B          	lfsr	1,11
  5081  001444  0100               	movlb	0	; () banked
  5082  001446  51C5               	movf	_uc_ptr& (0+255),w,b
  5083  001448  26E1               	addwf	fsr1l,f,c
  5084  00144A  0100               	movlb	0	; () banked
  5085  00144C  51C6               	movf	(_uc_ptr+1)& (0+255),w,b
  5086  00144E  22E2               	addwfc	fsr1h,f,c
  5087  001450  50E7               	movf	indf1,w,c
  5088  001452  62DF               	cpfseq	indf2,c
  5089  001454  D00D               	goto	i1l3591
  5090                           
  5091                           ; BSR set to: 0
  5092                           ;my_uart.c: 20: PIE1bits.TX1IE = 0;
  5093  001456  989D               	bcf	3997,4,c	;volatile
  5094                           
  5095                           ; BSR set to: 0
  5096                           ;my_uart.c: 21: uc_ptr->Tx_buflen = 0;
  5097  001458  0100               	movlb	0	; () banked
  5098  00145A  EE20 F00A          	lfsr	2,10
  5099  00145E  0100               	movlb	0	; () banked
  5100  001460  51C5               	movf	_uc_ptr& (0+255),w,b
  5101  001462  26D9               	addwf	fsr2l,f,c
  5102  001464  0100               	movlb	0	; () banked
  5103  001466  51C6               	movf	(_uc_ptr+1)& (0+255),w,b
  5104  001468  22DA               	addwfc	fsr2h,f,c
  5105  00146A  0E00               	movlw	0
  5106  00146C  6EDF               	movwf	indf2,c
  5107                           
  5108                           ;my_uart.c: 22: } else {
  5109  00146E  0012               	return	
  5110  001470                     i1l3591:
  5111                           
  5112                           ; BSR set to: 0
  5113                           ;my_uart.c: 23: WriteUSART(uc_ptr->Tx_buffer[uc_ptr->Tx_buflen]);
  5114  001470  0100               	movlb	0	; () banked
  5115  001472  EE20 F00A          	lfsr	2,10
  5116  001476  0100               	movlb	0	; () banked
  5117  001478  51C5               	movf	_uc_ptr& (0+255),w,b
  5118  00147A  26D9               	addwf	fsr2l,f,c
  5119  00147C  0100               	movlb	0	; () banked
  5120  00147E  51C6               	movf	(_uc_ptr+1)& (0+255),w,b
  5121  001480  22DA               	addwfc	fsr2h,f,c
  5122  001482  50DF               	movf	indf2,w,c
  5123  001484  6E02               	movwf	??_uart_send_int_handler& (0+255),c
  5124  001486  5002               	movf	??_uart_send_int_handler,w,c
  5125  001488  0D01               	mullw	1
  5126  00148A  50F3               	movf	prodl,w,c
  5127  00148C  0100               	movlb	0	; () banked
  5128  00148E  0100               	movlb	0	; () banked
  5129  001490  25C5               	addwf	_uc_ptr& (0+255),w,b
  5130  001492  6ED9               	movwf	fsr2l,c
  5131  001494  50F4               	movf	prodh,w,c
  5132  001496  0100               	movlb	0	; () banked
  5133  001498  0100               	movlb	0	; () banked
  5134  00149A  21C6               	addwfc	(_uc_ptr+1)& (0+255),w,b
  5135  00149C  6EDA               	movwf	fsr2h,c
  5136  00149E  50DF               	movf	indf2,w,c
  5137  0014A0  EC46  F00E         	call	_WriteUSART
  5138                           
  5139                           ;my_uart.c: 24: uc_ptr->Tx_buflen++;
  5140  0014A4  0100               	movlb	0	; () banked
  5141  0014A6  EE20 F00A          	lfsr	2,10
  5142  0014AA  0100               	movlb	0	; () banked
  5143  0014AC  51C5               	movf	_uc_ptr& (0+255),w,b
  5144  0014AE  26D9               	addwf	fsr2l,f,c
  5145  0014B0  0100               	movlb	0	; () banked
  5146  0014B2  51C6               	movf	(_uc_ptr+1)& (0+255),w,b
  5147  0014B4  22DA               	addwfc	fsr2h,f,c
  5148  0014B6  2ADF               	incf	indf2,f,c
  5149  0014B8  0012               	return	
  5150  0014BA                     __end_of_uart_send_int_handler:
  5151                           	opt stack 0
  5152                           pclatu	equ	0xFFB
  5153                           pclath	equ	0xFFA
  5154                           tblptru	equ	0xFF8
  5155                           tblptrh	equ	0xFF7
  5156                           tblptrl	equ	0xFF6
  5157                           tablat	equ	0xFF5
  5158                           prodh	equ	0xFF4
  5159                           prodl	equ	0xFF3
  5160                           intcon	equ	0xFF2
  5161                           postinc0	equ	0xFEE
  5162                           fsr0h	equ	0xFEA
  5163                           fsr0l	equ	0xFE9
  5164                           wreg	equ	0xFE8
  5165                           indf1	equ	0xFE7
  5166                           postdec1	equ	0xFE5
  5167                           fsr1h	equ	0xFE2
  5168                           fsr1l	equ	0xFE1
  5169                           bsr	equ	0xFE0
  5170                           indf2	equ	0xFDF
  5171                           postinc2	equ	0xFDE
  5172                           postdec2	equ	0xFDD
  5173                           fsr2h	equ	0xFDA
  5174                           fsr2l	equ	0xFD9
  5175                           status	equ	0xFD8
  5176                           
  5177 ;; *************** function _WriteUSART *****************
  5178 ;; Defined at:
  5179 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\USART\uwrite.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;  data            1    wreg     unsigned char 
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;  data            1    0[COMRAM] unsigned char 
  5184 ;; Return value:  Size  Location     Type
  5185 ;;		None               void
  5186 ;; Registers used:
  5187 ;;		wreg
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5193 ;;      Params:         0       0       0       0       0
  5194 ;;      Locals:         1       0       0       0       0
  5195 ;;      Temps:          0       0       0       0       0
  5196 ;;      Totals:         1       0       0       0       0
  5197 ;;Total ram usage:        1 bytes
  5198 ;; Hardware stack levels used:    1
  5199 ;; Hardware stack levels required when called:    5
  5200 ;; This function calls:
  5201 ;;		Nothing
  5202 ;; This function is called by:
  5203 ;;		_uart_send_int_handler
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207                           	psect	text32
  5208  001C8C                     __ptext32:
  5209                           	opt stack 0
  5210  001C8C                     _WriteUSART:
  5211                           	opt stack 19
  5212                           
  5213                           ; BSR set to: 0
  5214                           ;incstack = 0
  5215                           ;WriteUSART@data stored from wreg
  5216  001C8C  CFE8 F001          	movff	wreg,WriteUSART@data
  5217  001C90  ACAC               	btfss	4012,6,c	;volatile
  5218  001C92  D003               	goto	i1l3501
  5219  001C94  90AC               	bcf	4012,0,c	;volatile
  5220  001C96  B258               	btfsc	_USART_Status,1,c
  5221  001C98  80AC               	bsf	4012,0,c	;volatile
  5222  001C9A                     i1l3501:
  5223  001C9A  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
  5224  001C9E  0012               	return	
  5225  001CA0                     __end_of_WriteUSART:
  5226                           	opt stack 0
  5227                           pclatu	equ	0xFFB
  5228                           pclath	equ	0xFFA
  5229                           tblptru	equ	0xFF8
  5230                           tblptrh	equ	0xFF7
  5231                           tblptrl	equ	0xFF6
  5232                           tablat	equ	0xFF5
  5233                           prodh	equ	0xFF4
  5234                           prodl	equ	0xFF3
  5235                           intcon	equ	0xFF2
  5236                           postinc0	equ	0xFEE
  5237                           fsr0h	equ	0xFEA
  5238                           fsr0l	equ	0xFE9
  5239                           wreg	equ	0xFE8
  5240                           indf1	equ	0xFE7
  5241                           postdec1	equ	0xFE5
  5242                           fsr1h	equ	0xFE2
  5243                           fsr1l	equ	0xFE1
  5244                           bsr	equ	0xFE0
  5245                           indf2	equ	0xFDF
  5246                           postinc2	equ	0xFDE
  5247                           postdec2	equ	0xFDD
  5248                           fsr2h	equ	0xFDA
  5249                           fsr2l	equ	0xFD9
  5250                           status	equ	0xFD8
  5251                           
  5252 ;; *************** function _timer1_int_handler *****************
  5253 ;; Defined at:
  5254 ;;		line 43 in file "../src/user_interrupts.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;		None
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;		None
  5259 ;; Return value:  Size  Location     Type
  5260 ;;		None               void
  5261 ;; Registers used:
  5262 ;;		wreg, status,2, status,0, cstack
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5268 ;;      Params:         0       0       0       0       0
  5269 ;;      Locals:         0       0       0       0       0
  5270 ;;      Temps:          1       0       0       0       0
  5271 ;;      Totals:         1       0       0       0       0
  5272 ;;Total ram usage:        1 bytes
  5273 ;; Hardware stack levels used:    1
  5274 ;; Hardware stack levels required when called:    6
  5275 ;; This function calls:
  5276 ;;		i1_WriteTimer1
  5277 ;; This function is called by:
  5278 ;;		_InterruptHandlerLow
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281                           
  5282                           	psect	text33
  5283  001B88                     __ptext33:
  5284                           	opt stack 0
  5285  001B88                     _timer1_int_handler:
  5286                           	opt stack 19
  5287                           
  5288                           ;user_interrupts.c: 45: timer1Counter++;
  5289                           
  5290                           ;incstack = 0
  5291  001B88  4A55               	infsnz	_timer1Counter,f,c
  5292  001B8A  2A56               	incf	_timer1Counter+1,f,c
  5293                           
  5294                           ;user_interrupts.c: 47: WriteTimer1(0xFFCF);
  5295  001B8C  0EFF               	movlw	255
  5296  001B8E  6E02               	movwf	i1WriteTimer1@timer1+1,c
  5297  001B90  0ECF               	movlw	207
  5298  001B92  6E01               	movwf	i1WriteTimer1@timer1,c
  5299  001B94  EC74  F00E         	call	i1_WriteTimer1	;wreg free
  5300                           
  5301                           ;user_interrupts.c: 50: if (timer1Counter >= maxTickOne) {
  5302  001B98  5056               	movf	_timer1Counter+1,w,c
  5303  001B9A  0A80               	xorlw	128
  5304  001B9C  6E05               	movwf	??_timer1_int_handler& (0+255),c
  5305  001B9E  5060               	movf	_maxTickOne,w,c
  5306  001BA0  5C55               	subwf	_timer1Counter,w,c
  5307  001BA2  5061               	movf	_maxTickOne+1,w,c
  5308  001BA4  0A80               	xorlw	128
  5309  001BA6  5805               	subwfb	??_timer1_int_handler& (0+255),w,c
  5310  001BA8  A0D8               	btfss	status,0,c
  5311  001BAA  0012               	return	
  5312                           
  5313                           ;user_interrupts.c: 51: { LATAbits.LATA3 = 1; };
  5314  001BAC  8689               	bsf	3977,3,c	;volatile
  5315                           
  5316                           ;user_interrupts.c: 52: { LATAbits.LATA3 = 0; };
  5317  001BAE  9689               	bcf	3977,3,c	;volatile
  5318  001BB0  0012               	return	
  5319  001BB2                     __end_of_timer1_int_handler:
  5320                           	opt stack 0
  5321                           pclatu	equ	0xFFB
  5322                           pclath	equ	0xFFA
  5323                           tblptru	equ	0xFF8
  5324                           tblptrh	equ	0xFF7
  5325                           tblptrl	equ	0xFF6
  5326                           tablat	equ	0xFF5
  5327                           prodh	equ	0xFF4
  5328                           prodl	equ	0xFF3
  5329                           intcon	equ	0xFF2
  5330                           postinc0	equ	0xFEE
  5331                           fsr0h	equ	0xFEA
  5332                           fsr0l	equ	0xFE9
  5333                           wreg	equ	0xFE8
  5334                           indf1	equ	0xFE7
  5335                           postdec1	equ	0xFE5
  5336                           fsr1h	equ	0xFE2
  5337                           fsr1l	equ	0xFE1
  5338                           bsr	equ	0xFE0
  5339                           indf2	equ	0xFDF
  5340                           postinc2	equ	0xFDE
  5341                           postdec2	equ	0xFDD
  5342                           fsr2h	equ	0xFDA
  5343                           fsr2l	equ	0xFD9
  5344                           status	equ	0xFD8
  5345                           
  5346 ;; *************** function i1_WriteTimer1 *****************
  5347 ;; Defined at:
  5348 ;;		line 14 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;  timer1          2    0[COMRAM] unsigned int 
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;  WriteTimer1     2    2[COMRAM] struct Timers
  5353 ;; Return value:  Size  Location     Type
  5354 ;;		None               void
  5355 ;; Registers used:
  5356 ;;		None
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5362 ;;      Params:         2       0       0       0       0
  5363 ;;      Locals:         2       0       0       0       0
  5364 ;;      Temps:          0       0       0       0       0
  5365 ;;      Totals:         4       0       0       0       0
  5366 ;;Total ram usage:        4 bytes
  5367 ;; Hardware stack levels used:    1
  5368 ;; Hardware stack levels required when called:    5
  5369 ;; This function calls:
  5370 ;;		Nothing
  5371 ;; This function is called by:
  5372 ;;		_timer1_int_handler
  5373 ;; This function uses a non-reentrant model
  5374 ;;
  5375                           
  5376                           	psect	text34
  5377  001CE8                     __ptext34:
  5378                           	opt stack 0
  5379  001CE8                     i1_WriteTimer1:
  5380                           	opt stack 19
  5381                           
  5382                           ;incstack = 0
  5383  001CE8  C001  F003         	movff	i1WriteTimer1@timer1,i1WriteTimer1@timer
  5384  001CEC  C002  F004         	movff	i1WriteTimer1@timer1+1,i1WriteTimer1@timer+1
  5385  001CF0  C004  FFCF         	movff	i1WriteTimer1@timer+1,4047	;volatile
  5386  001CF4  C003  FFCE         	movff	i1WriteTimer1@timer,4046	;volatile
  5387  001CF8  0012               	return	
  5388  001CFA                     __end_ofi1_WriteTimer1:
  5389                           	opt stack 0
  5390                           pclatu	equ	0xFFB
  5391                           pclath	equ	0xFFA
  5392                           tblptru	equ	0xFF8
  5393                           tblptrh	equ	0xFF7
  5394                           tblptrl	equ	0xFF6
  5395                           tablat	equ	0xFF5
  5396                           prodh	equ	0xFF4
  5397                           prodl	equ	0xFF3
  5398                           intcon	equ	0xFF2
  5399                           postinc0	equ	0xFEE
  5400                           fsr0h	equ	0xFEA
  5401                           fsr0l	equ	0xFE9
  5402                           wreg	equ	0xFE8
  5403                           indf1	equ	0xFE7
  5404                           postdec1	equ	0xFE5
  5405                           fsr1h	equ	0xFE2
  5406                           fsr1l	equ	0xFE1
  5407                           bsr	equ	0xFE0
  5408                           indf2	equ	0xFDF
  5409                           postinc2	equ	0xFDE
  5410                           postdec2	equ	0xFDD
  5411                           fsr2h	equ	0xFDA
  5412                           fsr2l	equ	0xFD9
  5413                           status	equ	0xFD8
  5414                           
  5415 ;; *************** function _InterruptHandlerHigh *****************
  5416 ;; Defined at:
  5417 ;;		line 87 in file "../src/interrupts.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;		None
  5420 ;; Auto vars:     Size  Location     Type
  5421 ;;		None
  5422 ;; Return value:  Size  Location     Type
  5423 ;;		None               void
  5424 ;; Registers used:
  5425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5431 ;;      Params:         0       0       0       0       0
  5432 ;;      Locals:         0       0       0       0       0
  5433 ;;      Temps:          0      14       0       0       0
  5434 ;;      Totals:         0      14       0       0       0
  5435 ;;Total ram usage:       14 bytes
  5436 ;; Hardware stack levels used:    1
  5437 ;; Hardware stack levels required when called:    4
  5438 ;; This function calls:
  5439 ;;		_SleepIfOkay
  5440 ;;		_i2c_int_handler
  5441 ;;		_timer0_int_handler
  5442 ;; This function is called by:
  5443 ;;		Interrupt level 2
  5444 ;; This function uses a non-reentrant model
  5445 ;;
  5446                           
  5447                           	psect	intcode
  5448  000008                     __pintcode:
  5449                           	opt stack 0
  5450  000008                     _InterruptHandlerHigh:
  5451                           	opt stack 19
  5452                           
  5453                           ;incstack = 0
  5454  000008  CFFA F089          	movff	pclath,??_InterruptHandlerHigh
  5455  00000C  CFFB F08A          	movff	pclatu,??_InterruptHandlerHigh+1
  5456  000010  EFA2  F00A         	goto	int_func
  5457                           pclatu	equ	0xFFB
  5458                           pclath	equ	0xFFA
  5459                           tblptru	equ	0xFF8
  5460                           tblptrh	equ	0xFF7
  5461                           tblptrl	equ	0xFF6
  5462                           tablat	equ	0xFF5
  5463                           prodh	equ	0xFF4
  5464                           prodl	equ	0xFF3
  5465                           intcon	equ	0xFF2
  5466                           postinc0	equ	0xFEE
  5467                           fsr0h	equ	0xFEA
  5468                           fsr0l	equ	0xFE9
  5469                           wreg	equ	0xFE8
  5470                           indf1	equ	0xFE7
  5471                           postdec1	equ	0xFE5
  5472                           fsr1h	equ	0xFE2
  5473                           fsr1l	equ	0xFE1
  5474                           bsr	equ	0xFE0
  5475                           indf2	equ	0xFDF
  5476                           postinc2	equ	0xFDE
  5477                           postdec2	equ	0xFDD
  5478                           fsr2h	equ	0xFDA
  5479                           fsr2l	equ	0xFD9
  5480                           status	equ	0xFD8
  5481                           
  5482                           	psect	intcode_body
  5483  001544                     __pintcode_body:
  5484                           	opt stack 19
  5485  001544                     int_func:
  5486                           	opt stack 19
  5487  001544  CFE9 F08B          	movff	fsr0l,??_InterruptHandlerHigh+2
  5488  001548  CFEA F08C          	movff	fsr0h,??_InterruptHandlerHigh+3
  5489  00154C  CFE1 F08D          	movff	fsr1l,??_InterruptHandlerHigh+4
  5490  001550  CFE2 F08E          	movff	fsr1h,??_InterruptHandlerHigh+5
  5491  001554  CFD9 F08F          	movff	fsr2l,??_InterruptHandlerHigh+6
  5492  001558  CFDA F090          	movff	fsr2h,??_InterruptHandlerHigh+7
  5493  00155C  CFF3 F091          	movff	prodl,??_InterruptHandlerHigh+8
  5494  001560  CFF4 F092          	movff	prodh,??_InterruptHandlerHigh+9
  5495  001564  CFF6 F093          	movff	tblptrl,??_InterruptHandlerHigh+10
  5496  001568  CFF7 F094          	movff	tblptrh,??_InterruptHandlerHigh+11
  5497  00156C  CFF8 F095          	movff	tblptru,??_InterruptHandlerHigh+12
  5498  001570  CFF5 F096          	movff	tablat,??_InterruptHandlerHigh+13
  5499                           
  5500                           ;interrupts.c: 92: if (PIR1bits.SSPIF) {
  5501  001574  A69E               	btfss	3998,3,c	;volatile
  5502  001576  D003               	goto	i2l2929
  5503                           
  5504                           ;interrupts.c: 94: PIR1bits.SSPIF = 0;
  5505  001578  969E               	bcf	3998,3,c	;volatile
  5506                           
  5507                           ;interrupts.c: 96: i2c_int_handler();
  5508  00157A  EC02  F002         	call	_i2c_int_handler	;wreg free
  5509  00157E                     i2l2929:
  5510                           
  5511                           ;interrupts.c: 97: }
  5512                           ;interrupts.c: 100: if (INTCONbits.TMR0IF) {
  5513  00157E  A4F2               	btfss	intcon,2,c	;volatile
  5514  001580  D003               	goto	i2l2935
  5515                           
  5516                           ;interrupts.c: 101: INTCONbits.TMR0IF = 0;
  5517  001582  94F2               	bcf	intcon,2,c	;volatile
  5518                           
  5519                           ;interrupts.c: 103: timer0_int_handler();
  5520  001584  ECD9  F00D         	call	_timer0_int_handler	;wreg free
  5521  001588                     i2l2935:
  5522                           
  5523                           ;interrupts.c: 104: }
  5524                           ;interrupts.c: 111: SleepIfOkay();
  5525  001588  EC5A  F00C         	call	_SleepIfOkay	;wreg free
  5526  00158C  C096  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  5527  001590  C095  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  5528  001594  C094  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  5529  001598  C093  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  5530  00159C  C092  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  5531  0015A0  C091  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  5532  0015A4  C090  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  5533  0015A8  C08F  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  5534  0015AC  C08E  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  5535  0015B0  C08D  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  5536  0015B4  C08C  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  5537  0015B8  C08B  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  5538  0015BC  C08A  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  5539  0015C0  C089  FFFA         	movff	??_InterruptHandlerHigh,pclath
  5540  0015C4  0011               	retfie		f
  5541  0015C6                     __end_of_InterruptHandlerHigh:
  5542                           	opt stack 0
  5543                           pclatu	equ	0xFFB
  5544                           pclath	equ	0xFFA
  5545                           tblptru	equ	0xFF8
  5546                           tblptrh	equ	0xFF7
  5547                           tblptrl	equ	0xFF6
  5548                           tablat	equ	0xFF5
  5549                           prodh	equ	0xFF4
  5550                           prodl	equ	0xFF3
  5551                           intcon	equ	0xFF2
  5552                           postinc0	equ	0xFEE
  5553                           fsr0h	equ	0xFEA
  5554                           fsr0l	equ	0xFE9
  5555                           wreg	equ	0xFE8
  5556                           indf1	equ	0xFE7
  5557                           postdec1	equ	0xFE5
  5558                           fsr1h	equ	0xFE2
  5559                           fsr1l	equ	0xFE1
  5560                           bsr	equ	0xFE0
  5561                           indf2	equ	0xFDF
  5562                           postinc2	equ	0xFDE
  5563                           postdec2	equ	0xFDD
  5564                           fsr2h	equ	0xFDA
  5565                           fsr2l	equ	0xFD9
  5566                           status	equ	0xFD8
  5567                           
  5568 ;; *************** function _timer0_int_handler *****************
  5569 ;; Defined at:
  5570 ;;		line 19 in file "../src/user_interrupts.c"
  5571 ;; Parameters:    Size  Location     Type
  5572 ;;		None
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;		None
  5575 ;; Return value:  Size  Location     Type
  5576 ;;		None               void
  5577 ;; Registers used:
  5578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  5579 ;; Tracked objects:
  5580 ;;		On entry : 0/0
  5581 ;;		On exit  : 0/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5584 ;;      Params:         0       0       0       0       0
  5585 ;;      Locals:         0       0       0       0       0
  5586 ;;      Temps:          1       0       0       0       0
  5587 ;;      Totals:         1       0       0       0       0
  5588 ;;Total ram usage:        1 bytes
  5589 ;; Hardware stack levels used:    1
  5590 ;; Hardware stack levels required when called:    1
  5591 ;; This function calls:
  5592 ;;		_WriteTimer0
  5593 ;; This function is called by:
  5594 ;;		_InterruptHandlerHigh
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598                           	psect	text36
  5599  001BB2                     __ptext36:
  5600                           	opt stack 0
  5601  001BB2                     _timer0_int_handler:
  5602                           	opt stack 21
  5603                           
  5604                           ;user_interrupts.c: 21: timer0Counter++;
  5605                           
  5606                           ;incstack = 0
  5607  001BB2  4A53               	infsnz	_timer0Counter,f,c
  5608  001BB4  2A54               	incf	_timer0Counter+1,f,c
  5609                           
  5610                           ;user_interrupts.c: 23: WriteTimer0(0xCF);
  5611  001BB6  0E00               	movlw	0
  5612  001BB8  6E18               	movwf	WriteTimer0@timer0+1,c
  5613  001BBA  0ECF               	movlw	207
  5614  001BBC  6E17               	movwf	WriteTimer0@timer0,c
  5615  001BBE  EC7D  F00E         	call	_WriteTimer0	;wreg free
  5616                           
  5617                           ;user_interrupts.c: 26: if (timer0Counter >= maxTickZero) {
  5618  001BC2  5054               	movf	_timer0Counter+1,w,c
  5619  001BC4  0A80               	xorlw	128
  5620  001BC6  6E1B               	movwf	??_timer0_int_handler& (0+255),c
  5621  001BC8  5062               	movf	_maxTickZero,w,c
  5622  001BCA  5C53               	subwf	_timer0Counter,w,c
  5623  001BCC  5063               	movf	_maxTickZero+1,w,c
  5624  001BCE  0A80               	xorlw	128
  5625  001BD0  581B               	subwfb	??_timer0_int_handler& (0+255),w,c
  5626  001BD2  A0D8               	btfss	status,0,c
  5627  001BD4  0012               	return	
  5628                           
  5629                           ;user_interrupts.c: 27: { LATAbits.LATA2 = 1; };
  5630  001BD6  8489               	bsf	3977,2,c	;volatile
  5631                           
  5632                           ;user_interrupts.c: 28: { LATAbits.LATA2 = 0; };
  5633  001BD8  9489               	bcf	3977,2,c	;volatile
  5634  001BDA  0012               	return	
  5635  001BDC                     __end_of_timer0_int_handler:
  5636                           	opt stack 0
  5637                           pclatu	equ	0xFFB
  5638                           pclath	equ	0xFFA
  5639                           tblptru	equ	0xFF8
  5640                           tblptrh	equ	0xFF7
  5641                           tblptrl	equ	0xFF6
  5642                           tablat	equ	0xFF5
  5643                           prodh	equ	0xFF4
  5644                           prodl	equ	0xFF3
  5645                           intcon	equ	0xFF2
  5646                           postinc0	equ	0xFEE
  5647                           fsr0h	equ	0xFEA
  5648                           fsr0l	equ	0xFE9
  5649                           wreg	equ	0xFE8
  5650                           indf1	equ	0xFE7
  5651                           postdec1	equ	0xFE5
  5652                           fsr1h	equ	0xFE2
  5653                           fsr1l	equ	0xFE1
  5654                           bsr	equ	0xFE0
  5655                           indf2	equ	0xFDF
  5656                           postinc2	equ	0xFDE
  5657                           postdec2	equ	0xFDD
  5658                           fsr2h	equ	0xFDA
  5659                           fsr2l	equ	0xFD9
  5660                           status	equ	0xFD8
  5661                           
  5662 ;; *************** function _WriteTimer0 *****************
  5663 ;; Defined at:
  5664 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  5665 ;; Parameters:    Size  Location     Type
  5666 ;;  timer0          2   22[COMRAM] unsigned int 
  5667 ;; Auto vars:     Size  Location     Type
  5668 ;;  timer           2   24[COMRAM] struct Timers
  5669 ;; Return value:  Size  Location     Type
  5670 ;;		None               void
  5671 ;; Registers used:
  5672 ;;		None
  5673 ;; Tracked objects:
  5674 ;;		On entry : 0/0
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5678 ;;      Params:         2       0       0       0       0
  5679 ;;      Locals:         2       0       0       0       0
  5680 ;;      Temps:          0       0       0       0       0
  5681 ;;      Totals:         4       0       0       0       0
  5682 ;;Total ram usage:        4 bytes
  5683 ;; Hardware stack levels used:    1
  5684 ;; This function calls:
  5685 ;;		Nothing
  5686 ;; This function is called by:
  5687 ;;		_timer0_int_handler
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           
  5691                           	psect	text37
  5692  001CFA                     __ptext37:
  5693                           	opt stack 0
  5694  001CFA                     _WriteTimer0:
  5695                           	opt stack 21
  5696                           
  5697                           ;incstack = 0
  5698  001CFA  C017  F019         	movff	WriteTimer0@timer0,WriteTimer0@timer
  5699  001CFE  C018  F01A         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  5700  001D02  C01A  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  5701  001D06  C019  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  5702  001D0A  0012               	return	
  5703  001D0C                     __end_of_WriteTimer0:
  5704                           	opt stack 0
  5705                           pclatu	equ	0xFFB
  5706                           pclath	equ	0xFFA
  5707                           tblptru	equ	0xFF8
  5708                           tblptrh	equ	0xFF7
  5709                           tblptrl	equ	0xFF6
  5710                           tablat	equ	0xFF5
  5711                           prodh	equ	0xFF4
  5712                           prodl	equ	0xFF3
  5713                           intcon	equ	0xFF2
  5714                           postinc0	equ	0xFEE
  5715                           fsr0h	equ	0xFEA
  5716                           fsr0l	equ	0xFE9
  5717                           wreg	equ	0xFE8
  5718                           indf1	equ	0xFE7
  5719                           postdec1	equ	0xFE5
  5720                           fsr1h	equ	0xFE2
  5721                           fsr1l	equ	0xFE1
  5722                           bsr	equ	0xFE0
  5723                           indf2	equ	0xFDF
  5724                           postinc2	equ	0xFDE
  5725                           postdec2	equ	0xFDD
  5726                           fsr2h	equ	0xFDA
  5727                           fsr2l	equ	0xFD9
  5728                           status	equ	0xFD8
  5729                           
  5730 ;; *************** function _i2c_int_handler *****************
  5731 ;; Defined at:
  5732 ;;		line 71 in file "../src/my_i2c.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;		None
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;  error_buf       3    0[BANK0 ] unsigned char [3]
  5737 ;;  data_read       1    8[BANK0 ] unsigned char 
  5738 ;;  msg_ready       1    7[BANK0 ] unsigned char 
  5739 ;;  i2c_data        1    6[BANK0 ] unsigned char 
  5740 ;;  msg_to_send     1    5[BANK0 ] unsigned char 
  5741 ;;  overrun_erro    1    4[BANK0 ] unsigned char 
  5742 ;;  data_written    1    3[BANK0 ] unsigned char 
  5743 ;; Return value:  Size  Location     Type
  5744 ;;		None               void
  5745 ;; Registers used:
  5746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5747 ;; Tracked objects:
  5748 ;;		On entry : 0/0
  5749 ;;		On exit  : 0/0
  5750 ;;		Unchanged: 0/0
  5751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5752 ;;      Params:         0       0       0       0       0
  5753 ;;      Locals:         0       9       0       0       0
  5754 ;;      Temps:          2       0       0       0       0
  5755 ;;      Totals:         2       9       0       0       0
  5756 ;;Total ram usage:       11 bytes
  5757 ;; Hardware stack levels used:    1
  5758 ;; Hardware stack levels required when called:    3
  5759 ;; This function calls:
  5760 ;;		_ToMainHigh_sendmsg
  5761 ;;		_handle_start
  5762 ;;		_readMessages
  5763 ;; This function is called by:
  5764 ;;		_InterruptHandlerHigh
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768                           	psect	text38
  5769  000404                     __ptext38:
  5770                           	opt stack 0
  5771  000404                     _i2c_int_handler:
  5772                           	opt stack 19
  5773                           
  5774                           ;my_i2c.c: 72: unsigned char i2c_data;
  5775                           ;my_i2c.c: 73: unsigned char data_read = 0;
  5776                           
  5777                           ;incstack = 0
  5778  000404  6E31               	movwf	??_i2c_int_handler& (0+255),c
  5779  000406  0E00               	movlw	0
  5780  000408  0100               	movlb	0	; () banked
  5781  00040A  0100               	movlb	0	; () banked
  5782  00040C  6F88               	movwf	i2c_int_handler@data_read& (0+255),b
  5783  00040E  5031               	movf	??_i2c_int_handler& (0+255),w,c
  5784                           
  5785                           ;my_i2c.c: 74: unsigned char data_written = 0;
  5786  000410  6E31               	movwf	??_i2c_int_handler& (0+255),c
  5787  000412  0E00               	movlw	0
  5788  000414  0100               	movlb	0	; () banked
  5789  000416  0100               	movlb	0	; () banked
  5790  000418  6F83               	movwf	i2c_int_handler@data_written& (0+255),b
  5791  00041A  5031               	movf	??_i2c_int_handler& (0+255),w,c
  5792                           
  5793                           ;my_i2c.c: 75: unsigned char msg_ready = 0;
  5794  00041C  6E31               	movwf	??_i2c_int_handler& (0+255),c
  5795  00041E  0E00               	movlw	0
  5796  000420  0100               	movlb	0	; () banked
  5797  000422  0100               	movlb	0	; () banked
  5798  000424  6F87               	movwf	i2c_int_handler@msg_ready& (0+255),b
  5799  000426  5031               	movf	??_i2c_int_handler& (0+255),w,c
  5800                           
  5801                           ;my_i2c.c: 76: unsigned char msg_to_send = 0;
  5802  000428  6E31               	movwf	??_i2c_int_handler& (0+255),c
  5803  00042A  0E00               	movlw	0
  5804  00042C  0100               	movlb	0	; () banked
  5805  00042E  0100               	movlb	0	; () banked
  5806  000430  6F85               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  5807  000432  5031               	movf	??_i2c_int_handler& (0+255),w,c
  5808                           
  5809                           ;my_i2c.c: 77: unsigned char overrun_error = 0;
  5810  000434  6E31               	movwf	??_i2c_int_handler& (0+255),c
  5811  000436  0E00               	movlw	0
  5812  000438  0100               	movlb	0	; () banked
  5813  00043A  0100               	movlb	0	; () banked
  5814  00043C  6F84               	movwf	i2c_int_handler@overrun_error& (0+255),b
  5815  00043E  5031               	movf	??_i2c_int_handler& (0+255),w,c
  5816                           
  5817                           ; BSR set to: 0
  5818                           ;my_i2c.c: 78: unsigned char error_buf[3];
  5819                           ;my_i2c.c: 81: if (SSPCON1bits.SSPOV == 1) {
  5820  000440  ACC6               	btfss	4038,6,c	;volatile
  5821  000442  D027               	goto	i2l2951
  5822                           
  5823                           ; BSR set to: 0
  5824                           ;my_i2c.c: 82: SSPCON1bits.SSPOV = 0;
  5825  000444  9CC6               	bcf	4038,6,c	;volatile
  5826                           
  5827                           ; BSR set to: 0
  5828                           ;my_i2c.c: 86: ic_ptr->status = 0x5;
  5829  000446  0100               	movlb	0	; () banked
  5830  000448  EE20 F00C          	lfsr	2,12
  5831  00044C  0100               	movlb	0	; () banked
  5832  00044E  51C3               	movf	_ic_ptr& (0+255),w,b
  5833  000450  26D9               	addwf	fsr2l,f,c
  5834  000452  0100               	movlb	0	; () banked
  5835  000454  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  5836  000456  22DA               	addwfc	fsr2h,f,c
  5837  000458  0E05               	movlw	5
  5838  00045A  6EDF               	movwf	indf2,c
  5839                           
  5840                           ; BSR set to: 0
  5841                           ;my_i2c.c: 87: overrun_error = 1;
  5842  00045C  6E31               	movwf	??_i2c_int_handler& (0+255),c
  5843  00045E  0E01               	movlw	1
  5844  000460  0100               	movlb	0	; () banked
  5845  000462  0100               	movlb	0	; () banked
  5846  000464  6F84               	movwf	i2c_int_handler@overrun_error& (0+255),b
  5847  000466  5031               	movf	??_i2c_int_handler& (0+255),w,c
  5848                           
  5849                           ; BSR set to: 0
  5850                           ;my_i2c.c: 88: ic_ptr->error_count++;
  5851  000468  0100               	movlb	0	; () banked
  5852  00046A  EE20 F00E          	lfsr	2,14
  5853  00046E  0100               	movlb	0	; () banked
  5854  000470  51C3               	movf	_ic_ptr& (0+255),w,b
  5855  000472  26D9               	addwf	fsr2l,f,c
  5856  000474  0100               	movlb	0	; () banked
  5857  000476  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  5858  000478  22DA               	addwfc	fsr2h,f,c
  5859  00047A  2ADF               	incf	indf2,f,c
  5860                           
  5861                           ; BSR set to: 0
  5862                           ;my_i2c.c: 89: ic_ptr->error_code = 0x4;
  5863  00047C  0100               	movlb	0	; () banked
  5864  00047E  EE20 F00D          	lfsr	2,13
  5865  000482  0100               	movlb	0	; () banked
  5866  000484  51C3               	movf	_ic_ptr& (0+255),w,b
  5867  000486  26D9               	addwf	fsr2l,f,c
  5868  000488  0100               	movlb	0	; () banked
  5869  00048A  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  5870  00048C  22DA               	addwfc	fsr2h,f,c
  5871  00048E  0E04               	movlw	4
  5872  000490  6EDF               	movwf	indf2,c
  5873  000492                     i2l2951:
  5874                           
  5875                           ; BSR set to: 0
  5876                           ;my_i2c.c: 90: }
  5877                           ;my_i2c.c: 92: if (SSPSTATbits.BF == 1) {
  5878  000492  A0C7               	btfss	4039,0,c	;volatile
  5879  000494  D008               	goto	i2l2957
  5880                           
  5881                           ; BSR set to: 0
  5882                           ;my_i2c.c: 93: i2c_data = SSPBUF;
  5883  000496  CFC9 F086          	movff	4041,i2c_int_handler@i2c_data	;volatile
  5884                           
  5885                           ; BSR set to: 0
  5886                           ;my_i2c.c: 94: data_read = 1;
  5887  00049A  6E31               	movwf	??_i2c_int_handler& (0+255),c
  5888  00049C  0E01               	movlw	1
  5889  00049E  0100               	movlb	0	; () banked
  5890  0004A0  0100               	movlb	0	; () banked
  5891  0004A2  6F88               	movwf	i2c_int_handler@data_read& (0+255),b
  5892  0004A4  5031               	movf	??_i2c_int_handler& (0+255),w,c
  5893  0004A6                     i2l2957:
  5894                           
  5895                           ; BSR set to: 0
  5896                           ;my_i2c.c: 95: }
  5897                           ;my_i2c.c: 97: if (!overrun_error) {
  5898  0004A6  0100               	movlb	0	; () banked
  5899  0004A8  0100               	movlb	0	; () banked
  5900  0004AA  6784               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  5901  0004AC  D1B8               	goto	i2l312
  5902  0004AE  D1A1               	goto	i2l3045
  5903  0004B0                     i2l314:
  5904                           
  5905                           ; BSR set to: 0
  5906                           ;my_i2c.c: 100: {
  5907                           ;my_i2c.c: 102: if (SSPSTATbits.S == 1) {
  5908  0004B0  A6C7               	btfss	4039,3,c	;volatile
  5909  0004B2  D1B5               	goto	i2l312
  5910                           
  5911                           ; BSR set to: 0
  5912                           ;my_i2c.c: 103: handle_start(data_read);
  5913  0004B4  0100               	movlb	0	; () banked
  5914  0004B6  0100               	movlb	0	; () banked
  5915  0004B8  5188               	movf	i2c_int_handler@data_read& (0+255),w,b
  5916  0004BA  EC14  F009         	call	_handle_start
  5917                           
  5918                           ;my_i2c.c: 105: if (ic_ptr->status == 0x8) {
  5919  0004BE  0100               	movlb	0	; () banked
  5920  0004C0  EE20 F00C          	lfsr	2,12
  5921  0004C4  0100               	movlb	0	; () banked
  5922  0004C6  51C3               	movf	_ic_ptr& (0+255),w,b
  5923  0004C8  26D9               	addwf	fsr2l,f,c
  5924  0004CA  0100               	movlb	0	; () banked
  5925  0004CC  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  5926  0004CE  22DA               	addwfc	fsr2h,f,c
  5927  0004D0  0E08               	movlw	8
  5928  0004D2  62DF               	cpfseq	indf2,c
  5929  0004D4  D1A4               	goto	i2l312
  5930                           
  5931                           ; BSR set to: 0
  5932                           ;my_i2c.c: 106: data_read = 0;
  5933  0004D6  6E31               	movwf	??_i2c_int_handler& (0+255),c
  5934  0004D8  0E00               	movlw	0
  5935  0004DA  0100               	movlb	0	; () banked
  5936  0004DC  0100               	movlb	0	; () banked
  5937  0004DE  6F88               	movwf	i2c_int_handler@data_read& (0+255),b
  5938  0004E0  5031               	movf	??_i2c_int_handler& (0+255),w,c
  5939                           
  5940                           ;my_i2c.c: 107: msg_to_send = 1;
  5941  0004E2  6E31               	movwf	??_i2c_int_handler& (0+255),c
  5942  0004E4  0E01               	movlw	1
  5943  0004E6  0100               	movlb	0	; () banked
  5944  0004E8  0100               	movlb	0	; () banked
  5945  0004EA  6F85               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  5946  0004EC  D175               	goto	L6
  5947  0004EE                     i2l318:
  5948                           
  5949                           ; BSR set to: 0
  5950                           ;my_i2c.c: 113: {
  5951                           ;my_i2c.c: 115: if (SSPSTATbits.P == 1) {
  5952  0004EE  A8C7               	btfss	4039,4,c	;volatile
  5953  0004F0  D02E               	goto	i2l2977
  5954                           
  5955                           ; BSR set to: 0
  5956                           ;my_i2c.c: 118: ic_ptr->event_count++;
  5957  0004F2  0100               	movlb	0	; () banked
  5958  0004F4  EE20 F00B          	lfsr	2,11
  5959  0004F8  0100               	movlb	0	; () banked
  5960  0004FA  51C3               	movf	_ic_ptr& (0+255),w,b
  5961  0004FC  26D9               	addwf	fsr2l,f,c
  5962  0004FE  0100               	movlb	0	; () banked
  5963  000500  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  5964  000502  22DA               	addwfc	fsr2h,f,c
  5965  000504  2ADF               	incf	indf2,f,c
  5966                           
  5967                           ; BSR set to: 0
  5968                           ;my_i2c.c: 119: if (data_read) {
  5969  000506  0100               	movlb	0	; () banked
  5970  000508  0100               	movlb	0	; () banked
  5971  00050A  5188               	movf	i2c_int_handler@data_read& (0+255),w,b
  5972  00050C  B4D8               	btfsc	status,2,c
  5973  00050E  D166               	goto	L8
  5974                           
  5975                           ; BSR set to: 0
  5976                           ;my_i2c.c: 120: if (SSPSTATbits.D_A == 0) {
  5977  000510  BAC7               	btfsc	4039,5,c	;volatile
  5978  000512  D007               	goto	i2l2975
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;my_i2c.c: 121: msg_ready = 1;
  5982  000514  6E31               	movwf	??_i2c_int_handler& (0+255),c
  5983  000516  0E01               	movlw	1
  5984  000518  0100               	movlb	0	; () banked
  5985  00051A  0100               	movlb	0	; () banked
  5986  00051C  6F87               	movwf	i2c_int_handler@msg_ready& (0+255),b
  5987  00051E  5031               	movf	??_i2c_int_handler& (0+255),w,c
  5988                           
  5989                           ;my_i2c.c: 122: } else {
  5990  000520  D15D               	goto	L8
  5991  000522                     i2l2975:
  5992                           
  5993                           ; BSR set to: 0
  5994                           ;my_i2c.c: 123: ic_ptr->error_count++;
  5995  000522  0100               	movlb	0	; () banked
  5996  000524  EE20 F00E          	lfsr	2,14
  5997  000528  0100               	movlb	0	; () banked
  5998  00052A  51C3               	movf	_ic_ptr& (0+255),w,b
  5999  00052C  26D9               	addwf	fsr2l,f,c
  6000  00052E  0100               	movlb	0	; () banked
  6001  000530  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6002  000532  22DA               	addwfc	fsr2h,f,c
  6003  000534  2ADF               	incf	indf2,f,c
  6004                           
  6005                           ;my_i2c.c: 124: ic_ptr->error_code = 0x6;
  6006  000536  0100               	movlb	0	; () banked
  6007  000538  EE20 F00D          	lfsr	2,13
  6008  00053C  0100               	movlb	0	; () banked
  6009  00053E  51C3               	movf	_ic_ptr& (0+255),w,b
  6010  000540  26D9               	addwf	fsr2l,f,c
  6011  000542  0100               	movlb	0	; () banked
  6012  000544  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6013  000546  22DA               	addwfc	fsr2h,f,c
  6014  000548  0E06               	movlw	6
  6015  00054A  6EDF               	movwf	indf2,c
  6016                           
  6017                           ; BSR set to: 0
  6018  00054C  D147               	goto	L8
  6019  00054E                     i2l2977:
  6020                           
  6021                           ; BSR set to: 0
  6022  00054E  0100               	movlb	0	; () banked
  6023  000550  0100               	movlb	0	; () banked
  6024  000552  5188               	movf	i2c_int_handler@data_read& (0+255),w,b
  6025  000554  B4D8               	btfsc	status,2,c
  6026  000556  D163               	goto	i2l312
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;my_i2c.c: 129: ic_ptr->event_count++;
  6030  000558  0100               	movlb	0	; () banked
  6031  00055A  EE20 F00B          	lfsr	2,11
  6032  00055E  0100               	movlb	0	; () banked
  6033  000560  51C3               	movf	_ic_ptr& (0+255),w,b
  6034  000562  26D9               	addwf	fsr2l,f,c
  6035  000564  0100               	movlb	0	; () banked
  6036  000566  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6037  000568  22DA               	addwfc	fsr2h,f,c
  6038  00056A  2ADF               	incf	indf2,f,c
  6039                           
  6040                           ; BSR set to: 0
  6041                           ;my_i2c.c: 130: if (SSPSTATbits.D_A == 0) {
  6042  00056C  BAC7               	btfsc	4039,5,c	;volatile
  6043  00056E  D019               	goto	i2l2993
  6044                           
  6045                           ; BSR set to: 0
  6046                           ;my_i2c.c: 131: if (SSPSTATbits.R_W == 0) {
  6047  000570  B4C7               	btfsc	4039,2,c	;volatile
  6048  000572  D00B               	goto	i2l2987
  6049                           
  6050                           ; BSR set to: 0
  6051                           ;my_i2c.c: 132: ic_ptr->status = 0x7;
  6052  000574  0100               	movlb	0	; () banked
  6053  000576  EE20 F00C          	lfsr	2,12
  6054  00057A  0100               	movlb	0	; () banked
  6055  00057C  51C3               	movf	_ic_ptr& (0+255),w,b
  6056  00057E  26D9               	addwf	fsr2l,f,c
  6057  000580  0100               	movlb	0	; () banked
  6058  000582  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6059  000584  22DA               	addwfc	fsr2h,f,c
  6060  000586  0E07               	movlw	7
  6061  000588  D071               	goto	L5
  6062  00058A                     i2l2987:
  6063                           
  6064                           ; BSR set to: 0
  6065                           ;my_i2c.c: 134: ic_ptr->status = 0x8;
  6066  00058A  0100               	movlb	0	; () banked
  6067  00058C  EE20 F00C          	lfsr	2,12
  6068  000590  0100               	movlb	0	; () banked
  6069  000592  51C3               	movf	_ic_ptr& (0+255),w,b
  6070  000594  26D9               	addwf	fsr2l,f,c
  6071  000596  0100               	movlb	0	; () banked
  6072  000598  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6073  00059A  22DA               	addwfc	fsr2h,f,c
  6074  00059C  0E08               	movlw	8
  6075  00059E  6EDF               	movwf	indf2,c
  6076  0005A0  D110               	goto	L9
  6077  0005A2                     i2l2993:
  6078                           
  6079                           ; BSR set to: 0
  6080                           ;my_i2c.c: 140: ic_ptr->error_count++;
  6081  0005A2  0100               	movlb	0	; () banked
  6082  0005A4  EE20 F00E          	lfsr	2,14
  6083  0005A8  0100               	movlb	0	; () banked
  6084  0005AA  51C3               	movf	_ic_ptr& (0+255),w,b
  6085  0005AC  26D9               	addwf	fsr2l,f,c
  6086  0005AE  0100               	movlb	0	; () banked
  6087  0005B0  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6088  0005B2  22DA               	addwfc	fsr2h,f,c
  6089  0005B4  2ADF               	incf	indf2,f,c
  6090                           
  6091                           ;my_i2c.c: 141: ic_ptr->status = 0x5;
  6092  0005B6  0100               	movlb	0	; () banked
  6093  0005B8  EE20 F00C          	lfsr	2,12
  6094  0005BC  0100               	movlb	0	; () banked
  6095  0005BE  51C3               	movf	_ic_ptr& (0+255),w,b
  6096  0005C0  26D9               	addwf	fsr2l,f,c
  6097  0005C2  0100               	movlb	0	; () banked
  6098  0005C4  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6099  0005C6  22DA               	addwfc	fsr2h,f,c
  6100  0005C8  0E05               	movlw	5
  6101  0005CA  6EDF               	movwf	indf2,c
  6102                           
  6103                           ;my_i2c.c: 142: ic_ptr->error_code = 0x6;
  6104  0005CC  0100               	movlb	0	; () banked
  6105  0005CE  EE20 F00D          	lfsr	2,13
  6106  0005D2  0100               	movlb	0	; () banked
  6107  0005D4  51C3               	movf	_ic_ptr& (0+255),w,b
  6108  0005D6  26D9               	addwf	fsr2l,f,c
  6109  0005D8  0100               	movlb	0	; () banked
  6110  0005DA  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6111  0005DC  22DA               	addwfc	fsr2h,f,c
  6112  0005DE  0E06               	movlw	6
  6113  0005E0  D045               	goto	L5
  6114  0005E2                     i2l2995:
  6115                           
  6116                           ; BSR set to: 0
  6117                           ;my_i2c.c: 148: {
  6118                           ;my_i2c.c: 149: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  6119  0005E2  0100               	movlb	0	; () banked
  6120  0005E4  EE20 F01A          	lfsr	2,26
  6121  0005E8  0100               	movlb	0	; () banked
  6122  0005EA  51C3               	movf	_ic_ptr& (0+255),w,b
  6123  0005EC  26D9               	addwf	fsr2l,f,c
  6124  0005EE  0100               	movlb	0	; () banked
  6125  0005F0  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6126  0005F2  22DA               	addwfc	fsr2h,f,c
  6127  0005F4  50DF               	movf	indf2,w,c
  6128  0005F6  6E31               	movwf	??_i2c_int_handler& (0+255),c
  6129  0005F8  0100               	movlb	0	; () banked
  6130  0005FA  EE20 F019          	lfsr	2,25
  6131  0005FE  0100               	movlb	0	; () banked
  6132  000600  51C3               	movf	_ic_ptr& (0+255),w,b
  6133  000602  26D9               	addwf	fsr2l,f,c
  6134  000604  0100               	movlb	0	; () banked
  6135  000606  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6136  000608  22DA               	addwfc	fsr2h,f,c
  6137  00060A  50DF               	movf	indf2,w,c
  6138  00060C  5C31               	subwf	??_i2c_int_handler,w,c
  6139  00060E  B0D8               	btfsc	status,0,c
  6140  000610  D0E5               	goto	L8
  6141                           
  6142                           ; BSR set to: 0
  6143                           ;my_i2c.c: 150: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6144  000612  0100               	movlb	0	; () banked
  6145  000614  EE20 F01A          	lfsr	2,26
  6146  000618  0100               	movlb	0	; () banked
  6147  00061A  51C3               	movf	_ic_ptr& (0+255),w,b
  6148  00061C  26D9               	addwf	fsr2l,f,c
  6149  00061E  0100               	movlb	0	; () banked
  6150  000620  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6151  000622  22DA               	addwfc	fsr2h,f,c
  6152  000624  50DF               	movf	indf2,w,c
  6153  000626  6E31               	movwf	??_i2c_int_handler& (0+255),c
  6154  000628  5031               	movf	??_i2c_int_handler,w,c
  6155  00062A  0D01               	mullw	1
  6156  00062C  0E0F               	movlw	15
  6157  00062E  26F3               	addwf	prodl,f,c
  6158  000630  0E00               	movlw	0
  6159  000632  22F4               	addwfc	prodh,f,c
  6160  000634  50F3               	movf	prodl,w,c
  6161  000636  0100               	movlb	0	; () banked
  6162  000638  0100               	movlb	0	; () banked
  6163  00063A  25C3               	addwf	_ic_ptr& (0+255),w,b
  6164  00063C  6ED9               	movwf	fsr2l,c
  6165  00063E  50F4               	movf	prodh,w,c
  6166  000640  0100               	movlb	0	; () banked
  6167  000642  0100               	movlb	0	; () banked
  6168  000644  21C4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6169  000646  6EDA               	movwf	fsr2h,c
  6170  000648  50DF               	movf	indf2,w,c
  6171  00064A  6EC9               	movwf	4041,c	;volatile
  6172                           
  6173                           ; BSR set to: 0
  6174                           ;my_i2c.c: 151: ic_ptr->outbufind++;
  6175  00064C  0100               	movlb	0	; () banked
  6176  00064E  EE20 F01A          	lfsr	2,26
  6177  000652  0100               	movlb	0	; () banked
  6178  000654  51C3               	movf	_ic_ptr& (0+255),w,b
  6179  000656  26D9               	addwf	fsr2l,f,c
  6180  000658  0100               	movlb	0	; () banked
  6181  00065A  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6182  00065C  22DA               	addwfc	fsr2h,f,c
  6183  00065E  2ADF               	incf	indf2,f,c
  6184                           
  6185                           ; BSR set to: 0
  6186                           ;my_i2c.c: 152: data_written = 1;
  6187  000660  6E31               	movwf	??_i2c_int_handler& (0+255),c
  6188  000662  0E01               	movlw	1
  6189  000664  0100               	movlb	0	; () banked
  6190  000666  0100               	movlb	0	; () banked
  6191  000668  6F83               	movwf	i2c_int_handler@data_written& (0+255),b
  6192  00066A  D0B6               	goto	L6
  6193  00066C                     L5:
  6194  00066C  6EDF               	movwf	indf2,c
  6195  00066E  D0D7               	goto	i2l312
  6196  000670                     i2l332:
  6197                           
  6198                           ; BSR set to: 0
  6199                           ;my_i2c.c: 160: {
  6200                           ;my_i2c.c: 162: if (SSPSTATbits.P == 1) {
  6201  000670  A8C7               	btfss	4039,4,c	;volatile
  6202  000672  D05E               	goto	i2l3023
  6203                           
  6204                           ; BSR set to: 0
  6205                           ;my_i2c.c: 164: ic_ptr->event_count++;
  6206  000674  0100               	movlb	0	; () banked
  6207  000676  EE20 F00B          	lfsr	2,11
  6208  00067A  0100               	movlb	0	; () banked
  6209  00067C  51C3               	movf	_ic_ptr& (0+255),w,b
  6210  00067E  26D9               	addwf	fsr2l,f,c
  6211  000680  0100               	movlb	0	; () banked
  6212  000682  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6213  000684  22DA               	addwfc	fsr2h,f,c
  6214  000686  2ADF               	incf	indf2,f,c
  6215                           
  6216                           ; BSR set to: 0
  6217                           ;my_i2c.c: 165: if (data_read) {
  6218  000688  0100               	movlb	0	; () banked
  6219  00068A  0100               	movlb	0	; () banked
  6220  00068C  5188               	movf	i2c_int_handler@data_read& (0+255),w,b
  6221  00068E  B4D8               	btfsc	status,2,c
  6222  000690  D048               	goto	i2l3019
  6223                           
  6224                           ; BSR set to: 0
  6225                           ;my_i2c.c: 166: if (SSPSTATbits.D_A == 1) {
  6226  000692  AAC7               	btfss	4039,5,c	;volatile
  6227  000694  D025               	goto	i2l3017
  6228                           
  6229                           ; BSR set to: 0
  6230                           ;my_i2c.c: 167: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6231  000696  0100               	movlb	0	; () banked
  6232  000698  EE20 F00A          	lfsr	2,10
  6233  00069C  0100               	movlb	0	; () banked
  6234  00069E  51C3               	movf	_ic_ptr& (0+255),w,b
  6235  0006A0  26D9               	addwf	fsr2l,f,c
  6236  0006A2  0100               	movlb	0	; () banked
  6237  0006A4  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6238  0006A6  22DA               	addwfc	fsr2h,f,c
  6239  0006A8  50DF               	movf	indf2,w,c
  6240  0006AA  6E31               	movwf	??_i2c_int_handler& (0+255),c
  6241  0006AC  5031               	movf	??_i2c_int_handler,w,c
  6242  0006AE  0D01               	mullw	1
  6243  0006B0  50F3               	movf	prodl,w,c
  6244  0006B2  0100               	movlb	0	; () banked
  6245  0006B4  0100               	movlb	0	; () banked
  6246  0006B6  25C3               	addwf	_ic_ptr& (0+255),w,b
  6247  0006B8  6ED9               	movwf	fsr2l,c
  6248  0006BA  50F4               	movf	prodh,w,c
  6249  0006BC  0100               	movlb	0	; () banked
  6250  0006BE  0100               	movlb	0	; () banked
  6251  0006C0  21C4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6252  0006C2  6EDA               	movwf	fsr2h,c
  6253  0006C4  0100               	movlb	0	; () banked
  6254  0006C6  C086  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6255                           
  6256                           ; BSR set to: 0
  6257                           ;my_i2c.c: 168: ic_ptr->buflen++;
  6258  0006CA  0100               	movlb	0	; () banked
  6259  0006CC  EE20 F00A          	lfsr	2,10
  6260  0006D0  0100               	movlb	0	; () banked
  6261  0006D2  51C3               	movf	_ic_ptr& (0+255),w,b
  6262  0006D4  26D9               	addwf	fsr2l,f,c
  6263  0006D6  0100               	movlb	0	; () banked
  6264  0006D8  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6265  0006DA  22DA               	addwfc	fsr2h,f,c
  6266  0006DC  2ADF               	incf	indf2,f,c
  6267  0006DE  D021               	goto	i2l3019
  6268  0006E0                     i2l3017:
  6269                           
  6270                           ; BSR set to: 0
  6271                           ;my_i2c.c: 171: ic_ptr->error_count++;
  6272  0006E0  0100               	movlb	0	; () banked
  6273  0006E2  EE20 F00E          	lfsr	2,14
  6274  0006E6  0100               	movlb	0	; () banked
  6275  0006E8  51C3               	movf	_ic_ptr& (0+255),w,b
  6276  0006EA  26D9               	addwf	fsr2l,f,c
  6277  0006EC  0100               	movlb	0	; () banked
  6278  0006EE  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6279  0006F0  22DA               	addwfc	fsr2h,f,c
  6280  0006F2  2ADF               	incf	indf2,f,c
  6281                           
  6282                           ;my_i2c.c: 172: ic_ptr->error_code = 0x6;
  6283  0006F4  0100               	movlb	0	; () banked
  6284  0006F6  EE20 F00D          	lfsr	2,13
  6285  0006FA  0100               	movlb	0	; () banked
  6286  0006FC  51C3               	movf	_ic_ptr& (0+255),w,b
  6287  0006FE  26D9               	addwf	fsr2l,f,c
  6288  000700  0100               	movlb	0	; () banked
  6289  000702  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6290  000704  22DA               	addwfc	fsr2h,f,c
  6291  000706  0E06               	movlw	6
  6292  000708  6EDF               	movwf	indf2,c
  6293                           
  6294                           ;my_i2c.c: 173: ic_ptr->status = 0x5;
  6295  00070A  0100               	movlb	0	; () banked
  6296  00070C  EE20 F00C          	lfsr	2,12
  6297  000710  0100               	movlb	0	; () banked
  6298  000712  51C3               	movf	_ic_ptr& (0+255),w,b
  6299  000714  26D9               	addwf	fsr2l,f,c
  6300  000716  0100               	movlb	0	; () banked
  6301  000718  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6302  00071A  22DA               	addwfc	fsr2h,f,c
  6303  00071C  0E05               	movlw	5
  6304  00071E  6EDF               	movwf	indf2,c
  6305  000720  D05D               	goto	L8
  6306  000722                     i2l3019:
  6307                           
  6308                           ; BSR set to: 0
  6309                           ;my_i2c.c: 176: msg_ready = 1;
  6310  000722  6E31               	movwf	??_i2c_int_handler& (0+255),c
  6311  000724  0E01               	movlw	1
  6312  000726  0100               	movlb	0	; () banked
  6313  000728  0100               	movlb	0	; () banked
  6314  00072A  6F87               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6315  00072C  5031               	movf	??_i2c_int_handler& (0+255),w,c
  6316                           
  6317                           ; BSR set to: 0
  6318  00072E  D056               	goto	L8
  6319  000730                     i2l3023:
  6320                           
  6321                           ; BSR set to: 0
  6322  000730  0100               	movlb	0	; () banked
  6323  000732  0100               	movlb	0	; () banked
  6324  000734  5188               	movf	i2c_int_handler@data_read& (0+255),w,b
  6325  000736  B4D8               	btfsc	status,2,c
  6326  000738  D072               	goto	i2l312
  6327                           
  6328                           ; BSR set to: 0
  6329                           ;my_i2c.c: 180: ic_ptr->event_count++;
  6330  00073A  0100               	movlb	0	; () banked
  6331  00073C  EE20 F00B          	lfsr	2,11
  6332  000740  0100               	movlb	0	; () banked
  6333  000742  51C3               	movf	_ic_ptr& (0+255),w,b
  6334  000744  26D9               	addwf	fsr2l,f,c
  6335  000746  0100               	movlb	0	; () banked
  6336  000748  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6337  00074A  22DA               	addwfc	fsr2h,f,c
  6338  00074C  2ADF               	incf	indf2,f,c
  6339                           
  6340                           ; BSR set to: 0
  6341                           ;my_i2c.c: 181: if (SSPSTATbits.D_A == 1) {
  6342  00074E  AAC7               	btfss	4039,5,c	;volatile
  6343  000750  D025               	goto	i2l340
  6344                           
  6345                           ; BSR set to: 0
  6346                           ;my_i2c.c: 182: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6347  000752  0100               	movlb	0	; () banked
  6348  000754  EE20 F00A          	lfsr	2,10
  6349  000758  0100               	movlb	0	; () banked
  6350  00075A  51C3               	movf	_ic_ptr& (0+255),w,b
  6351  00075C  26D9               	addwf	fsr2l,f,c
  6352  00075E  0100               	movlb	0	; () banked
  6353  000760  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6354  000762  22DA               	addwfc	fsr2h,f,c
  6355  000764  50DF               	movf	indf2,w,c
  6356  000766  6E31               	movwf	??_i2c_int_handler& (0+255),c
  6357  000768  5031               	movf	??_i2c_int_handler,w,c
  6358  00076A  0D01               	mullw	1
  6359  00076C  50F3               	movf	prodl,w,c
  6360  00076E  0100               	movlb	0	; () banked
  6361  000770  0100               	movlb	0	; () banked
  6362  000772  25C3               	addwf	_ic_ptr& (0+255),w,b
  6363  000774  6ED9               	movwf	fsr2l,c
  6364  000776  50F4               	movf	prodh,w,c
  6365  000778  0100               	movlb	0	; () banked
  6366  00077A  0100               	movlb	0	; () banked
  6367  00077C  21C4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6368  00077E  6EDA               	movwf	fsr2h,c
  6369  000780  0100               	movlb	0	; () banked
  6370  000782  C086  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6371                           
  6372                           ; BSR set to: 0
  6373                           ;my_i2c.c: 183: ic_ptr->buflen++;
  6374  000786  0100               	movlb	0	; () banked
  6375  000788  EE20 F00A          	lfsr	2,10
  6376  00078C  0100               	movlb	0	; () banked
  6377  00078E  51C3               	movf	_ic_ptr& (0+255),w,b
  6378  000790  26D9               	addwf	fsr2l,f,c
  6379  000792  0100               	movlb	0	; () banked
  6380  000794  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6381  000796  22DA               	addwfc	fsr2h,f,c
  6382  000798  2ADF               	incf	indf2,f,c
  6383                           
  6384                           ;my_i2c.c: 184: } else {
  6385  00079A  D041               	goto	i2l312
  6386  00079C                     i2l340:
  6387                           
  6388                           ; BSR set to: 0
  6389                           ;my_i2c.c: 185: if (SSPSTATbits.R_W == 1) {
  6390  00079C  A4C7               	btfss	4039,2,c	;volatile
  6391  00079E  D6C1               	goto	i2l2975
  6392                           
  6393                           ; BSR set to: 0
  6394                           ;my_i2c.c: 186: ic_ptr->status = 0x8;
  6395  0007A0  0100               	movlb	0	; () banked
  6396  0007A2  EE20 F00C          	lfsr	2,12
  6397  0007A6  0100               	movlb	0	; () banked
  6398  0007A8  51C3               	movf	_ic_ptr& (0+255),w,b
  6399  0007AA  26D9               	addwf	fsr2l,f,c
  6400  0007AC  0100               	movlb	0	; () banked
  6401  0007AE  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6402  0007B0  22DA               	addwfc	fsr2h,f,c
  6403  0007B2  0E08               	movlw	8
  6404  0007B4  6EDF               	movwf	indf2,c
  6405                           
  6406                           ; BSR set to: 0
  6407                           ;my_i2c.c: 187: msg_ready = 1;
  6408  0007B6  6E31               	movwf	??_i2c_int_handler& (0+255),c
  6409  0007B8  0E01               	movlw	1
  6410  0007BA  0100               	movlb	0	; () banked
  6411  0007BC  0100               	movlb	0	; () banked
  6412  0007BE  6F87               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6413  0007C0  5031               	movf	??_i2c_int_handler& (0+255),w,c
  6414  0007C2                     L9:
  6415                           
  6416                           ; BSR set to: 0
  6417                           ;my_i2c.c: 188: msg_to_send = 1;
  6418  0007C2  6E31               	movwf	??_i2c_int_handler& (0+255),c
  6419  0007C4  0E01               	movlw	1
  6420  0007C6  0100               	movlb	0	; () banked
  6421  0007C8  0100               	movlb	0	; () banked
  6422  0007CA  6F85               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6423  0007CC  5031               	movf	??_i2c_int_handler& (0+255),w,c
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;my_i2c.c: 190: data_read = 0;
  6427  0007CE  6E31               	movwf	??_i2c_int_handler& (0+255),c
  6428  0007D0  0E00               	movlw	0
  6429  0007D2  0100               	movlb	0	; () banked
  6430  0007D4  0100               	movlb	0	; () banked
  6431  0007D6  6F88               	movwf	i2c_int_handler@data_read& (0+255),b
  6432  0007D8                     L6:
  6433  0007D8  5031               	movf	??_i2c_int_handler& (0+255),w,c
  6434                           
  6435                           ;my_i2c.c: 191: } else {
  6436  0007DA  D021               	goto	i2l312
  6437  0007DC                     L8:
  6438                           
  6439                           ;my_i2c.c: 194: ic_ptr->status = 0x5;
  6440  0007DC  0100               	movlb	0	; () banked
  6441  0007DE  EE20 F00C          	lfsr	2,12
  6442  0007E2  0100               	movlb	0	; () banked
  6443  0007E4  51C3               	movf	_ic_ptr& (0+255),w,b
  6444  0007E6  26D9               	addwf	fsr2l,f,c
  6445  0007E8  0100               	movlb	0	; () banked
  6446  0007EA  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6447  0007EC  22DA               	addwfc	fsr2h,f,c
  6448  0007EE  0E05               	movlw	5
  6449  0007F0  D73D               	goto	L5
  6450  0007F2                     i2l3045:
  6451                           
  6452                           ; BSR set to: 0
  6453  0007F2  0100               	movlb	0	; () banked
  6454  0007F4  EE20 F00C          	lfsr	2,12
  6455  0007F8  0100               	movlb	0	; () banked
  6456  0007FA  51C3               	movf	_ic_ptr& (0+255),w,b
  6457  0007FC  26D9               	addwf	fsr2l,f,c
  6458  0007FE  0100               	movlb	0	; () banked
  6459  000800  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6460  000802  22DA               	addwfc	fsr2h,f,c
  6461  000804  50DF               	movf	indf2,w,c
  6462                           
  6463                           ; Switch size 1, requested type "space"
  6464                           ; Number of cases is 4, Range of values is 5 to 8
  6465                           ; switch strategies available:
  6466                           ; Name         Instructions Cycles
  6467                           ; simple_byte           13     7 (average)
  6468                           ;	Chosen strategy is simple_byte
  6469  000806  0A05               	xorlw	5	; case 5
  6470  000808  B4D8               	btfsc	status,2,c
  6471  00080A  D652               	goto	i2l314
  6472  00080C  0A03               	xorlw	3	; case 6
  6473  00080E  B4D8               	btfsc	status,2,c
  6474  000810  D66E               	goto	i2l318
  6475  000812  0A01               	xorlw	1	; case 7
  6476  000814  B4D8               	btfsc	status,2,c
  6477  000816  D72C               	goto	i2l332
  6478  000818  0A0F               	xorlw	15	; case 8
  6479  00081A  B4D8               	btfsc	status,2,c
  6480  00081C  D6E2               	goto	i2l2995
  6481  00081E                     i2l312:
  6482                           
  6483                           ; BSR set to: 0
  6484                           ;my_i2c.c: 201: }
  6485                           ;my_i2c.c: 204: if (data_read || data_written) {
  6486  00081E  0100               	movlb	0	; () banked
  6487  000820  0100               	movlb	0	; () banked
  6488  000822  6788               	tstfsz	i2c_int_handler@data_read& (0+255),b
  6489  000824  D005               	goto	i2l346
  6490                           
  6491                           ; BSR set to: 0
  6492  000826  0100               	movlb	0	; () banked
  6493  000828  0100               	movlb	0	; () banked
  6494  00082A  5183               	movf	i2c_int_handler@data_written& (0+255),w,b
  6495  00082C  B4D8               	btfsc	status,2,c
  6496  00082E  D002               	goto	i2l3051
  6497  000830                     i2l346:
  6498                           
  6499                           ; BSR set to: 0
  6500                           ;my_i2c.c: 206: if (SSPCON1bits.CKP == 0) {
  6501  000830  A8C6               	btfss	4038,4,c	;volatile
  6502                           
  6503                           ; BSR set to: 0
  6504                           ;my_i2c.c: 207: SSPCON1bits.CKP = 1;
  6505  000832  88C6               	bsf	4038,4,c	;volatile
  6506  000834                     i2l3051:
  6507                           
  6508                           ; BSR set to: 0
  6509                           ;my_i2c.c: 208: }
  6510                           ;my_i2c.c: 209: }
  6511                           ;my_i2c.c: 212: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  6512  000834  0100               	movlb	0	; () banked
  6513  000836  EE20 F00A          	lfsr	2,10
  6514  00083A  0100               	movlb	0	; () banked
  6515  00083C  51C3               	movf	_ic_ptr& (0+255),w,b
  6516  00083E  26D9               	addwf	fsr2l,f,c
  6517  000840  0100               	movlb	0	; () banked
  6518  000842  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6519  000844  22DA               	addwfc	fsr2h,f,c
  6520  000846  0E08               	movlw	8
  6521  000848  64DF               	cpfsgt	indf2,c
  6522  00084A  D024               	goto	i2l3057
  6523                           
  6524                           ; BSR set to: 0
  6525  00084C  0100               	movlb	0	; () banked
  6526  00084E  0100               	movlb	0	; () banked
  6527  000850  6787               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  6528  000852  D020               	goto	i2l3057
  6529                           
  6530                           ; BSR set to: 0
  6531                           ;my_i2c.c: 213: ic_ptr->status = 0x5;
  6532  000854  0100               	movlb	0	; () banked
  6533  000856  EE20 F00C          	lfsr	2,12
  6534  00085A  0100               	movlb	0	; () banked
  6535  00085C  51C3               	movf	_ic_ptr& (0+255),w,b
  6536  00085E  26D9               	addwf	fsr2l,f,c
  6537  000860  0100               	movlb	0	; () banked
  6538  000862  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6539  000864  22DA               	addwfc	fsr2h,f,c
  6540  000866  0E05               	movlw	5
  6541  000868  6EDF               	movwf	indf2,c
  6542                           
  6543                           ;my_i2c.c: 214: ic_ptr->error_count++;
  6544  00086A  0100               	movlb	0	; () banked
  6545  00086C  EE20 F00E          	lfsr	2,14
  6546  000870  0100               	movlb	0	; () banked
  6547  000872  51C3               	movf	_ic_ptr& (0+255),w,b
  6548  000874  26D9               	addwf	fsr2l,f,c
  6549  000876  0100               	movlb	0	; () banked
  6550  000878  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6551  00087A  22DA               	addwfc	fsr2h,f,c
  6552  00087C  2ADF               	incf	indf2,f,c
  6553                           
  6554                           ;my_i2c.c: 215: ic_ptr->error_code = 0x7;
  6555  00087E  0100               	movlb	0	; () banked
  6556  000880  EE20 F00D          	lfsr	2,13
  6557  000884  0100               	movlb	0	; () banked
  6558  000886  51C3               	movf	_ic_ptr& (0+255),w,b
  6559  000888  26D9               	addwf	fsr2l,f,c
  6560  00088A  0100               	movlb	0	; () banked
  6561  00088C  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6562  00088E  22DA               	addwfc	fsr2h,f,c
  6563  000890  0E07               	movlw	7
  6564  000892  6EDF               	movwf	indf2,c
  6565  000894                     i2l3057:
  6566                           
  6567                           ; BSR set to: 0
  6568                           ;my_i2c.c: 216: }
  6569                           ;my_i2c.c: 218: if (msg_ready) {
  6570  000894  0100               	movlb	0	; () banked
  6571  000896  0100               	movlb	0	; () banked
  6572  000898  5187               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  6573  00089A  B4D8               	btfsc	status,2,c
  6574  00089C  D040               	goto	i2l3067
  6575                           
  6576                           ; BSR set to: 0
  6577                           ;my_i2c.c: 219: { LATAbits.LATA0 = 1; };
  6578  00089E  8089               	bsf	3977,0,c	;volatile
  6579                           
  6580                           ;my_i2c.c: 220: { LATAbits.LATA0 = 0; };
  6581  0008A0  9089               	bcf	3977,0,c	;volatile
  6582                           
  6583                           ; BSR set to: 0
  6584                           ;my_i2c.c: 222: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  6585  0008A2  0100               	movlb	0	; () banked
  6586  0008A4  EE20 F00B          	lfsr	2,11
  6587  0008A8  0100               	movlb	0	; () banked
  6588  0008AA  51C3               	movf	_ic_ptr& (0+255),w,b
  6589  0008AC  26D9               	addwf	fsr2l,f,c
  6590  0008AE  0100               	movlb	0	; () banked
  6591  0008B0  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6592  0008B2  22DA               	addwfc	fsr2h,f,c
  6593  0008B4  0100               	movlb	0	; () banked
  6594  0008B6  EE10 F00A          	lfsr	1,10
  6595  0008BA  0100               	movlb	0	; () banked
  6596  0008BC  51C3               	movf	_ic_ptr& (0+255),w,b
  6597  0008BE  26E1               	addwf	fsr1l,f,c
  6598  0008C0  0100               	movlb	0	; () banked
  6599  0008C2  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6600  0008C4  22E2               	addwfc	fsr1h,f,c
  6601  0008C6  50E7               	movf	indf1,w,c
  6602  0008C8  6E31               	movwf	??_i2c_int_handler& (0+255),c
  6603  0008CA  5031               	movf	??_i2c_int_handler,w,c
  6604  0008CC  0D01               	mullw	1
  6605  0008CE  50F3               	movf	prodl,w,c
  6606  0008D0  0100               	movlb	0	; () banked
  6607  0008D2  0100               	movlb	0	; () banked
  6608  0008D4  25C3               	addwf	_ic_ptr& (0+255),w,b
  6609  0008D6  6EE1               	movwf	fsr1l,c
  6610  0008D8  50F4               	movf	prodh,w,c
  6611  0008DA  0100               	movlb	0	; () banked
  6612  0008DC  0100               	movlb	0	; () banked
  6613  0008DE  21C4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6614  0008E0  6EE2               	movwf	fsr1h,c
  6615  0008E2  CFDF FFE7          	movff	indf2,indf1
  6616                           
  6617                           ; BSR set to: 0
  6618                           ;my_i2c.c: 223: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  6619  0008E6  6E31               	movwf	??_i2c_int_handler& (0+255),c
  6620  0008E8  0E28               	movlw	40
  6621  0008EA  6E2D               	movwf	ToMainHigh_sendmsg@msgtype,c
  6622  0008EC  5031               	movf	??_i2c_int_handler& (0+255),w,c
  6623  0008EE  0100               	movlb	0	; () banked
  6624  0008F0  C0C4  F02F         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  6625  0008F4  0100               	movlb	0	; () banked
  6626  0008F6  C0C3  F02E         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  6627  0008FA  0100               	movlb	0	; () banked
  6628  0008FC  EE20 F00A          	lfsr	2,10
  6629  000900  0100               	movlb	0	; () banked
  6630  000902  51C3               	movf	_ic_ptr& (0+255),w,b
  6631  000904  26D9               	addwf	fsr2l,f,c
  6632  000906  0100               	movlb	0	; () banked
  6633  000908  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6634  00090A  22DA               	addwfc	fsr2h,f,c
  6635  00090C  50DF               	movf	indf2,w,c
  6636  00090E  6E32               	movwf	(??_i2c_int_handler+1)& (0+255),c
  6637  000910  2832               	incf	??_i2c_int_handler+1,w,c
  6638  000912  EC16  F00E         	call	_ToMainHigh_sendmsg
  6639                           
  6640                           ;my_i2c.c: 224: ic_ptr->buflen = 0;
  6641  000916  0100               	movlb	0	; () banked
  6642  000918  EE20 F00A          	lfsr	2,10
  6643  00091C  D043               	goto	L7
  6644  00091E                     i2l3067:
  6645                           
  6646                           ; BSR set to: 0
  6647  00091E  0100               	movlb	0	; () banked
  6648  000920  EE20 F00E          	lfsr	2,14
  6649  000924  0100               	movlb	0	; () banked
  6650  000926  51C3               	movf	_ic_ptr& (0+255),w,b
  6651  000928  26D9               	addwf	fsr2l,f,c
  6652  00092A  0100               	movlb	0	; () banked
  6653  00092C  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6654  00092E  22DA               	addwfc	fsr2h,f,c
  6655  000930  50DF               	movf	indf2,w,c
  6656  000932  B4D8               	btfsc	status,2,c
  6657  000934  D03F               	goto	i2l3075
  6658                           
  6659                           ; BSR set to: 0
  6660                           ;my_i2c.c: 226: error_buf[0] = ic_ptr->error_count;
  6661  000936  0100               	movlb	0	; () banked
  6662  000938  EE20 F00E          	lfsr	2,14
  6663  00093C  0100               	movlb	0	; () banked
  6664  00093E  51C3               	movf	_ic_ptr& (0+255),w,b
  6665  000940  26D9               	addwf	fsr2l,f,c
  6666  000942  0100               	movlb	0	; () banked
  6667  000944  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6668  000946  22DA               	addwfc	fsr2h,f,c
  6669  000948  50DF               	movf	indf2,w,c
  6670  00094A  0100               	movlb	0	; () banked
  6671  00094C  0100               	movlb	0	; () banked
  6672  00094E  6F80               	movwf	i2c_int_handler@error_buf& (0+255),b
  6673                           
  6674                           ;my_i2c.c: 227: error_buf[1] = ic_ptr->error_code;
  6675  000950  0100               	movlb	0	; () banked
  6676  000952  EE20 F00D          	lfsr	2,13
  6677  000956  0100               	movlb	0	; () banked
  6678  000958  51C3               	movf	_ic_ptr& (0+255),w,b
  6679  00095A  26D9               	addwf	fsr2l,f,c
  6680  00095C  0100               	movlb	0	; () banked
  6681  00095E  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6682  000960  22DA               	addwfc	fsr2h,f,c
  6683  000962  50DF               	movf	indf2,w,c
  6684  000964  0100               	movlb	0	; () banked
  6685  000966  0100               	movlb	0	; () banked
  6686  000968  6F81               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  6687                           
  6688                           ;my_i2c.c: 228: error_buf[2] = ic_ptr->event_count;
  6689  00096A  0100               	movlb	0	; () banked
  6690  00096C  EE20 F00B          	lfsr	2,11
  6691  000970  0100               	movlb	0	; () banked
  6692  000972  51C3               	movf	_ic_ptr& (0+255),w,b
  6693  000974  26D9               	addwf	fsr2l,f,c
  6694  000976  0100               	movlb	0	; () banked
  6695  000978  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6696  00097A  22DA               	addwfc	fsr2h,f,c
  6697  00097C  50DF               	movf	indf2,w,c
  6698  00097E  0100               	movlb	0	; () banked
  6699  000980  0100               	movlb	0	; () banked
  6700  000982  6F82               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  6701                           
  6702                           ; BSR set to: 0
  6703                           ;my_i2c.c: 229: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  6704  000984  6E31               	movwf	??_i2c_int_handler& (0+255),c
  6705  000986  0E29               	movlw	41
  6706  000988  6E2D               	movwf	ToMainHigh_sendmsg@msgtype,c
  6707  00098A  5031               	movf	??_i2c_int_handler& (0+255),w,c
  6708  00098C  0100               	movlb	0	; () banked
  6709  00098E  0E00               	movlw	high i2c_int_handler@error_buf
  6710  000990  6E2F               	movwf	ToMainHigh_sendmsg@data+1,c
  6711  000992  0100               	movlb	0	; () banked
  6712  000994  0E80               	movlw	low i2c_int_handler@error_buf
  6713  000996  6E2E               	movwf	ToMainHigh_sendmsg@data,c
  6714  000998  0E03               	movlw	3
  6715  00099A  EC16  F00E         	call	_ToMainHigh_sendmsg
  6716                           
  6717                           ;my_i2c.c: 230: ic_ptr->error_count = 0;
  6718  00099E  0100               	movlb	0	; () banked
  6719  0009A0  EE20 F00E          	lfsr	2,14
  6720  0009A4                     L7:
  6721  0009A4  0100               	movlb	0	; () banked
  6722  0009A6  51C3               	movf	_ic_ptr& (0+255),w,b
  6723  0009A8  26D9               	addwf	fsr2l,f,c
  6724  0009AA  0100               	movlb	0	; () banked
  6725  0009AC  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6726  0009AE  22DA               	addwfc	fsr2h,f,c
  6727  0009B0  0E00               	movlw	0
  6728  0009B2  6EDF               	movwf	indf2,c
  6729  0009B4                     i2l3075:
  6730                           
  6731                           ; BSR set to: 0
  6732                           ;my_i2c.c: 231: }
  6733                           ;my_i2c.c: 232: if (msg_to_send) {
  6734  0009B4  0100               	movlb	0	; () banked
  6735  0009B6  0100               	movlb	0	; () banked
  6736  0009B8  5185               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  6737  0009BA  B4D8               	btfsc	status,2,c
  6738  0009BC  0012               	return	
  6739                           
  6740                           ; BSR set to: 0
  6741                           ;my_i2c.c: 234: readMessages();
  6742  0009BE  EC28  F00D         	call	_readMessages	;wreg free
  6743  0009C2  0012               	return	
  6744  0009C4                     __end_of_i2c_int_handler:
  6745                           	opt stack 0
  6746                           pclatu	equ	0xFFB
  6747                           pclath	equ	0xFFA
  6748                           tblptru	equ	0xFF8
  6749                           tblptrh	equ	0xFF7
  6750                           tblptrl	equ	0xFF6
  6751                           tablat	equ	0xFF5
  6752                           prodh	equ	0xFF4
  6753                           prodl	equ	0xFF3
  6754                           intcon	equ	0xFF2
  6755                           postinc0	equ	0xFEE
  6756                           fsr0h	equ	0xFEA
  6757                           fsr0l	equ	0xFE9
  6758                           wreg	equ	0xFE8
  6759                           indf1	equ	0xFE7
  6760                           postdec1	equ	0xFE5
  6761                           fsr1h	equ	0xFE2
  6762                           fsr1l	equ	0xFE1
  6763                           bsr	equ	0xFE0
  6764                           indf2	equ	0xFDF
  6765                           postinc2	equ	0xFDE
  6766                           postdec2	equ	0xFDD
  6767                           fsr2h	equ	0xFDA
  6768                           fsr2l	equ	0xFD9
  6769                           status	equ	0xFD8
  6770                           
  6771 ;; *************** function _readMessages *****************
  6772 ;; Defined at:
  6773 ;;		line 307 in file "../src/my_i2c.c"
  6774 ;; Parameters:    Size  Location     Type
  6775 ;;		None
  6776 ;; Auto vars:     Size  Location     Type
  6777 ;;  buf             4   28[COMRAM] unsigned char [4]
  6778 ;; Return value:  Size  Location     Type
  6779 ;;		None               void
  6780 ;; Registers used:
  6781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6782 ;; Tracked objects:
  6783 ;;		On entry : 0/0
  6784 ;;		On exit  : 0/0
  6785 ;;		Unchanged: 0/0
  6786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6787 ;;      Params:         0       0       0       0       0
  6788 ;;      Locals:         4       0       0       0       0
  6789 ;;      Temps:          1       0       0       0       0
  6790 ;;      Totals:         5       0       0       0       0
  6791 ;;Total ram usage:        5 bytes
  6792 ;; Hardware stack levels used:    1
  6793 ;; Hardware stack levels required when called:    1
  6794 ;; This function calls:
  6795 ;;		i2_start_i2c_slave_reply
  6796 ;; This function is called by:
  6797 ;;		_i2c_int_handler
  6798 ;; This function uses a non-reentrant model
  6799 ;;
  6800                           
  6801                           	psect	text39
  6802  001A50                     __ptext39:
  6803                           	opt stack 0
  6804  001A50                     _readMessages:
  6805                           	opt stack 20
  6806                           
  6807                           ;my_i2c.c: 310: { LATAbits.LATA0 = 1; };
  6808                           
  6809                           ;incstack = 0
  6810  001A50  8089               	bsf	3977,0,c	;volatile
  6811                           
  6812                           ;my_i2c.c: 311: { LATAbits.LATA0 = 0; };
  6813  001A52  9089               	bcf	3977,0,c	;volatile
  6814                           
  6815                           ;my_i2c.c: 314: unsigned char buf[4];
  6816                           ;my_i2c.c: 315: buf[0] = 0x10;
  6817  001A54  6E1C               	movwf	??_readMessages& (0+255),c
  6818  001A56  0E10               	movlw	16
  6819  001A58  6E1D               	movwf	readMessages@buf,c
  6820  001A5A  501C               	movf	??_readMessages& (0+255),w,c
  6821                           
  6822                           ;my_i2c.c: 316: buf[1] = 0x01;
  6823  001A5C  6E1C               	movwf	??_readMessages& (0+255),c
  6824  001A5E  0E01               	movlw	1
  6825  001A60  6E1E               	movwf	readMessages@buf+1,c
  6826  001A62  501C               	movf	??_readMessages& (0+255),w,c
  6827                           
  6828                           ;my_i2c.c: 317: buf[2] = 0x04;
  6829  001A64  6E1C               	movwf	??_readMessages& (0+255),c
  6830  001A66  0E04               	movlw	4
  6831  001A68  6E1F               	movwf	readMessages@buf+2,c
  6832  001A6A  501C               	movf	??_readMessages& (0+255),w,c
  6833                           
  6834                           ;my_i2c.c: 318: buf[3] = 0x04;
  6835  001A6C  6E1C               	movwf	??_readMessages& (0+255),c
  6836  001A6E  0E04               	movlw	4
  6837  001A70  6E20               	movwf	readMessages@buf+3,c
  6838  001A72  501C               	movf	??_readMessages& (0+255),w,c
  6839                           
  6840                           ;my_i2c.c: 319: length = 4;
  6841  001A74  6E1C               	movwf	??_readMessages& (0+255),c
  6842  001A76  0E04               	movlw	4
  6843  001A78  6E5A               	movwf	_length,c
  6844  001A7A  501C               	movf	??_readMessages& (0+255),w,c
  6845                           
  6846                           ;my_i2c.c: 321: start_i2c_slave_reply(length, buf);
  6847  001A7C  0E00               	movlw	high readMessages@buf
  6848  001A7E  6E18               	movwf	i2start_i2c_slave_reply@msg+1,c
  6849  001A80  0E1D               	movlw	low readMessages@buf
  6850  001A82  6E17               	movwf	i2start_i2c_slave_reply@msg,c
  6851  001A84  505A               	movf	_length,w,c
  6852  001A86  ECC5  F007         	call	i2_start_i2c_slave_reply
  6853  001A8A  0012               	return	
  6854  001A8C                     __end_of_readMessages:
  6855                           	opt stack 0
  6856                           pclatu	equ	0xFFB
  6857                           pclath	equ	0xFFA
  6858                           tblptru	equ	0xFF8
  6859                           tblptrh	equ	0xFF7
  6860                           tblptrl	equ	0xFF6
  6861                           tablat	equ	0xFF5
  6862                           prodh	equ	0xFF4
  6863                           prodl	equ	0xFF3
  6864                           intcon	equ	0xFF2
  6865                           postinc0	equ	0xFEE
  6866                           fsr0h	equ	0xFEA
  6867                           fsr0l	equ	0xFE9
  6868                           wreg	equ	0xFE8
  6869                           indf1	equ	0xFE7
  6870                           postdec1	equ	0xFE5
  6871                           fsr1h	equ	0xFE2
  6872                           fsr1l	equ	0xFE1
  6873                           bsr	equ	0xFE0
  6874                           indf2	equ	0xFDF
  6875                           postinc2	equ	0xFDE
  6876                           postdec2	equ	0xFDD
  6877                           fsr2h	equ	0xFDA
  6878                           fsr2l	equ	0xFD9
  6879                           status	equ	0xFD8
  6880                           
  6881 ;; *************** function i2_start_i2c_slave_reply *****************
  6882 ;; Defined at:
  6883 ;;		line 25 in file "../src/my_i2c.c"
  6884 ;; Parameters:    Size  Location     Type
  6885 ;;  length          1    wreg     unsigned char 
  6886 ;;  msg             2   22[COMRAM] PTR unsigned char 
  6887 ;;		 -> motorEncoderBuffer(5), readMessages@buf(4), 
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;  length          1   26[COMRAM] unsigned char 
  6890 ;; Return value:  Size  Location     Type
  6891 ;;		None               void
  6892 ;; Registers used:
  6893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6894 ;; Tracked objects:
  6895 ;;		On entry : 0/0
  6896 ;;		On exit  : 0/0
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6899 ;;      Params:         2       0       0       0       0
  6900 ;;      Locals:         1       0       0       0       0
  6901 ;;      Temps:          2       0       0       0       0
  6902 ;;      Totals:         5       0       0       0       0
  6903 ;;Total ram usage:        5 bytes
  6904 ;; Hardware stack levels used:    1
  6905 ;; This function calls:
  6906 ;;		Nothing
  6907 ;; This function is called by:
  6908 ;;		_readMessages
  6909 ;; This function uses a non-reentrant model
  6910 ;;
  6911                           
  6912                           	psect	text40
  6913  000F8A                     __ptext40:
  6914                           	opt stack 0
  6915  000F8A                     i2_start_i2c_slave_reply:
  6916                           	opt stack 20
  6917                           
  6918                           ;incstack = 0
  6919                           ;i2start_i2c_slave_reply@length stored from wreg
  6920  000F8A  CFE8 F01B          	movff	wreg,i2start_i2c_slave_reply@length
  6921                           
  6922                           ;my_i2c.c: 27: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  6923  000F8E  0100               	movlb	0	; () banked
  6924  000F90  EE20 F019          	lfsr	2,25
  6925  000F94  0100               	movlb	0	; () banked
  6926  000F96  51C3               	movf	_ic_ptr& (0+255),w,b
  6927  000F98  26D9               	addwf	fsr2l,f,c
  6928  000F9A  0100               	movlb	0	; () banked
  6929  000F9C  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6930  000F9E  22DA               	addwfc	fsr2h,f,c
  6931  000FA0  0E00               	movlw	0
  6932  000FA2  6EDF               	movwf	indf2,c
  6933  000FA4  D03A               	goto	i2l3569
  6934  000FA6                     i2l3565:
  6935                           
  6936                           ; BSR set to: 0
  6937                           ;my_i2c.c: 28: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  6938  000FA6  0100               	movlb	0	; () banked
  6939  000FA8  EE20 F019          	lfsr	2,25
  6940  000FAC  0100               	movlb	0	; () banked
  6941  000FAE  51C3               	movf	_ic_ptr& (0+255),w,b
  6942  000FB0  26D9               	addwf	fsr2l,f,c
  6943  000FB2  0100               	movlb	0	; () banked
  6944  000FB4  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6945  000FB6  22DA               	addwfc	fsr2h,f,c
  6946  000FB8  50DF               	movf	indf2,w,c
  6947  000FBA  6E19               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  6948  000FBC  5019               	movf	??i2_start_i2c_slave_reply,w,c
  6949  000FBE  0D01               	mullw	1
  6950  000FC0  50F3               	movf	prodl,w,c
  6951  000FC2  2417               	addwf	i2start_i2c_slave_reply@msg,w,c
  6952  000FC4  6ED9               	movwf	fsr2l,c
  6953  000FC6  50F4               	movf	prodh,w,c
  6954  000FC8  2018               	addwfc	i2start_i2c_slave_reply@msg+1,w,c
  6955  000FCA  6EDA               	movwf	fsr2h,c
  6956  000FCC  0100               	movlb	0	; () banked
  6957  000FCE  EE10 F019          	lfsr	1,25
  6958  000FD2  0100               	movlb	0	; () banked
  6959  000FD4  51C3               	movf	_ic_ptr& (0+255),w,b
  6960  000FD6  26E1               	addwf	fsr1l,f,c
  6961  000FD8  0100               	movlb	0	; () banked
  6962  000FDA  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6963  000FDC  22E2               	addwfc	fsr1h,f,c
  6964  000FDE  50E7               	movf	indf1,w,c
  6965  000FE0  6E1A               	movwf	(??i2_start_i2c_slave_reply+1)& (0+255),c
  6966  000FE2  501A               	movf	??i2_start_i2c_slave_reply+1,w,c
  6967  000FE4  0D01               	mullw	1
  6968  000FE6  0E0F               	movlw	15
  6969  000FE8  26F3               	addwf	prodl,f,c
  6970  000FEA  0E00               	movlw	0
  6971  000FEC  22F4               	addwfc	prodh,f,c
  6972  000FEE  50F3               	movf	prodl,w,c
  6973  000FF0  0100               	movlb	0	; () banked
  6974  000FF2  0100               	movlb	0	; () banked
  6975  000FF4  25C3               	addwf	_ic_ptr& (0+255),w,b
  6976  000FF6  6EE1               	movwf	fsr1l,c
  6977  000FF8  50F4               	movf	prodh,w,c
  6978  000FFA  0100               	movlb	0	; () banked
  6979  000FFC  0100               	movlb	0	; () banked
  6980  000FFE  21C4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6981  001000  6EE2               	movwf	fsr1h,c
  6982  001002  CFDF FFE7          	movff	indf2,indf1
  6983                           
  6984                           ; BSR set to: 0
  6985  001006  0100               	movlb	0	; () banked
  6986  001008  EE20 F019          	lfsr	2,25
  6987  00100C  0100               	movlb	0	; () banked
  6988  00100E  51C3               	movf	_ic_ptr& (0+255),w,b
  6989  001010  26D9               	addwf	fsr2l,f,c
  6990  001012  0100               	movlb	0	; () banked
  6991  001014  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  6992  001016  22DA               	addwfc	fsr2h,f,c
  6993  001018  2ADF               	incf	indf2,f,c
  6994  00101A                     i2l3569:
  6995                           
  6996                           ; BSR set to: 0
  6997  00101A  0100               	movlb	0	; () banked
  6998  00101C  EE20 F019          	lfsr	2,25
  6999  001020  0100               	movlb	0	; () banked
  7000  001022  51C3               	movf	_ic_ptr& (0+255),w,b
  7001  001024  26D9               	addwf	fsr2l,f,c
  7002  001026  0100               	movlb	0	; () banked
  7003  001028  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7004  00102A  22DA               	addwfc	fsr2h,f,c
  7005  00102C  50DF               	movf	indf2,w,c
  7006  00102E  6E19               	movwf	??i2_start_i2c_slave_reply& (0+255),c
  7007  001030  501B               	movf	i2start_i2c_slave_reply@length,w,c
  7008  001032  5C19               	subwf	??i2_start_i2c_slave_reply,w,c
  7009  001034  A0D8               	btfss	status,0,c
  7010  001036  D7B7               	goto	i2l3565
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;my_i2c.c: 29: }
  7014                           ;my_i2c.c: 30: ic_ptr->outbuflen = length;
  7015                           
  7016                           ; BSR set to: 0
  7017  001038  0100               	movlb	0	; () banked
  7018  00103A  EE20 F019          	lfsr	2,25
  7019  00103E  0100               	movlb	0	; () banked
  7020  001040  51C3               	movf	_ic_ptr& (0+255),w,b
  7021  001042  26D9               	addwf	fsr2l,f,c
  7022  001044  0100               	movlb	0	; () banked
  7023  001046  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7024  001048  22DA               	addwfc	fsr2h,f,c
  7025  00104A  C01B  FFDF         	movff	i2start_i2c_slave_reply@length,indf2
  7026                           
  7027                           ;my_i2c.c: 31: ic_ptr->outbufind = 1;
  7028  00104E  0100               	movlb	0	; () banked
  7029  001050  EE20 F01A          	lfsr	2,26
  7030  001054  0100               	movlb	0	; () banked
  7031  001056  51C3               	movf	_ic_ptr& (0+255),w,b
  7032  001058  26D9               	addwf	fsr2l,f,c
  7033  00105A  0100               	movlb	0	; () banked
  7034  00105C  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7035  00105E  22DA               	addwfc	fsr2h,f,c
  7036  001060  0E01               	movlw	1
  7037  001062  6EDF               	movwf	indf2,c
  7038                           
  7039                           ;my_i2c.c: 34: SSPBUF = ic_ptr->outbuffer[0];
  7040  001064  0100               	movlb	0	; () banked
  7041  001066  EE20 F00F          	lfsr	2,15
  7042  00106A  0100               	movlb	0	; () banked
  7043  00106C  51C3               	movf	_ic_ptr& (0+255),w,b
  7044  00106E  26D9               	addwf	fsr2l,f,c
  7045  001070  0100               	movlb	0	; () banked
  7046  001072  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7047  001074  22DA               	addwfc	fsr2h,f,c
  7048  001076  50DF               	movf	indf2,w,c
  7049  001078  6EC9               	movwf	4041,c	;volatile
  7050                           
  7051                           ; BSR set to: 0
  7052                           ;my_i2c.c: 37: SSPCON1bits.CKP = 1;
  7053  00107A  88C6               	bsf	4038,4,c	;volatile
  7054                           
  7055                           ; BSR set to: 0
  7056  00107C  0012               	return	
  7057  00107E                     __end_ofi2_start_i2c_slave_reply:
  7058                           	opt stack 0
  7059                           pclatu	equ	0xFFB
  7060                           pclath	equ	0xFFA
  7061                           tblptru	equ	0xFF8
  7062                           tblptrh	equ	0xFF7
  7063                           tblptrl	equ	0xFF6
  7064                           tablat	equ	0xFF5
  7065                           prodh	equ	0xFF4
  7066                           prodl	equ	0xFF3
  7067                           intcon	equ	0xFF2
  7068                           postinc0	equ	0xFEE
  7069                           fsr0h	equ	0xFEA
  7070                           fsr0l	equ	0xFE9
  7071                           wreg	equ	0xFE8
  7072                           indf1	equ	0xFE7
  7073                           postdec1	equ	0xFE5
  7074                           fsr1h	equ	0xFE2
  7075                           fsr1l	equ	0xFE1
  7076                           bsr	equ	0xFE0
  7077                           indf2	equ	0xFDF
  7078                           postinc2	equ	0xFDE
  7079                           postdec2	equ	0xFDD
  7080                           fsr2h	equ	0xFDA
  7081                           fsr2l	equ	0xFD9
  7082                           status	equ	0xFD8
  7083                           
  7084 ;; *************** function _handle_start *****************
  7085 ;; Defined at:
  7086 ;;		line 42 in file "../src/my_i2c.c"
  7087 ;; Parameters:    Size  Location     Type
  7088 ;;  data_read       1    wreg     unsigned char 
  7089 ;; Auto vars:     Size  Location     Type
  7090 ;;  data_read       1   22[COMRAM] unsigned char 
  7091 ;; Return value:  Size  Location     Type
  7092 ;;		None               void
  7093 ;; Registers used:
  7094 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7095 ;; Tracked objects:
  7096 ;;		On entry : 0/0
  7097 ;;		On exit  : 0/0
  7098 ;;		Unchanged: 0/0
  7099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7100 ;;      Params:         0       0       0       0       0
  7101 ;;      Locals:         1       0       0       0       0
  7102 ;;      Temps:          0       0       0       0       0
  7103 ;;      Totals:         1       0       0       0       0
  7104 ;;Total ram usage:        1 bytes
  7105 ;; Hardware stack levels used:    1
  7106 ;; This function calls:
  7107 ;;		Nothing
  7108 ;; This function is called by:
  7109 ;;		_i2c_int_handler
  7110 ;; This function uses a non-reentrant model
  7111 ;;
  7112                           
  7113                           	psect	text41
  7114  001228                     __ptext41:
  7115                           	opt stack 0
  7116  001228                     _handle_start:
  7117                           	opt stack 21
  7118                           
  7119                           ; BSR set to: 0
  7120                           ;incstack = 0
  7121                           ;handle_start@data_read stored from wreg
  7122  001228  CFE8 F017          	movff	wreg,handle_start@data_read
  7123                           
  7124                           ;my_i2c.c: 43: ic_ptr->event_count = 1;
  7125  00122C  0100               	movlb	0	; () banked
  7126  00122E  EE20 F00B          	lfsr	2,11
  7127  001232  0100               	movlb	0	; () banked
  7128  001234  51C3               	movf	_ic_ptr& (0+255),w,b
  7129  001236  26D9               	addwf	fsr2l,f,c
  7130  001238  0100               	movlb	0	; () banked
  7131  00123A  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7132  00123C  22DA               	addwfc	fsr2h,f,c
  7133  00123E  0E01               	movlw	1
  7134  001240  6EDF               	movwf	indf2,c
  7135                           
  7136                           ;my_i2c.c: 44: ic_ptr->buflen = 0;
  7137  001242  0100               	movlb	0	; () banked
  7138  001244  EE20 F00A          	lfsr	2,10
  7139  001248  0100               	movlb	0	; () banked
  7140  00124A  51C3               	movf	_ic_ptr& (0+255),w,b
  7141  00124C  26D9               	addwf	fsr2l,f,c
  7142  00124E  0100               	movlb	0	; () banked
  7143  001250  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7144  001252  22DA               	addwfc	fsr2h,f,c
  7145  001254  0E00               	movlw	0
  7146  001256  6EDF               	movwf	indf2,c
  7147                           
  7148                           ; BSR set to: 0
  7149                           ;my_i2c.c: 46: if (data_read) {
  7150  001258  5017               	movf	handle_start@data_read,w,c
  7151  00125A  B4D8               	btfsc	status,2,c
  7152  00125C  D03D               	goto	i2l3487
  7153                           
  7154                           ; BSR set to: 0
  7155                           ;my_i2c.c: 47: if (SSPSTATbits.D_A == 1) {
  7156  00125E  AAC7               	btfss	4039,5,c	;volatile
  7157  001260  D021               	goto	i2l302
  7158                           
  7159                           ; BSR set to: 0
  7160                           ;my_i2c.c: 50: ic_ptr->status = 0x5;
  7161  001262  0100               	movlb	0	; () banked
  7162  001264  EE20 F00C          	lfsr	2,12
  7163  001268  0100               	movlb	0	; () banked
  7164  00126A  51C3               	movf	_ic_ptr& (0+255),w,b
  7165  00126C  26D9               	addwf	fsr2l,f,c
  7166  00126E  0100               	movlb	0	; () banked
  7167  001270  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7168  001272  22DA               	addwfc	fsr2h,f,c
  7169  001274  0E05               	movlw	5
  7170  001276  6EDF               	movwf	indf2,c
  7171                           
  7172                           ;my_i2c.c: 51: ic_ptr->error_count++;
  7173  001278  0100               	movlb	0	; () banked
  7174  00127A  EE20 F00E          	lfsr	2,14
  7175  00127E  0100               	movlb	0	; () banked
  7176  001280  51C3               	movf	_ic_ptr& (0+255),w,b
  7177  001282  26D9               	addwf	fsr2l,f,c
  7178  001284  0100               	movlb	0	; () banked
  7179  001286  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7180  001288  22DA               	addwfc	fsr2h,f,c
  7181  00128A  2ADF               	incf	indf2,f,c
  7182                           
  7183                           ;my_i2c.c: 52: ic_ptr->error_code = 0x5;
  7184  00128C  0100               	movlb	0	; () banked
  7185  00128E  EE20 F00D          	lfsr	2,13
  7186  001292  0100               	movlb	0	; () banked
  7187  001294  51C3               	movf	_ic_ptr& (0+255),w,b
  7188  001296  26D9               	addwf	fsr2l,f,c
  7189  001298  0100               	movlb	0	; () banked
  7190  00129A  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7191  00129C  22DA               	addwfc	fsr2h,f,c
  7192  00129E  0E05               	movlw	5
  7193  0012A0  6EDF               	movwf	indf2,c
  7194                           
  7195                           ;my_i2c.c: 53: } else {
  7196  0012A2  0012               	return	
  7197  0012A4                     i2l302:
  7198                           
  7199                           ; BSR set to: 0
  7200                           ;my_i2c.c: 54: if (SSPSTATbits.R_W == 1) {
  7201  0012A4  A4C7               	btfss	4039,2,c	;volatile
  7202  0012A6  D00C               	goto	i2l3485
  7203                           
  7204                           ; BSR set to: 0
  7205                           ;my_i2c.c: 55: ic_ptr->status = 0x8;
  7206  0012A8  0100               	movlb	0	; () banked
  7207  0012AA  EE20 F00C          	lfsr	2,12
  7208  0012AE  0100               	movlb	0	; () banked
  7209  0012B0  51C3               	movf	_ic_ptr& (0+255),w,b
  7210  0012B2  26D9               	addwf	fsr2l,f,c
  7211  0012B4  0100               	movlb	0	; () banked
  7212  0012B6  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7213  0012B8  22DA               	addwfc	fsr2h,f,c
  7214  0012BA  0E08               	movlw	8
  7215  0012BC  6EDF               	movwf	indf2,c
  7216                           
  7217                           ;my_i2c.c: 56: } else {
  7218  0012BE  0012               	return	
  7219  0012C0                     i2l3485:
  7220                           
  7221                           ; BSR set to: 0
  7222                           ;my_i2c.c: 57: ic_ptr->status = 0x7;
  7223  0012C0  0100               	movlb	0	; () banked
  7224  0012C2  EE20 F00C          	lfsr	2,12
  7225  0012C6  0100               	movlb	0	; () banked
  7226  0012C8  51C3               	movf	_ic_ptr& (0+255),w,b
  7227  0012CA  26D9               	addwf	fsr2l,f,c
  7228  0012CC  0100               	movlb	0	; () banked
  7229  0012CE  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7230  0012D0  22DA               	addwfc	fsr2h,f,c
  7231  0012D2  0E07               	movlw	7
  7232  0012D4  6EDF               	movwf	indf2,c
  7233  0012D6  0012               	return	
  7234  0012D8                     i2l3487:
  7235                           
  7236                           ; BSR set to: 0
  7237                           ;my_i2c.c: 61: ic_ptr->status = 0x6;
  7238  0012D8  0100               	movlb	0	; () banked
  7239  0012DA  EE20 F00C          	lfsr	2,12
  7240  0012DE  0100               	movlb	0	; () banked
  7241  0012E0  51C3               	movf	_ic_ptr& (0+255),w,b
  7242  0012E2  26D9               	addwf	fsr2l,f,c
  7243  0012E4  0100               	movlb	0	; () banked
  7244  0012E6  51C4               	movf	(_ic_ptr+1)& (0+255),w,b
  7245  0012E8  22DA               	addwfc	fsr2h,f,c
  7246  0012EA  0E06               	movlw	6
  7247  0012EC  6EDF               	movwf	indf2,c
  7248  0012EE  0012               	return	
  7249  0012F0                     __end_of_handle_start:
  7250                           	opt stack 0
  7251                           pclatu	equ	0xFFB
  7252                           pclath	equ	0xFFA
  7253                           tblptru	equ	0xFF8
  7254                           tblptrh	equ	0xFF7
  7255                           tblptrl	equ	0xFF6
  7256                           tablat	equ	0xFF5
  7257                           prodh	equ	0xFF4
  7258                           prodl	equ	0xFF3
  7259                           intcon	equ	0xFF2
  7260                           postinc0	equ	0xFEE
  7261                           fsr0h	equ	0xFEA
  7262                           fsr0l	equ	0xFE9
  7263                           wreg	equ	0xFE8
  7264                           indf1	equ	0xFE7
  7265                           postdec1	equ	0xFE5
  7266                           fsr1h	equ	0xFE2
  7267                           fsr1l	equ	0xFE1
  7268                           bsr	equ	0xFE0
  7269                           indf2	equ	0xFDF
  7270                           postinc2	equ	0xFDE
  7271                           postdec2	equ	0xFDD
  7272                           fsr2h	equ	0xFDA
  7273                           fsr2l	equ	0xFD9
  7274                           status	equ	0xFD8
  7275                           
  7276 ;; *************** function _ToMainHigh_sendmsg *****************
  7277 ;; Defined at:
  7278 ;;		line 126 in file "../src/messages.c"
  7279 ;; Parameters:    Size  Location     Type
  7280 ;;  length          1    wreg     unsigned char 
  7281 ;;  msgtype         1   44[COMRAM] unsigned char 
  7282 ;;  data            2   45[COMRAM] PTR void 
  7283 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), main@ic(28), 
  7284 ;; Auto vars:     Size  Location     Type
  7285 ;;  length          1   47[COMRAM] unsigned char 
  7286 ;; Return value:  Size  Location     Type
  7287 ;;                  1    wreg      char 
  7288 ;; Registers used:
  7289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7290 ;; Tracked objects:
  7291 ;;		On entry : 0/0
  7292 ;;		On exit  : 0/0
  7293 ;;		Unchanged: 0/0
  7294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7295 ;;      Params:         3       0       0       0       0
  7296 ;;      Locals:         1       0       0       0       0
  7297 ;;      Temps:          0       0       0       0       0
  7298 ;;      Totals:         4       0       0       0       0
  7299 ;;Total ram usage:        4 bytes
  7300 ;; Hardware stack levels used:    1
  7301 ;; Hardware stack levels required when called:    2
  7302 ;; This function calls:
  7303 ;;		i2_send_msg
  7304 ;; This function is called by:
  7305 ;;		_i2c_int_handler
  7306 ;; This function uses a non-reentrant model
  7307 ;;
  7308                           
  7309                           	psect	text42
  7310  001C2C                     __ptext42:
  7311                           	opt stack 0
  7312  001C2C                     _ToMainHigh_sendmsg:
  7313                           	opt stack 19
  7314                           
  7315                           ; BSR set to: 0
  7316                           ;incstack = 0
  7317                           ;ToMainHigh_sendmsg@length stored from wreg
  7318  001C2C  CFE8 F030          	movff	wreg,ToMainHigh_sendmsg@length
  7319                           
  7320                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7321                           ;	Return value of _ToMainHigh_sendmsg is never used
  7322  001C30  0101               	movlb	1	; () banked
  7323  001C32  0E01               	movlw	high _ToMainHigh_MQ
  7324  001C34  6E22               	movwf	i2send_msg@qptr+1,c
  7325  001C36  0101               	movlb	1	; () banked
  7326  001C38  0E6C               	movlw	low _ToMainHigh_MQ
  7327  001C3A  6E21               	movwf	i2send_msg@qptr,c
  7328  001C3C  C030  F023         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  7329  001C40  C02D  F024         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7330  001C44  C02F  F026         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7331  001C48  C02E  F025         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  7332  001C4C  EC78  F009         	call	i2_send_msg	;wreg free
  7333  001C50  0012               	return	
  7334  001C52                     __end_of_ToMainHigh_sendmsg:
  7335                           	opt stack 0
  7336                           pclatu	equ	0xFFB
  7337                           pclath	equ	0xFFA
  7338                           tblptru	equ	0xFF8
  7339                           tblptrh	equ	0xFF7
  7340                           tblptrl	equ	0xFF6
  7341                           tablat	equ	0xFF5
  7342                           prodh	equ	0xFF4
  7343                           prodl	equ	0xFF3
  7344                           intcon	equ	0xFF2
  7345                           postinc0	equ	0xFEE
  7346                           fsr0h	equ	0xFEA
  7347                           fsr0l	equ	0xFE9
  7348                           wreg	equ	0xFE8
  7349                           indf1	equ	0xFE7
  7350                           postdec1	equ	0xFE5
  7351                           fsr1h	equ	0xFE2
  7352                           fsr1l	equ	0xFE1
  7353                           bsr	equ	0xFE0
  7354                           indf2	equ	0xFDF
  7355                           postinc2	equ	0xFDE
  7356                           postdec2	equ	0xFDD
  7357                           fsr2h	equ	0xFDA
  7358                           fsr2l	equ	0xFD9
  7359                           status	equ	0xFD8
  7360                           
  7361 ;; *************** function i2_send_msg *****************
  7362 ;; Defined at:
  7363 ;;		line 24 in file "../src/messages.c"
  7364 ;; Parameters:    Size  Location     Type
  7365 ;;  qptr            2   32[COMRAM] PTR struct __msg_queue
  7366 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7367 ;;  length          1   34[COMRAM] unsigned char 
  7368 ;;  msgtype         1   35[COMRAM] unsigned char 
  7369 ;;  data            2   36[COMRAM] PTR void 
  7370 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), main@t1thread_data(2), main@ic(28), 
  7371 ;; Auto vars:     Size  Location     Type
  7372 ;;  send_msg        2   42[COMRAM] PTR struct __msg
  7373 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7374 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7375 ;;  send_msg        2   39[COMRAM] unsigned int 
  7376 ;;  send_msg        1   41[COMRAM] unsigned char 
  7377 ;; Return value:  Size  Location     Type
  7378 ;;                  1    wreg      char 
  7379 ;; Registers used:
  7380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7381 ;; Tracked objects:
  7382 ;;		On entry : 0/0
  7383 ;;		On exit  : 0/0
  7384 ;;		Unchanged: 0/0
  7385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7386 ;;      Params:         6       0       0       0       0
  7387 ;;      Locals:         5       0       0       0       0
  7388 ;;      Temps:          1       0       0       0       0
  7389 ;;      Totals:        12       0       0       0       0
  7390 ;;Total ram usage:       12 bytes
  7391 ;; Hardware stack levels used:    1
  7392 ;; Hardware stack levels required when called:    1
  7393 ;; This function calls:
  7394 ;;		i2_memcpy
  7395 ;; This function is called by:
  7396 ;;		_ToMainHigh_sendmsg
  7397 ;; This function uses a non-reentrant model
  7398 ;;
  7399                           
  7400                           	psect	text43
  7401  0012F0                     __ptext43:
  7402                           	opt stack 0
  7403  0012F0                     i2_send_msg:
  7404                           	opt stack 19
  7405                           
  7406                           ;messages.c: 25: unsigned char slot;
  7407                           ;messages.c: 27: msg *qmsg;
  7408                           ;messages.c: 28: size_t tlength = length;
  7409                           
  7410                           ;incstack = 0
  7411  0012F0  C023  F028         	movff	i2send_msg@length,i2send_msg@tlength
  7412  0012F4  6A29               	clrf	i2send_msg@tlength+1,c
  7413                           
  7414                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7415  0012F6  EE20 F034          	lfsr	2,52
  7416  0012FA  5021               	movf	i2send_msg@qptr,w,c
  7417  0012FC  26D9               	addwf	fsr2l,f,c
  7418  0012FE  5022               	movf	i2send_msg@qptr+1,w,c
  7419  001300  22DA               	addwfc	fsr2h,f,c
  7420  001302  50DF               	movf	indf2,w,c
  7421  001304  6E2A               	movwf	i2send_msg@slot,c
  7422                           
  7423                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7424  001306  502A               	movf	i2send_msg@slot,w,c
  7425  001308  0D0D               	mullw	13
  7426  00130A  50F3               	movf	prodl,w,c
  7427  00130C  2421               	addwf	i2send_msg@qptr,w,c
  7428  00130E  6E2B               	movwf	i2send_msg@qmsg,c
  7429  001310  50F4               	movf	prodh,w,c
  7430  001312  2022               	addwfc	i2send_msg@qptr+1,w,c
  7431  001314  6E2C               	movwf	i2send_msg@qmsg+1,c
  7432                           
  7433                           ;messages.c: 41: if (qmsg->full != 0) {
  7434  001316  C02B  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7435  00131A  C02C  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7436  00131E  50DF               	movf	indf2,w,c
  7437  001320  B4D8               	btfsc	status,2,c
  7438  001322  D002               	goto	i2l3551
  7439                           
  7440                           ;messages.c: 42: return (-1);
  7441  001324  0EFF               	movlw	255
  7442  001326  0012               	return	
  7443  001328                     i2l3551:
  7444                           
  7445                           ;messages.c: 43: }
  7446                           ;messages.c: 46: qmsg->length = length;
  7447  001328  EE20 F001          	lfsr	2,1
  7448  00132C  502B               	movf	i2send_msg@qmsg,w,c
  7449  00132E  26D9               	addwf	fsr2l,f,c
  7450  001330  502C               	movf	i2send_msg@qmsg+1,w,c
  7451  001332  22DA               	addwfc	fsr2h,f,c
  7452  001334  C023  FFDF         	movff	i2send_msg@length,indf2
  7453                           
  7454                           ;messages.c: 47: qmsg->msgtype = msgtype;
  7455  001338  EE20 F002          	lfsr	2,2
  7456  00133C  502B               	movf	i2send_msg@qmsg,w,c
  7457  00133E  26D9               	addwf	fsr2l,f,c
  7458  001340  502C               	movf	i2send_msg@qmsg+1,w,c
  7459  001342  22DA               	addwfc	fsr2h,f,c
  7460  001344  C024  FFDF         	movff	i2send_msg@msgtype,indf2
  7461                           
  7462                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  7463  001348  0E03               	movlw	3
  7464  00134A  242B               	addwf	i2send_msg@qmsg,w,c
  7465  00134C  6E17               	movwf	i2memcpy@d1,c
  7466  00134E  0E00               	movlw	0
  7467  001350  202C               	addwfc	i2send_msg@qmsg+1,w,c
  7468  001352  6E18               	movwf	i2memcpy@d1+1,c
  7469  001354  C026  F01A         	movff	i2send_msg@data+1,i2memcpy@s1+1
  7470  001358  C025  F019         	movff	i2send_msg@data,i2memcpy@s1
  7471  00135C  C028  F01B         	movff	i2send_msg@tlength,i2memcpy@n
  7472  001360  C029  F01C         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  7473  001364  EC08  F00D         	call	i2_memcpy	;wreg free
  7474                           
  7475                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  7476  001368  EE20 F034          	lfsr	2,52
  7477  00136C  5021               	movf	i2send_msg@qptr,w,c
  7478  00136E  26D9               	addwf	fsr2l,f,c
  7479  001370  5022               	movf	i2send_msg@qptr+1,w,c
  7480  001372  22DA               	addwfc	fsr2h,f,c
  7481  001374  EE10 F034          	lfsr	1,52
  7482  001378  5021               	movf	i2send_msg@qptr,w,c
  7483  00137A  26E1               	addwf	fsr1l,f,c
  7484  00137C  5022               	movf	i2send_msg@qptr+1,w,c
  7485  00137E  22E2               	addwfc	fsr1h,f,c
  7486  001380  50E7               	movf	indf1,w,c
  7487  001382  6E27               	movwf	??i2_send_msg& (0+255),c
  7488  001384  2827               	incf	??i2_send_msg,w,c
  7489  001386  0B03               	andlw	3
  7490  001388  6EDF               	movwf	indf2,c
  7491                           
  7492                           ;messages.c: 59: qmsg->full = 1;
  7493  00138A  C02B  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7494  00138E  C02C  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7495  001392  0E01               	movlw	1
  7496  001394  6EDF               	movwf	indf2,c
  7497                           
  7498                           ;messages.c: 60: return (1);
  7499  001396  0E01               	movlw	1
  7500  001398  0012               	return	
  7501  00139A                     __end_ofi2_send_msg:
  7502                           	opt stack 0
  7503                           pclatu	equ	0xFFB
  7504                           pclath	equ	0xFFA
  7505                           tblptru	equ	0xFF8
  7506                           tblptrh	equ	0xFF7
  7507                           tblptrl	equ	0xFF6
  7508                           tablat	equ	0xFF5
  7509                           prodh	equ	0xFF4
  7510                           prodl	equ	0xFF3
  7511                           intcon	equ	0xFF2
  7512                           postinc0	equ	0xFEE
  7513                           fsr0h	equ	0xFEA
  7514                           fsr0l	equ	0xFE9
  7515                           wreg	equ	0xFE8
  7516                           indf1	equ	0xFE7
  7517                           postdec1	equ	0xFE5
  7518                           fsr1h	equ	0xFE2
  7519                           fsr1l	equ	0xFE1
  7520                           bsr	equ	0xFE0
  7521                           indf2	equ	0xFDF
  7522                           postinc2	equ	0xFDE
  7523                           postdec2	equ	0xFDD
  7524                           fsr2h	equ	0xFDA
  7525                           fsr2l	equ	0xFD9
  7526                           status	equ	0xFD8
  7527                           
  7528 ;; *************** function i2_memcpy *****************
  7529 ;; Defined at:
  7530 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
  7531 ;; Parameters:    Size  Location     Type
  7532 ;;  d1              2   22[COMRAM] PTR void 
  7533 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7534 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7535 ;;		 -> main@msgbuffer(11), 
  7536 ;;  s1              2   24[COMRAM] PTR const void 
  7537 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7538 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7539 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  7540 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), main@ic(28), 
  7541 ;;  n               2   26[COMRAM] unsigned int 
  7542 ;; Auto vars:     Size  Location     Type
  7543 ;;  memcpy          2   30[COMRAM] PTR const unsigned char 
  7544 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7545 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7546 ;;		 -> NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  7547 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@t1thread_data(2), main@ic(28), 
  7548 ;;  memcpy          2   28[COMRAM] PTR unsigned char 
  7549 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7550 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7551 ;;		 -> main@msgbuffer(11), 
  7552 ;; Return value:  Size  Location     Type
  7553 ;;                  2   22[COMRAM] PTR void 
  7554 ;; Registers used:
  7555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7556 ;; Tracked objects:
  7557 ;;		On entry : 0/0
  7558 ;;		On exit  : 0/0
  7559 ;;		Unchanged: 0/0
  7560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7561 ;;      Params:         6       0       0       0       0
  7562 ;;      Locals:         4       0       0       0       0
  7563 ;;      Temps:          0       0       0       0       0
  7564 ;;      Totals:        10       0       0       0       0
  7565 ;;Total ram usage:       10 bytes
  7566 ;; Hardware stack levels used:    1
  7567 ;; This function calls:
  7568 ;;		Nothing
  7569 ;; This function is called by:
  7570 ;;		i2_send_msg
  7571 ;; This function uses a non-reentrant model
  7572 ;;
  7573                           
  7574                           	psect	text44
  7575  001A10                     __ptext44:
  7576                           	opt stack 0
  7577  001A10                     i2_memcpy:
  7578                           	opt stack 19
  7579                           
  7580                           ;incstack = 0
  7581  001A10  C01A  F020         	movff	i2memcpy@s1+1,i2memcpy@s+1
  7582  001A14  C019  F01F         	movff	i2memcpy@s1,i2memcpy@s
  7583  001A18  C018  F01E         	movff	i2memcpy@d1+1,i2memcpy@d+1
  7584  001A1C  C017  F01D         	movff	i2memcpy@d1,i2memcpy@d
  7585  001A20  D00E               	goto	i2l3583
  7586  001A22                     i2l3577:
  7587  001A22  C01F  FFD9         	movff	i2memcpy@s,fsr2l
  7588  001A26  C020  FFDA         	movff	i2memcpy@s+1,fsr2h
  7589  001A2A  C01D  FFE1         	movff	i2memcpy@d,fsr1l
  7590  001A2E  C01E  FFE2         	movff	i2memcpy@d+1,fsr1h
  7591  001A32  CFDF FFE7          	movff	indf2,indf1
  7592  001A36  4A1F               	infsnz	i2memcpy@s,f,c
  7593  001A38  2A20               	incf	i2memcpy@s+1,f,c
  7594  001A3A  4A1D               	infsnz	i2memcpy@d,f,c
  7595  001A3C  2A1E               	incf	i2memcpy@d+1,f,c
  7596  001A3E                     i2l3583:
  7597  001A3E  061B               	decf	i2memcpy@n,f,c
  7598  001A40  A0D8               	btfss	status,0,c
  7599  001A42  061C               	decf	i2memcpy@n+1,f,c
  7600  001A44  281B               	incf	i2memcpy@n& (0+255),w,c
  7601  001A46  B4D8               	btfsc	status,2,c
  7602  001A48  281C               	incf	(i2memcpy@n+1)& (0+255),w,c
  7603  001A4A  B4D8               	btfsc	status,2,c
  7604                           
  7605                           ;	Return value of i2_memcpy is never used
  7606  001A4C  0012               	return	
  7607  001A4E  D7E9               	goto	i2l3577
  7608  001A50                     __end_ofi2_memcpy:
  7609                           	opt stack 0
  7610                           pclatu	equ	0xFFB
  7611                           pclath	equ	0xFFA
  7612                           tblptru	equ	0xFF8
  7613                           tblptrh	equ	0xFF7
  7614                           tblptrl	equ	0xFF6
  7615                           tablat	equ	0xFF5
  7616                           prodh	equ	0xFF4
  7617                           prodl	equ	0xFF3
  7618                           intcon	equ	0xFF2
  7619                           postinc0	equ	0xFEE
  7620                           fsr0h	equ	0xFEA
  7621                           fsr0l	equ	0xFE9
  7622                           wreg	equ	0xFE8
  7623                           indf1	equ	0xFE7
  7624                           postdec1	equ	0xFE5
  7625                           fsr1h	equ	0xFE2
  7626                           fsr1l	equ	0xFE1
  7627                           bsr	equ	0xFE0
  7628                           indf2	equ	0xFDF
  7629                           postinc2	equ	0xFDE
  7630                           postdec2	equ	0xFDD
  7631                           fsr2h	equ	0xFDA
  7632                           fsr2l	equ	0xFD9
  7633                           status	equ	0xFD8
  7634                           
  7635 ;; *************** function _SleepIfOkay *****************
  7636 ;; Defined at:
  7637 ;;		line 228 in file "../src/messages.c"
  7638 ;; Parameters:    Size  Location     Type
  7639 ;;		None
  7640 ;; Auto vars:     Size  Location     Type
  7641 ;;		None
  7642 ;; Return value:  Size  Location     Type
  7643 ;;		None               void
  7644 ;; Registers used:
  7645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7646 ;; Tracked objects:
  7647 ;;		On entry : 0/0
  7648 ;;		On exit  : 0/0
  7649 ;;		Unchanged: 0/0
  7650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7651 ;;      Params:         0       0       0       0       0
  7652 ;;      Locals:         0       0       0       0       0
  7653 ;;      Temps:          0       0       0       0       0
  7654 ;;      Totals:         0       0       0       0       0
  7655 ;;Total ram usage:        0 bytes
  7656 ;; Hardware stack levels used:    1
  7657 ;; Hardware stack levels required when called:    2
  7658 ;; This function calls:
  7659 ;;		_enter_sleep_mode
  7660 ;;		i2_check_msg
  7661 ;;		i2_in_high_int
  7662 ;;		i2_in_low_int
  7663 ;; This function is called by:
  7664 ;;		_InterruptHandlerHigh
  7665 ;; This function uses a non-reentrant model
  7666 ;;
  7667                           
  7668                           	psect	text45
  7669  0018B4                     __ptext45:
  7670                           	opt stack 0
  7671  0018B4                     _SleepIfOkay:
  7672                           	opt stack 20
  7673                           
  7674                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  7675                           
  7676                           ;incstack = 0
  7677  0018B4  6657               	tstfsz	_MQ_Main_Willing_to_block,c
  7678  0018B6  D001               	goto	i2l2295
  7679  0018B8  0012               	return	
  7680  0018BA                     i2l2295:
  7681                           
  7682                           ;messages.c: 232: }
  7683                           ;messages.c: 235: if (in_low_int()) {
  7684  0018BA  EC98  F00D         	call	i2_in_low_int	;wreg free
  7685  0018BE  501A               	movf	?i2_in_low_int+1,w,c
  7686  0018C0  1019               	iorwf	?i2_in_low_int,w,c
  7687  0018C2  A4D8               	btfss	status,2,c
  7688  0018C4  0012               	return	
  7689                           
  7690                           ;messages.c: 237: }
  7691                           ;messages.c: 240: if (!in_high_int()) {
  7692                           
  7693                           ;messages.c: 236: return;
  7694  0018C6  EC8D  F00E         	call	i2_in_high_int	;wreg free
  7695  0018CA  5018               	movf	?i2_in_high_int+1,w,c
  7696  0018CC  1017               	iorwf	?i2_in_high_int,w,c
  7697  0018CE  B4D8               	btfsc	status,2,c
  7698  0018D0  0012               	return	
  7699                           
  7700                           ;messages.c: 242: }
  7701                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  7702                           
  7703                           ;messages.c: 241: return;
  7704  0018D2  0101               	movlb	1	; () banked
  7705  0018D4  0E01               	movlw	high _ToMainHigh_MQ
  7706  0018D6  6E18               	movwf	i2check_msg@qptr+1,c
  7707  0018D8  0101               	movlb	1	; () banked
  7708  0018DA  0E6C               	movlw	low _ToMainHigh_MQ
  7709  0018DC  6E17               	movwf	i2check_msg@qptr,c
  7710  0018DE  EC29  F00E         	call	i2_check_msg	;wreg free
  7711  0018E2  0900               	iorlw	0
  7712  0018E4  A4D8               	btfss	status,2,c
  7713  0018E6  0012               	return	
  7714                           
  7715                           ;messages.c: 249: }
  7716                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  7717                           
  7718                           ;messages.c: 248: return;
  7719  0018E8  0101               	movlb	1	; () banked
  7720  0018EA  0E01               	movlw	high _ToMainLow_MQ
  7721  0018EC  6E18               	movwf	i2check_msg@qptr+1,c
  7722  0018EE  0101               	movlb	1	; () banked
  7723  0018F0  0EA2               	movlw	low _ToMainLow_MQ
  7724  0018F2  6E17               	movwf	i2check_msg@qptr,c
  7725  0018F4  EC29  F00E         	call	i2_check_msg	;wreg free
  7726  0018F8  0900               	iorlw	0
  7727  0018FA  B4D8               	btfsc	status,2,c
  7728                           
  7729                           ;messages.c: 252: }
  7730                           ;messages.c: 253: enter_sleep_mode();
  7731                           
  7732                           ;messages.c: 251: return;
  7733  0018FC  EC97  F00E         	call	_enter_sleep_mode	;wreg free
  7734  001900  0012               	return	
  7735  001902                     __end_of_SleepIfOkay:
  7736                           	opt stack 0
  7737                           pclatu	equ	0xFFB
  7738                           pclath	equ	0xFFA
  7739                           tblptru	equ	0xFF8
  7740                           tblptrh	equ	0xFF7
  7741                           tblptrl	equ	0xFF6
  7742                           tablat	equ	0xFF5
  7743                           prodh	equ	0xFF4
  7744                           prodl	equ	0xFF3
  7745                           intcon	equ	0xFF2
  7746                           postinc0	equ	0xFEE
  7747                           fsr0h	equ	0xFEA
  7748                           fsr0l	equ	0xFE9
  7749                           wreg	equ	0xFE8
  7750                           indf1	equ	0xFE7
  7751                           postdec1	equ	0xFE5
  7752                           fsr1h	equ	0xFE2
  7753                           fsr1l	equ	0xFE1
  7754                           bsr	equ	0xFE0
  7755                           indf2	equ	0xFDF
  7756                           postinc2	equ	0xFDE
  7757                           postdec2	equ	0xFDD
  7758                           fsr2h	equ	0xFDA
  7759                           fsr2l	equ	0xFD9
  7760                           status	equ	0xFD8
  7761                           
  7762 ;; *************** function i2_in_low_int *****************
  7763 ;; Defined at:
  7764 ;;		line 32 in file "../src/interrupts.c"
  7765 ;; Parameters:    Size  Location     Type
  7766 ;;		None
  7767 ;; Auto vars:     Size  Location     Type
  7768 ;;		None
  7769 ;; Return value:  Size  Location     Type
  7770 ;;                  2   24[COMRAM] int 
  7771 ;; Registers used:
  7772 ;;		wreg, status,2, status,0, cstack
  7773 ;; Tracked objects:
  7774 ;;		On entry : 0/0
  7775 ;;		On exit  : 0/0
  7776 ;;		Unchanged: 0/0
  7777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7778 ;;      Params:         2       0       0       0       0
  7779 ;;      Locals:         0       0       0       0       0
  7780 ;;      Temps:          0       0       0       0       0
  7781 ;;      Totals:         2       0       0       0       0
  7782 ;;Total ram usage:        2 bytes
  7783 ;; Hardware stack levels used:    1
  7784 ;; Hardware stack levels required when called:    1
  7785 ;; This function calls:
  7786 ;;		i2_in_high_int
  7787 ;; This function is called by:
  7788 ;;		_SleepIfOkay
  7789 ;; This function uses a non-reentrant model
  7790 ;;
  7791                           
  7792                           	psect	text46
  7793  001B30                     __ptext46:
  7794                           	opt stack 0
  7795  001B30                     i2_in_low_int:
  7796                           	opt stack 20
  7797                           
  7798                           ;interrupts.c: 34: if (INTCONbits.GIEL == 1) {
  7799                           
  7800                           ;incstack = 0
  7801  001B30  ACF2               	btfss	intcon,6,c	;volatile
  7802  001B32  D005               	goto	i2l2787
  7803                           
  7804                           ;interrupts.c: 35: return (0);
  7805  001B34  0E00               	movlw	0
  7806  001B36  6E1A               	movwf	?i2_in_low_int+1,c
  7807  001B38  0E00               	movlw	0
  7808  001B3A  6E19               	movwf	?i2_in_low_int,c
  7809  001B3C  0012               	return	
  7810  001B3E                     i2l2787:
  7811  001B3E  EC8D  F00E         	call	i2_in_high_int	;wreg free
  7812  001B42  5018               	movf	?i2_in_high_int+1,w,c
  7813  001B44  1017               	iorwf	?i2_in_high_int,w,c
  7814  001B46  B4D8               	btfsc	status,2,c
  7815  001B48  D005               	goto	i2l2795
  7816                           
  7817                           ;interrupts.c: 37: return (0);
  7818  001B4A  0E00               	movlw	0
  7819  001B4C  6E1A               	movwf	?i2_in_low_int+1,c
  7820  001B4E  0E00               	movlw	0
  7821  001B50  6E19               	movwf	?i2_in_low_int,c
  7822  001B52  0012               	return	
  7823  001B54                     i2l2795:
  7824                           
  7825                           ;interrupts.c: 39: return (1);
  7826  001B54  0E00               	movlw	0
  7827  001B56  6E1A               	movwf	?i2_in_low_int+1,c
  7828  001B58  0E01               	movlw	1
  7829  001B5A  6E19               	movwf	?i2_in_low_int,c
  7830  001B5C  0012               	return	
  7831  001B5E                     __end_ofi2_in_low_int:
  7832                           	opt stack 0
  7833                           pclatu	equ	0xFFB
  7834                           pclath	equ	0xFFA
  7835                           tblptru	equ	0xFF8
  7836                           tblptrh	equ	0xFF7
  7837                           tblptrl	equ	0xFF6
  7838                           tablat	equ	0xFF5
  7839                           prodh	equ	0xFF4
  7840                           prodl	equ	0xFF3
  7841                           intcon	equ	0xFF2
  7842                           postinc0	equ	0xFEE
  7843                           fsr0h	equ	0xFEA
  7844                           fsr0l	equ	0xFE9
  7845                           wreg	equ	0xFE8
  7846                           indf1	equ	0xFE7
  7847                           postdec1	equ	0xFE5
  7848                           fsr1h	equ	0xFE2
  7849                           fsr1l	equ	0xFE1
  7850                           bsr	equ	0xFE0
  7851                           indf2	equ	0xFDF
  7852                           postinc2	equ	0xFDE
  7853                           postdec2	equ	0xFDD
  7854                           fsr2h	equ	0xFDA
  7855                           fsr2l	equ	0xFD9
  7856                           status	equ	0xFD8
  7857                           
  7858 ;; *************** function i2_in_high_int *****************
  7859 ;; Defined at:
  7860 ;;		line 23 in file "../src/interrupts.c"
  7861 ;; Parameters:    Size  Location     Type
  7862 ;;		None
  7863 ;; Auto vars:     Size  Location     Type
  7864 ;;		None
  7865 ;; Return value:  Size  Location     Type
  7866 ;;                  2   22[COMRAM] int 
  7867 ;; Registers used:
  7868 ;;		wreg, status,2
  7869 ;; Tracked objects:
  7870 ;;		On entry : 0/0
  7871 ;;		On exit  : 0/0
  7872 ;;		Unchanged: 0/0
  7873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7874 ;;      Params:         2       0       0       0       0
  7875 ;;      Locals:         0       0       0       0       0
  7876 ;;      Temps:          0       0       0       0       0
  7877 ;;      Totals:         2       0       0       0       0
  7878 ;;Total ram usage:        2 bytes
  7879 ;; Hardware stack levels used:    1
  7880 ;; This function calls:
  7881 ;;		Nothing
  7882 ;; This function is called by:
  7883 ;;		_SleepIfOkay
  7884 ;;		i2_in_low_int
  7885 ;; This function uses a non-reentrant model
  7886 ;;
  7887                           
  7888                           	psect	text47
  7889  001D1A                     __ptext47:
  7890                           	opt stack 0
  7891  001D1A                     i2_in_high_int:
  7892                           	opt stack 20
  7893                           
  7894                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  7895                           
  7896                           ;incstack = 0
  7897  001D1A  0E00               	movlw	0
  7898  001D1C  AEF2               	btfss	intcon,7,c	;volatile
  7899  001D1E  0E01               	movlw	1
  7900  001D20  6E17               	movwf	?i2_in_high_int,c
  7901  001D22  6A18               	clrf	?i2_in_high_int+1,c
  7902  001D24  0012               	return	
  7903  001D26                     __end_ofi2_in_high_int:
  7904                           	opt stack 0
  7905                           pclatu	equ	0xFFB
  7906                           pclath	equ	0xFFA
  7907                           tblptru	equ	0xFF8
  7908                           tblptrh	equ	0xFF7
  7909                           tblptrl	equ	0xFF6
  7910                           tablat	equ	0xFF5
  7911                           prodh	equ	0xFF4
  7912                           prodl	equ	0xFF3
  7913                           intcon	equ	0xFF2
  7914                           postinc0	equ	0xFEE
  7915                           fsr0h	equ	0xFEA
  7916                           fsr0l	equ	0xFE9
  7917                           wreg	equ	0xFE8
  7918                           indf1	equ	0xFE7
  7919                           postdec1	equ	0xFE5
  7920                           fsr1h	equ	0xFE2
  7921                           fsr1l	equ	0xFE1
  7922                           bsr	equ	0xFE0
  7923                           indf2	equ	0xFDF
  7924                           postinc2	equ	0xFDE
  7925                           postdec2	equ	0xFDD
  7926                           fsr2h	equ	0xFDA
  7927                           fsr2l	equ	0xFD9
  7928                           status	equ	0xFD8
  7929                           
  7930 ;; *************** function i2_check_msg *****************
  7931 ;; Defined at:
  7932 ;;		line 222 in file "../src/messages.c"
  7933 ;; Parameters:    Size  Location     Type
  7934 ;;  qptr            2   22[COMRAM] PTR struct __msg_queue
  7935 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7936 ;; Auto vars:     Size  Location     Type
  7937 ;;		None
  7938 ;; Return value:  Size  Location     Type
  7939 ;;                  1    wreg      unsigned char 
  7940 ;; Registers used:
  7941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7942 ;; Tracked objects:
  7943 ;;		On entry : 0/0
  7944 ;;		On exit  : 0/0
  7945 ;;		Unchanged: 0/0
  7946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7947 ;;      Params:         2       0       0       0       0
  7948 ;;      Locals:         0       0       0       0       0
  7949 ;;      Temps:          1       0       0       0       0
  7950 ;;      Totals:         3       0       0       0       0
  7951 ;;Total ram usage:        3 bytes
  7952 ;; Hardware stack levels used:    1
  7953 ;; This function calls:
  7954 ;;		Nothing
  7955 ;; This function is called by:
  7956 ;;		_SleepIfOkay
  7957 ;; This function uses a non-reentrant model
  7958 ;;
  7959                           
  7960                           	psect	text48
  7961  001C52                     __ptext48:
  7962                           	opt stack 0
  7963  001C52                     i2_check_msg:
  7964                           	opt stack 21
  7965                           
  7966                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  7967                           
  7968                           ;incstack = 0
  7969  001C52  EE20 F035          	lfsr	2,53
  7970  001C56  5017               	movf	i2check_msg@qptr,w,c
  7971  001C58  26D9               	addwf	fsr2l,f,c
  7972  001C5A  5018               	movf	i2check_msg@qptr+1,w,c
  7973  001C5C  22DA               	addwfc	fsr2h,f,c
  7974  001C5E  50DF               	movf	indf2,w,c
  7975  001C60  6E19               	movwf	??i2_check_msg& (0+255),c
  7976  001C62  5019               	movf	??i2_check_msg,w,c
  7977  001C64  0D0D               	mullw	13
  7978  001C66  50F3               	movf	prodl,w,c
  7979  001C68  2417               	addwf	i2check_msg@qptr,w,c
  7980  001C6A  6ED9               	movwf	fsr2l,c
  7981  001C6C  50F4               	movf	prodh,w,c
  7982  001C6E  2018               	addwfc	i2check_msg@qptr+1,w,c
  7983  001C70  6EDA               	movwf	fsr2h,c
  7984  001C72  50DF               	movf	indf2,w,c
  7985  001C74  0012               	return	
  7986  001C76                     __end_ofi2_check_msg:
  7987                           	opt stack 0
  7988                           pclatu	equ	0xFFB
  7989                           pclath	equ	0xFFA
  7990                           tblptru	equ	0xFF8
  7991                           tblptrh	equ	0xFF7
  7992                           tblptrl	equ	0xFF6
  7993                           tablat	equ	0xFF5
  7994                           prodh	equ	0xFF4
  7995                           prodl	equ	0xFF3
  7996                           intcon	equ	0xFF2
  7997                           postinc0	equ	0xFEE
  7998                           fsr0h	equ	0xFEA
  7999                           fsr0l	equ	0xFE9
  8000                           wreg	equ	0xFE8
  8001                           indf1	equ	0xFE7
  8002                           postdec1	equ	0xFE5
  8003                           fsr1h	equ	0xFE2
  8004                           fsr1l	equ	0xFE1
  8005                           bsr	equ	0xFE0
  8006                           indf2	equ	0xFDF
  8007                           postinc2	equ	0xFDE
  8008                           postdec2	equ	0xFDD
  8009                           fsr2h	equ	0xFDA
  8010                           fsr2l	equ	0xFD9
  8011                           status	equ	0xFD8
  8012                           
  8013 ;; *************** function _enter_sleep_mode *****************
  8014 ;; Defined at:
  8015 ;;		line 202 in file "../src/messages.c"
  8016 ;; Parameters:    Size  Location     Type
  8017 ;;		None
  8018 ;; Auto vars:     Size  Location     Type
  8019 ;;		None
  8020 ;; Return value:  Size  Location     Type
  8021 ;;		None               void
  8022 ;; Registers used:
  8023 ;;		None
  8024 ;; Tracked objects:
  8025 ;;		On entry : 0/0
  8026 ;;		On exit  : 0/0
  8027 ;;		Unchanged: 0/0
  8028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8029 ;;      Params:         0       0       0       0       0
  8030 ;;      Locals:         0       0       0       0       0
  8031 ;;      Temps:          0       0       0       0       0
  8032 ;;      Totals:         0       0       0       0       0
  8033 ;;Total ram usage:        0 bytes
  8034 ;; Hardware stack levels used:    1
  8035 ;; This function calls:
  8036 ;;		Nothing
  8037 ;; This function is called by:
  8038 ;;		_SleepIfOkay
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042                           	psect	text49
  8043  001D2E                     __ptext49:
  8044                           	opt stack 0
  8045  001D2E                     _enter_sleep_mode:
  8046                           	opt stack 21
  8047                           
  8048                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8049                           
  8050                           ;incstack = 0
  8051  001D2E  8ED3               	bsf	4051,7,c	;volatile
  8052  001D30  0003               	sleep		;# 
  8053  001D32  0012               	return	
  8054  001D34                     __end_of_enter_sleep_mode:
  8055                           	opt stack 0
  8056                           pclatu	equ	0xFFB
  8057                           pclath	equ	0xFFA
  8058                           tblptru	equ	0xFF8
  8059                           tblptrh	equ	0xFF7
  8060                           tblptrl	equ	0xFF6
  8061                           tablat	equ	0xFF5
  8062                           prodh	equ	0xFF4
  8063                           prodl	equ	0xFF3
  8064                           intcon	equ	0xFF2
  8065                           postinc0	equ	0xFEE
  8066                           fsr0h	equ	0xFEA
  8067                           fsr0l	equ	0xFE9
  8068                           wreg	equ	0xFE8
  8069                           indf1	equ	0xFE7
  8070                           postdec1	equ	0xFE5
  8071                           fsr1h	equ	0xFE2
  8072                           fsr1l	equ	0xFE1
  8073                           bsr	equ	0xFE0
  8074                           indf2	equ	0xFDF
  8075                           postinc2	equ	0xFDE
  8076                           postdec2	equ	0xFDD
  8077                           fsr2h	equ	0xFDA
  8078                           fsr2l	equ	0xFD9
  8079                           status	equ	0xFD8
  8080                           pclatu	equ	0xFFB
  8081                           pclath	equ	0xFFA
  8082                           tblptru	equ	0xFF8
  8083                           tblptrh	equ	0xFF7
  8084                           tblptrl	equ	0xFF6
  8085                           tablat	equ	0xFF5
  8086                           prodh	equ	0xFF4
  8087                           prodl	equ	0xFF3
  8088                           intcon	equ	0xFF2
  8089                           postinc0	equ	0xFEE
  8090                           fsr0h	equ	0xFEA
  8091                           fsr0l	equ	0xFE9
  8092                           wreg	equ	0xFE8
  8093                           indf1	equ	0xFE7
  8094                           postdec1	equ	0xFE5
  8095                           fsr1h	equ	0xFE2
  8096                           fsr1l	equ	0xFE1
  8097                           bsr	equ	0xFE0
  8098                           indf2	equ	0xFDF
  8099                           postinc2	equ	0xFDE
  8100                           postdec2	equ	0xFDD
  8101                           fsr2h	equ	0xFDA
  8102                           fsr2l	equ	0xFD9
  8103                           status	equ	0xFD8
  8104                           
  8105                           	psect	rparam
  8106  0000                     pclatu	equ	0xFFB
  8107                           pclath	equ	0xFFA
  8108                           tblptru	equ	0xFF8
  8109                           tblptrh	equ	0xFF7
  8110                           tblptrl	equ	0xFF6
  8111                           tablat	equ	0xFF5
  8112                           prodh	equ	0xFF4
  8113                           prodl	equ	0xFF3
  8114                           intcon	equ	0xFF2
  8115                           postinc0	equ	0xFEE
  8116                           fsr0h	equ	0xFEA
  8117                           fsr0l	equ	0xFE9
  8118                           wreg	equ	0xFE8
  8119                           indf1	equ	0xFE7
  8120                           postdec1	equ	0xFE5
  8121                           fsr1h	equ	0xFE2
  8122                           fsr1l	equ	0xFE1
  8123                           bsr	equ	0xFE0
  8124                           indf2	equ	0xFDF
  8125                           postinc2	equ	0xFDE
  8126                           postdec2	equ	0xFDD
  8127                           fsr2h	equ	0xFDA
  8128                           fsr2l	equ	0xFD9
  8129                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    2
    Data        13
    BSS         264
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     50     104
    BANK0           128     60      71
    BANK1           256      0     216
    BANK2           256     62      62
    BANK3           256      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK2[2]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK2[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK2[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK2[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@t1thread_data(BANK2[2]), main@ic(BANK2[28]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@t1thread_data(BANK2[2]), main@ic(BANK2[28]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    uart_retrieve_buffer@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 12
		 -> main@uc(BANK2[12]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 12
		 -> NULL(NULL[0]), main@uc(BANK2[12]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK2[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 5
		 -> motorEncoderBuffer(BANK0[5]), readMessages@buf(COMRAM[4]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK2[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK2[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK2[11]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@t1thread_data(BANK2[2]), main@ic(BANK2[28]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->_WriteTimer0
    _i2c_int_handler->_ToMainHigh_sendmsg
    _readMessages->i2_start_i2c_slave_reply
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_timer1_int_handler
    _uart_send_int_handler->_WriteUSART
    _timer1_int_handler->i1_WriteTimer1

Critical Paths under _main in BANK0

    _main->_timer1_lthread
    _uart_lthread->_start_i2c_slave_reply
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                66    66      0   11876
                                             59 BANK0      1     1      0
                                              0 BANK2     62    62      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
                        _WriteTimer1
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         9     1      8     922
                                             28 BANK0      9     1      8
              _start_i2c_slave_reply
               _uart_retrieve_buffer
 ---------------------------------------------------------------------------------
 (2) _uart_retrieve_buffer                                 4     0      4     285
                                             23 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _start_i2c_slave_reply                                5     3      2     188
                                             23 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    2850
                                             49 BANK0     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2161
                                             45 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1938
                                             33 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     294
                                             23 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      96
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     452
                                             27 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     452
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     283
                                             29 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             27 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             25 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             23 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     252
                                             23 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _WriteTimer1                                          4     2      2     199
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2332
                                             47 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2332
                                             47 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2109
                                             33 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                             23 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     375
                                             23 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0     297
                                              5 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_send_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_send_int_handler                                1     1      0      31
                                              1 COMRAM     1     1      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (7) _WriteUSART                                           1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   1     1      0     266
                                              4 COMRAM     1     1      0
                      i1_WriteTimer1
 ---------------------------------------------------------------------------------
 (7) i1_WriteTimer1                                        4     2      2     266
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _InterruptHandlerHigh                                14    14      0    4102
                                              9 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (9) _timer0_int_handler                                   1     1      0      88
                                             26 COMRAM     1     1      0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (10) _WriteTimer0                                         4     2      2      88
                                             22 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _i2c_int_handler                                     11    11      0    3778
                                             48 COMRAM     2     2      0
                                              0 BANK0      9     9      0
                 _ToMainHigh_sendmsg
                       _handle_start
                       _readMessages
 ---------------------------------------------------------------------------------
 (10) _readMessages                                        5     5      0     471
                                             27 COMRAM     5     5      0
            i2_start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (11) i2_start_i2c_slave_reply                             5     3      2     318
                                             22 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (10) _handle_start                                        1     1      0      31
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _ToMainHigh_sendmsg                                  4     1      3    2700
                                             44 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (11) i2_send_msg                                         12     6      6    2347
                                             32 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) i2_memcpy                                           10     4      6     796
                                             22 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (9) _SleepIfOkay                                          0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (10) i2_in_low_int                                        2     0      2       0
                                             24 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (11) i2_in_high_int                                       2     0      2       0
                                             22 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) i2_check_msg                                         3     1      2     236
                                             22 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (10) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _WriteTimer1
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread
     _start_i2c_slave_reply
     _uart_retrieve_buffer

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     i1_WriteTimer1
   _uart_send_int_handler
     _WriteUSART

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
     _readMessages
       i2_start_i2c_slave_reply
   _timer0_int_handler
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     3E      3E       8       24.2%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      D8       6       84.4%
BITBANK0            80      0       0       3        0.0%
BANK0               80     3C      47       4       55.5%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     32      68       1       81.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C5      11        0.0%
DATA                 0      0     1C5      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Apr 07 18:30:21 2014

                main@uthread_data 020E          _MQ_Main_Willing_to_block 0057  
                     _SSPSTATbits 000FC7         __end_of_ToMainLow_recvmsg 19CE  
                              bsr 000FE0                      __CFG_CP0$OFF 000000  
                             l520 1B84                               l504 11B0  
                             l519 1B82                               l543 1AA6  
                             l545 1ABE                               l546 1AC0  
                             l582 13EE                               l583 13F0  
                             l584 13FE                               l585 1400  
                             l809 1C7A                               l578 13CE  
            __size_of_WriteTimer0 0012              __size_of_WriteTimer1 0012  
                  _FromMainLow_MQ 0136                               wreg 000FE8  
                    __CFG_IESO$ON 000000                      ?_in_high_int 0097  
                ??_init_uart_recv 0099                       main@config1 020B  
                     main@config2 020C                              l1121 153A  
                            l3201 1AA8                              l3301 163C  
                            l3151 0BE0                              l3143 0B90  
                            l3137 0AEC                              l3145 0BA2  
                            l3129 0AAA                              l3251 13D0  
                            l3243 13BA                              l3411 0CAE  
                            l3155 0C32                              l3139 0B3E  
                            l3427 0D74                              l3531 14F2  
                            l3515 1118                              l3391 182A  
                            l3295 1610                              l3359 168C  
                            l3535 1526                              l3527 14D8  
                            l2905 1938                              l3289 15E4  
                            l3377 0EE2                              l3529 14EA  
                            l3465 0D94                              l3397 184E  
                            l3469 0E18                              l2919 197C  
                            l2897 1916                              _LATA 000F89  
                            u2607 1C7C                              i1l53 0070  
                 _FromMainHigh_MQ 0100                     __CFG_FCMEN$ON 000000  
            _uart_retrieve_buffer 107E                              _buff 0047  
          ?_block_on_To_msgqueues 0001                              _main 09C4  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            indf1 000FE7                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                     main@msgtype 0221                              pclat 000FFA  
                     i2_check_msg 1C52                              prodh 000FF4  
                            prodl 000FF3             handle_start@data_read 0017  
                            start 00B6               i1WriteTimer1@timer1 0001  
                   __CFG_FOSC2$ON 000000                        i2_send_msg 12F0  
       ToMainHigh_recvmsg@msgtype 00AF                    send_msg@length 00A3  
   i2start_i2c_slave_reply@length 001B       __size_of_timer0_int_handler 002A  
                     _Delay1KTCYx 1C76                             ?_main 0001  
                   i1_WriteTimer1 1CE8                             _T0CON 000FD5  
                           _T1CON 000FCD                   __end_of___lwmod 1544  
                           i2l302 12A4                             i2l312 081E  
                           i2l314 04B0                             i2l340 079C  
                           i2l332 0670                             i2l318 04EE  
                           i2l346 0830                     _t0thread_data 0051  
                           _RCSTA 000FAB                             _TMR0H 000FD7  
                           _TMR1H 000FCF                             _TMR0L 000FD6  
                           _TMR1L 000FCE                             _SPBRG 000FAF  
                           _PORTB 000F81                             _TRISA 000F92  
                           _TXREG 000FAD                             _TXSTA 000FAC  
                      i2memcpy@d1 0017                        i2memcpy@s1 0019  
                    ?_init_queues 0001         __size_of_enter_sleep_mode 0006  
                 __end_of_in_main 198C        ToMainLow_recvmsg@maxlength 00B3  
         timer0_lthread@msgbuffer 009D           i2c_configure_slave@addr 0097  
                           tablat 000FF5             ?_uart_retrieve_buffer 0097  
                           status 000FD8                  __end_ofi2_memcpy 1A50  
                  WriteUSART@data 0001                   __initialization 1866  
                    __end_of_main 0C42       __size_of_timer1_int_handler 002A  
      __size_of_ToMainLow_recvmsg 0042             __size_ofi2_in_low_int 002E  
   __size_of_FromMainHigh_sendmsg 0036                    ?i1_WriteTimer1 0001  
                          ??_main 00BB                   send_msg@msgtype 00A4  
                   __activetblptr 000002                   send_msg@tlength 00A8  
            __end_of_handle_start 12F0                     ?_readMessages 0001  
                          i1l3501 1C9A                            i1l3601 0066  
                          i2l3023 0730                            i1l3591 1470  
                          i2l3017 06E0                            i2l3051 0834  
                          i2l3019 0722                            i2l3045 07F2  
                          i2l3057 0894                        _OpenTimer0 1B5E  
                      _OpenTimer1 1A8C                            i2l3075 09B4  
                          i2l3067 091E                    __CFG_WDTEN$OFF 000000  
                          i2l2295 18BA                            i2l3551 1328  
                          i2l3485 12C0                            i2l3565 0FA6  
                          i2l3583 1A3E                            i2l3487 12D8  
                          i2l2951 0492                            i2l2935 1588  
                          i2l3577 1A22                            i2l3569 101A  
                          i2l2929 157E                            i2l2795 1B54  
                          i2l2787 1B3E                            i2l2957 04A6  
                          i2l2975 0522                            i2l2993 05A2  
                          i2l2977 054E                            i2l2995 05E2  
                          i2l2987 058A       __end_of_i2c_configure_slave 1C2C  
                   ??_SleepIfOkay 001B                            _OSCCON 000FD3  
                          _SPBRGH 000FB0                            _SSPADD 000FC8  
                          _SSPBUF 000FC9    __size_of_start_i2c_slave_reply 010E  
   __end_of_start_i2c_slave_reply 0E86                timer0_lthread@tptr 0097  
                    i2_in_low_int 1B30                       ?i2_send_msg 0021  
                  __CFG_XINST$OFF 000000                __size_of_OpenUSART 0092  
                 _i2c_int_handler 0404                  OpenTimer0@config 0097  
                          _ic_ptr 00C3                         ??___lwmod 009B  
                 readMessages@buf 001D                     main@msgbuffer 0200  
                __end_of_init_i2c 1808                  OpenTimer1@config 0097  
                          _length 005A                            _memcpy 1808  
                          clear_0 186C                            clear_1 1878  
                          clear_2 1884                            _uc_ptr 00C5  
                          main@ic 0222                            _status 005B  
                          main@uc 0214                  __end_of_recv_msg 0D78  
     start_i2c_slave_reply@length 009B                         ??_in_main 009D  
                __end_of_send_msg 0F8A                      __pdataCOMRAM 005C  
                  ??_readMessages 001C                      __mediumconst 0000  
         i2c_int_handler@i2c_data 0086                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                     init_queue@i 009A          ?i2_start_i2c_slave_reply 0017  
        ToMainLow_recvmsg@msgtype 00AF              __size_of_in_high_int 0012  
          ??_uart_retrieve_buffer 009B                   __CFG_FOSC$HSPLL 000000  
                      __accesstop 0080           __end_of__initialization 18AA  
      __end_of_ToMainHigh_recvmsg 1A10        __end_of_ToMainHigh_sendmsg 1C52  
  __size_of_uart_send_int_handler 008E     __end_of_uart_send_int_handler 14BA  
     __end_of_init_timer1_lthread 1CC4               __end_of_SleepIfOkay 1902  
                      _WriteUSART 1C8C                    __pcstackCOMRAM 0001  
          __size_ofi2_in_high_int 000C                   ??i1_WriteTimer1 0003  
              __size_of_check_msg 0036     __size_of_InterruptHandlerHigh 15BE  
     __end_of_InterruptHandlerLow 00B6                         ?i2_memcpy 0017  
                   _ToMainHigh_MQ 016C                  _enter_sleep_mode 1D2E  
             __size_ofi2_send_msg 00AA              timer1_lthread@length 00B5  
              _motorEncoderBuffer 00BE                 __end_of_OpenUSART 142C  
                   check_msg@qptr 0097              timer1_lthread@retval 00BA  
         ??_block_on_To_msgqueues 009D              __size_of_init_queues 006E  
                      __pbssBANK0 00BC                        __pbssBANK1 0100  
                     ?_OpenTimer0 0001                       ?_OpenTimer1 0001  
         __end_of_i2c_int_handler 09C4                      ?i2_check_msg 0017  
              timer1_lthread@tptr 00B1                 recv_msg@maxlength 00A3  
                 recv_msg@msgtype 00A4                   recv_msg@tlength 00AB  
           __size_of_handle_start 00C8                      ?_Delay1KTCYx 0001  
                WriteTimer0@timer 0019                           ?_memcpy 0097  
                WriteTimer1@timer 0099                     ??_WriteTimer0 0019  
                   ??_WriteTimer1 0099           __size_of_timer0_lthread 0012  
         __size_of_timer1_lthread 0072   __end_ofi2_start_i2c_slave_reply 107E  
                      _bufferFlag 00BC                        ??i2_memcpy 001D  
           __end_of_circumference 0403        i2start_i2c_slave_reply@msg 0017  
                   i2_in_high_int 1D1A                           _SSPCON1 000FC6  
                         _SSPCON2 000FC5                           _SSPSTAT 000FC7  
               __end_of_check_msg 1B30                         ?_init_i2c 0097  
                     _SleepIfOkay 18B4                        _maxTickOne 0060  
                       ?_recv_msg 00A1                        _in_low_int 1902  
                    _handle_start 1228                           __Hparam 0000  
                       ?_send_msg 00A1                        _left_state 005E  
            __end_of_readMessages 1A8C                           __Lparam 0000  
      __end_of_timer0_int_handler 1BDC                       ?_WriteUSART 0001  
                init_uart_recv@uc 0097                           ___lwmod 14BA  
                    __psmallconst 0400                   __CFG_STVREN$OFF 000000  
                         __pcinit 1866                   __size_of_memcpy 005E  
                      _init_queue 1644                           __ramtop 0400  
             __size_of_OpenTimer0 002A               __size_of_OpenTimer1 0038  
                         __ptext0 09C4                           __ptext1 1160  
                         __ptext2 107E                           __ptext3 0D78  
                         __ptext4 16BE                           __ptext5 14BA  
                         __ptext6 1AC4                           __ptext7 0E86  
                         __ptext8 1CA0                           __ptext9 1BDC  
                       _T0CONbits 000FD5                           _in_main 1948  
                       _T1CONbits 000FCD               __end_of_WriteTimer0 1D0C  
             __end_of_WriteTimer1 1CE8                    ?i2_in_high_int 0017  
   uart_retrieve_buffer@msgbuffer 0099                    __pintcode_body 1544  
            end_of_initialization 18AA           timer1_lthread@msgbuffer 00B7  
    __end_of_FromMainHigh_sendmsg 1AFA        FromMainHigh_sendmsg@length 00B0  
                         memcpy@d 009D                           memcpy@n 009B  
                         memcpy@s 009F                        ??_init_i2c 0099  
     i2c_int_handler@data_written 0083                     __Lmediumconst 0000  
                         int_func 1544                     ?_uart_lthread 009C  
         __size_of_init_uart_recv 0028                  ?_i2c_int_handler 0001  
                      ??_recv_msg 00A8                      ??i2_send_msg 0027  
                      ??_send_msg 00A7                    main@portconfig 020D  
      __end_of_timer1_int_handler 1BB2                         _RCSTAbits 000FAB  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
       ToMainHigh_sendmsg@msgtype 002D                    _last_reg_recvd 0059  
     FromMainHigh_sendmsg@msgtype 00AD                         _TRISCbits 000F94  
              __end_ofi2_send_msg 139A               __size_of_WriteUSART 0014  
                  ??_uart_lthread 00A4                         _TXSTAbits 000FAC  
                      main@length 0220                       ?_in_low_int 0099  
              i1WriteTimer1@timer 0003             timer0_lthread@msgtype 0099  
__size_ofi2_start_i2c_slave_reply 00F4             _start_i2c_slave_reply 0D78  
    __size_of_i2c_configure_slave 0028              __size_ofi2_check_msg 0024  
        __end_of_enter_sleep_mode 1D34                _ToMainHigh_recvmsg 19CE  
              _ToMainHigh_sendmsg 1C2C                       _BAUDCONbits 000FB8  
                   __pidataCOMRAM 1D0C                    _timer0_lthread 1CA0  
                     ?_init_queue 0097                         i2memcpy@d 001D  
                     _WriteTimer0 1CFA                       _WriteTimer1 1CD6  
                       i2memcpy@n 001B                         i2memcpy@s 001F  
                  _timer1_lthread 16BE                    __end_of_memcpy 1866  
               _enable_interrupts 1D26              __size_of_Delay1KTCYx 0016  
             ?_ToMainHigh_recvmsg 00AF                   ??i2_in_high_int 0019  
        i2c_int_handler@data_read 0088               ?_ToMainHigh_sendmsg 002D  
              ?_enable_interrupts 0001               start_initialization 1866  
                   ??_in_high_int 0099                 __size_ofi2_memcpy 0040  
             ??_enable_interrupts 0097                      ??_OpenTimer0 0097  
                    ??_OpenTimer1 0097    __size_of_block_on_To_msgqueues 007E  
   __end_of_block_on_To_msgqueues 1644     __size_of_uart_retrieve_buffer 00E2  
                       _OpenUSART 139A             __size_of_readMessages 003C  
    __end_of_InterruptHandlerHigh 15C6                        init_i2c@ic 0097  
            ??_ToMainHigh_recvmsg 00B3              ??_ToMainHigh_sendmsg 0030  
           _uart_send_int_handler 142C            __end_of_timer0_lthread 1CB2  
        i2c_int_handler@error_buf 0080            __end_of_timer1_lthread 1730  
       __end_of_enable_interrupts 1D2E                          ??_memcpy 009D  
           timer1_lthread@msgtype 00B3              _FromMainHigh_sendmsg 1AC4  
           __end_ofi1_WriteTimer1 1CFA      __size_of_init_timer1_lthread 0012  
              __end_of_OpenTimer0 1B88                __end_of_OpenTimer1 1AC4  
        i2c_int_handler@msg_ready 0087                       __pbssCOMRAM 0033  
                   ??_init_queues 009B                     __pcstackBANK0 0080  
                   __pcstackBANK2 0200               __size_of_in_low_int 0046  
                    _readMessages 1A50          start_i2c_slave_reply@msg 0097  
             __CFG_CCP2MX$DEFAULT 000000                   Delay1KTCYx@unit 0097  
    __size_of_InterruptHandlerLow 009E               __end_of_in_high_int 1CD6  
                      ?_OpenUSART 0097                      ?_SleepIfOkay 0001  
           ToMainLow_recvmsg@data 00B1                      _ToMainLow_MQ 01A2  
             __size_of_init_queue 007A                    _init_uart_recv 1BDC  
                       _check_msg 1AFA                         __pnvBANK0 00C3  
          ?_start_i2c_slave_reply 0097                 __size_of_init_i2c 006A  
                    recv_msg@data 00A6                      ??_WriteUSART 0001  
                    recv_msg@qmsg 00AD                      recv_msg@slot 00AA  
                    recv_msg@qptr 00A1                 __size_of_recv_msg 0136  
                       __pintcode 0008                 __size_of_send_msg 0104  
                 ?_timer0_lthread 0097                          ?___lwmod 0097  
                 ?_timer1_lthread 00B1             ?_FromMainHigh_sendmsg 00AD  
                     __pintcodelo 0018            ToMainHigh_recvmsg@data 00B1  
            __end_of_uart_lthread 1228        i2c_int_handler@msg_to_send 0085  
                        ?_in_main 009B                       __smallconst 0400  
               WriteTimer0@timer0 0017                _timer0_int_handler 1BB2  
               WriteTimer1@timer1 0097               uart_lthread@msgtype 009E  
                       _fwd_state 005C        uart_retrieve_buffer@length 0097  
             ?_timer0_int_handler 0001                __end_of_WriteUSART 1CA0  
                uart_lthread@uptr 009C            __end_of_init_uart_recv 1C04  
             __end_of_init_queues 179E                          _LATAbits 000F89  
                 i2check_msg@qptr 0017                        ?_check_msg 0097  
                        _IPR1bits 000F9F                          _PIE1bits 000F9D  
         i2_start_i2c_slave_reply 0F8A                         _msgbuffer 0033  
                   ?i2_in_low_int 0019                          _PIR1bits 000F9E  
          ?_uart_send_int_handler 0001            ToMainHigh_sendmsg@data 002E  
                       _rev_state 0064                          _RCONbits 000FD0  
                __CFG_WDTPS$32768 000000              ??_timer0_int_handler 001B  
      __size_of_enable_interrupts 0008                     _timer0Counter 0053  
                   _timer1Counter 0055              timer0_lthread@length 009B  
              _timer1_int_handler 1B88              _InterruptHandlerHigh 0008  
                        i2_memcpy 1A10              timer0_lthread@msgval 009F  
                     _in_high_int 1CC4                      send_msg@data 00A5  
             _i2c_configure_slave 1C04                      send_msg@qmsg 00AB  
                    send_msg@slot 00AA                      send_msg@qptr 00A1  
           uart_lthread@msgbuffer 00A2                         copy_data0 189E  
             ?_timer1_int_handler 0001                   ?_init_uart_recv 0097  
                     ??_OpenUSART 0099                       _maxTickZero 0062  
                 OpenUSART@config 009C                    ??i2_in_low_int 001B  
                    ??_in_low_int 009B                          __Hrparam 0000  
            ?_i2c_configure_slave 0001                          __Lrparam 0000  
               ?_enter_sleep_mode 0001            ??_FromMainHigh_sendmsg 00B0  
            ??_timer1_int_handler 0005          __size_of_i2c_int_handler 05C0  
              ??_enter_sleep_mode 0017                  __size_of___lwmod 008A  
                    ??_init_queue 0099                      ?_WriteTimer0 0017  
                    ?_WriteTimer1 0097          FromMainHigh_sendmsg@data 00AE  
               main@t0thread_data 0210             ?_InterruptHandlerHigh 0001  
                __size_of_in_main 0044                 i2send_msg@msgtype 0024  
     ToMainHigh_recvmsg@maxlength 00B3                 i2send_msg@tlength 0028  
         init_timer1_lthread@tptr 0097                       _init_queues 1730  
                   _circumference 0401                __end_of_in_low_int 1948  
                        __ptext10 1CB2                          __ptext11 1730  
                        __ptext20 1AFA                          __ptext12 1644  
                        __ptext21 1C76                          __ptext13 179E  
                        __ptext22 1CD6                          __ptext14 1C04  
                        __ptext31 142C                          __ptext23 198C  
                        __ptext15 1D26                          __ptext40 0F8A  
                        __ptext32 1C8C                          __ptext24 19CE  
                        __ptext16 15C6                          __ptext41 1228  
                        __ptext33 1B88                          __ptext25 0C42  
                        __ptext17 1948                          __ptext42 1C2C  
                        __ptext34 1CE8                          __ptext26 1808  
                        __ptext18 1902                          __ptext43 12F0  
                        __ptext27 139A                          __ptext19 1CC4  
                        __ptext44 1A10                          __ptext36 1BB2  
                        __ptext28 1A8C                          __ptext45 18B4  
                        __ptext37 1CFA                          __ptext29 1B5E  
                        __ptext46 1B30                          __ptext38 0404  
                        __ptext47 1D1A                          __ptext39 1A50  
                        __ptext48 1C52                          __ptext49 1D2E  
              uart_lthread@length 00A0         ??i2_start_i2c_slave_reply 0019  
                        _init_i2c 179E               _init_timer1_lthread 1CB2  
                   __size_of_main 027E                     ??i2_check_msg 0019  
               main@t1thread_data 0212                       ??_check_msg 0099  
              __end_of_init_queue 16BE              __size_of_SleepIfOkay 004E  
                        _recv_msg 0C42             ??_i2c_configure_slave 0097  
                        _send_msg 0E86                    init_queue@qptr 0097  
           __size_of_uart_lthread 00C8                     ??_Delay1KTCYx 0097  
    __end_of_uart_retrieve_buffer 1160               _InterruptHandlerLow 0018  
            ?_init_timer1_lthread 0097                       _OSCTUNEbits 000F9B  
                      _INTCONbits 000FF2                    OpenUSART@spbrg 0097  
                        memcpy@d1 0097                          memcpy@s1 0099  
           __end_ofi2_in_high_int 1D26      i2c_int_handler@overrun_error 0084  
                i2send_msg@length 0023                          intlevel1 0000  
                        intlevel2 0000              ?_InterruptHandlerLow 0001  
                    _msgtype_moto 0068           ??_start_i2c_slave_reply 0099  
                ___lwmod@dividend 0097                       _right_state 0066  
                    _uart_lthread 1160             _block_on_To_msgqueues 15C6  
                   ?_handle_start 0001                  ??_timer0_lthread 009F  
     __size_of_ToMainHigh_recvmsg 0042       __size_of_ToMainHigh_sendmsg 0026  
                      _OSCCONbits 000FD3                  ??_timer1_lthread 00B9  
        ToMainHigh_sendmsg@length 0030               __end_ofi2_check_msg 1C76  
           ??_init_timer1_lthread 0099            ??_InterruptHandlerHigh 0089  
               _ToMainLow_recvmsg 198C                   ___lwmod@divisor 0099  
            __end_ofi2_in_low_int 1B5E                ?_ToMainLow_recvmsg 00AF  
             __end_of_Delay1KTCYx 1C8C                 ??_i2c_int_handler 0031  
                 ___lwmod@counter 009C                       _SSPCON1bits 000FC6  
                     _SSPCON2bits 000FC5                    i2send_msg@data 0025  
           ??_InterruptHandlerLow 0006               ??_ToMainLow_recvmsg 00B3  
                  i2send_msg@qmsg 002B                    i2send_msg@slot 002A  
                  i2send_msg@qptr 0021            __size_ofi1_WriteTimer1 0012  
         ??_uart_send_int_handler 0002                    ??_handle_start 0017  
                    _USART_Status 0058  
